<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用nvm管理Node版本</title>
      <link href="/posts/747b4ac0.html"/>
      <url>/posts/747b4ac0.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>Node的包特别多而且根据版本的不同会有很多不同的东西所以我们需要一个东西来切换Node的不同版本</p><h1 id="nvm的安装"><a href="#nvm的安装" class="headerlink" title="nvm的安装"></a>nvm的安装</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>下载地址 <object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/coreybutler/nvm-windows/releases&"></object> 备用：<a href="https://xiaozoutx.lanzoub.com/i9xgu0zri0bc">下载</a></p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>下面需要设置两个安装路径 第一个为 <code>nvm</code>的安装路径</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222051901.webp" alt="image-20230622204330473"></p><p>第二个设置的是nvm下载的 <code>Node</code>的保存路径</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222051910.webp" alt="image-20230622204535974"></p><p>然后点击安装就可以了</p><h2 id="添加加速镜像"><a href="#添加加速镜像" class="headerlink" title="添加加速镜像"></a>添加加速镜像</h2><p>安装成功之后打开安装目录 打开 <code>setting.txt</code>文件在里边添加以下代码</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node_mirror: https://npm.taobao.org/mirrors/node/</span><br><span class="line">npm_mirror: https://npm.taobao.org/mirrors/npm/</span><br></pre></td></tr></table></figure><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222051019.webp" alt="image-20230622204759413"></p><h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><blockquote><ul><li>nvm ls                             // 查看安装的所有node.js的版本</li><li>nvm list available            // 显示可以安装的所有node.js的版本</li><li>nvm install 版本号           // 例如：nvm install 12.19.0</li><li>nvm use 版本号               // 切换到指定的nodejs版本</li></ul></blockquote><p>下载之后切换到指定版本就可以使用了</p>]]></content>
      
      
      <categories>
          
          <category> 环境安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些常用的python代码</title>
      <link href="/posts/b5012ef4.html"/>
      <url>/posts/b5012ef4.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="08a806e43804aa31fb00b08a2f47d6465cbad748ea525a8688b24ed09c28f646"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="您好, 这里需要密码.">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git安装与配置</title>
      <link href="/posts/bfed1ba3.html"/>
      <url>/posts/bfed1ba3.html</url>
      
        <content type="html"><![CDATA[<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>首先打开<a href="https://git-scm.com/">官网</a>  点击 <code>Download for Windows</code> 阿里镜像：<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/">查看</a></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221809543.webp" alt="image-20230622172243914"></p><p>选择下载</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221809383.webp" alt="image-20230622172441101"></p><p>下载过慢可以去阿里云镜像下载</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>我安装的版本是 <code>Git-2.41.0</code>版本</p><h3 id="1-使用许可声明"><a href="#1-使用许可声明" class="headerlink" title="1. 使用许可声明"></a>1. 使用许可声明</h3><p>这个界面主要展示了 GPL协议的内容，点击 [next] 到第二步。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221810075.webp" alt="image-20230622173018607"></p><h3 id="2-选择安装目录"><a href="#2-选择安装目录" class="headerlink" title="2. 选择安装目录"></a>2. 选择安装目录</h3><p>可点击 <code>Browse…</code> 更换目录</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221810260.webp" alt="image-20230622173044827"></p><h3 id="3-选择安装组件"><a href="#3-选择安装组件" class="headerlink" title="3. 选择安装组件"></a>3. 选择安装组件</h3><p>根据自己的需要选择勾选。点击 [next] 到第四步</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221810774.webp" alt="image-20230622173436589"></p><blockquote><p>注：最后一个选项打勾的话，需要下载 Windows Terminal 配合 Git Bash使用</p></blockquote><h3 id="4-选择开始菜单文件夹"><a href="#4-选择开始菜单文件夹" class="headerlink" title="4. 选择开始菜单文件夹"></a>4. 选择开始菜单文件夹</h3><p>方框内 Git 可改为其他名字，也可点击 “<code>Browse...</code>” 选择其他文件夹或者给”<code>Don&#39;t create a Start Menu folder</code>“ 打勾不要文件夹，点击 [next] 到第五步。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221810841.webp" alt="image-20230622173620661"></p><h3 id="5-选择-Git-默认编辑器"><a href="#5-选择-Git-默认编辑器" class="headerlink" title="5. 选择 Git 默认编辑器"></a>5. 选择 Git 默认编辑器</h3><p>Git 安装程序里面内置了 10 种编辑器供你挑选，比如 <code>Atom</code>、<code>Notepad</code>、<code>Notepad++</code>、<code>Sublime Text</code>、<code>Visual Studio Code</code>、<code>Vim</code> 等等，默认的是 Vim ，选择 Vim 后可以直接进行到下一步.如果想使用其他软件的那么请先将软件配置到环境变量之后再使用</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221810668.webp" alt="image-20230622173740298"></p><h3 id="6-决定初始化新项目-仓库-的主干名字"><a href="#6-决定初始化新项目-仓库-的主干名字" class="headerlink" title="6. 决定初始化新项目(仓库)的主干名字"></a>6. 决定初始化新项目(仓库)的主干名字</h3><p>第一种是让 Git 自己选择，名字是 <code>master</code> ，但是未来也有可能会改为其他名字；第二种是我们自行决定，默认是 <code>main</code>，当然，你也可以改为其他的名字。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221810041.webp" alt="image-20230622174035832"></p><h3 id="7-调整你的-path-环境变量"><a href="#7-调整你的-path-环境变量" class="headerlink" title="7. 调整你的 path 环境变量"></a>7. 调整你的 path 环境变量</h3><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221810398.webp" alt="image-20230622174131694"></p><ul><li>第一种是仅从 Git Bash 使用 Git。这个的意思就是你只能通过 Git 安装后的 Git Bash 来使用 Git ，其他的什么命令提示符啊等第三方软件都不行。</li><li>第二种是从命令行以及第三方软件进行 Git。这个就是在第一种基础上进行第三方支持，你将能够从 Git Bash，命令提示符(cmd) 和 Windows PowerShell 以及可以从 Windows 系统环境变量中寻找 Git 的任何第三方软件中使用 Git。推荐使用这个。</li><li>第三种是从命令提示符使用 Git 和可选的 Unix 工具。选择这种将覆盖 Windows 工具，如 “ find 和 sort ”。只有在了解其含义后才使用此选项。</li></ul><h3 id="8-选择-SSH-执行文件"><a href="#8-选择-SSH-执行文件" class="headerlink" title="8. 选择 SSH 执行文件"></a>8. 选择 SSH 执行文件</h3><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221810150.webp" alt="image-20230622174308707"></p><ul><li>第一种是使用捆绑的 OpenSSH 这使用的 ssh.exe 是 Git 自带的 。<code>默认第一种</code></li><li>第二种是使用外部 OpenSSH 新！这使用外部 ssh.exe 文件。Git 不会安装自己的 OpenSSH（和相关）二进制文件，而是使用在环境变量 PATH 中找到的它们。</li></ul><h3 id="9-选择HTTPS后端传输"><a href="#9-选择HTTPS后端传输" class="headerlink" title="9. 选择HTTPS后端传输"></a>9. 选择HTTPS后端传输</h3><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221810215.webp" alt="image-20230622174449734"></p><ul><li>第一种是：使用 OpenSSL 库 服务器证书将使用 ca-bundle.crt 文件进行验证。<code>默认第一种</code></li><li>第二种是：使用本机 Windows 安全通道库 服务器证书将使用 Windows 证书存储进行验证。此选项还允许您使用公司内部分发的内部根 CA 证书，例如通过 Active Directory 域服务。</li></ul><h3 id="10-配置行尾符号转换"><a href="#10-配置行尾符号转换" class="headerlink" title="10. 配置行尾符号转换"></a>10. 配置行尾符号转换</h3><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221810361.webp" alt="image-20230622174838480"></p><ul><li>第一种是：签出 Windows 样式，提交 Unix 样式的行结尾。<code>windows用户选择第一种</code></li><li>第二种是：按原样签出，提交Unix样式的行结尾</li><li>第三种是：按原样签出，按原样提交</li></ul><h3 id="11-配置终端模拟器以与-Git-Bash-一起使用"><a href="#11-配置终端模拟器以与-Git-Bash-一起使用" class="headerlink" title="11. 配置终端模拟器以与 Git Bash 一起使用"></a>11. 配置终端模拟器以与 Git Bash 一起使用</h3><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221810604.webp" alt="image-20230622175107698"></p><ul><li>第一种：使用 MinTTY（MSYS2的默认终端）<code>默认就可以了</code></li><li>第二种： 使用 Windows 的默认控制台窗口</li></ul><h3 id="12-选择默认的-git-pull行为"><a href="#12-选择默认的-git-pull行为" class="headerlink" title="12. 选择默认的 git pull行为"></a>12. 选择默认的 <code>git pull</code>行为</h3><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221811769.webp" alt="image-20230622175256819"></p><p>默认就可以了</p><h3 id="13-选择一个凭证帮助程序"><a href="#13-选择一个凭证帮助程序" class="headerlink" title="13. 选择一个凭证帮助程序"></a>13. 选择一个凭证帮助程序</h3><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221811324.webp" alt="image-20230622175511215"></p><p>默认</p><h3 id="14-配置额外的选项"><a href="#14-配置额外的选项" class="headerlink" title="14. 配置额外的选项"></a>14. 配置额外的选项</h3><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221811754.webp" alt="image-20230622175609798"></p><p>默认</p><h3 id="15-配置实验性选项"><a href="#15-配置实验性选项" class="headerlink" title="15.配置实验性选项"></a>15.配置实验性选项</h3><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221811362.webp" alt="image-20230622175646742"></p><p>默认都不开启</p><p>之后就开始安装了</p><h3 id="16-安装成功"><a href="#16-安装成功" class="headerlink" title="16. 安装成功"></a>16. 安装成功</h3><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221811055.webp" alt="image-20230622175819440"></p><h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><p>打开 <code>git bash</code>配置邮箱和用户名(–global表示全局配置)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置用户名</span></span><br><span class="line">git config --global user.name &quot;aboyzy&quot;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">配置邮箱</span></span><br><span class="line">git config --global user.email  &quot;xiaozoutx@outlook.com&quot;</span><br></pre></td></tr></table></figure><p>查询配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global --list</span><br></pre></td></tr></table></figure><p>生成ssh密钥输入命令然后三次回车就可以了</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa</span><br></pre></td></tr></table></figure><p>默认存储在 <code>C:\Users\用户名\.ssh</code>文件夹下将 <code>id_rsa.pub</code>上传到GitHub设置中就可以链接到GitHub了</p>]]></content>
      
      
      <categories>
          
          <category> 环境安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 环境安装 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python安装与环境配置</title>
      <link href="/posts/9c451689.html"/>
      <url>/posts/9c451689.html</url>
      
        <content type="html"><![CDATA[<h1 id="python安装与配置"><a href="#python安装与配置" class="headerlink" title="python安装与配置"></a>python安装与配置</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>打开官网<a href="https://www.python.org/">Welcome to Python.org</a></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222017935.webp" alt="image-20230622191127997"></p><p>直接下载最新版 如果想要其他版本可以直接点击windows那一栏会跳转</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>其实可以 <code>直接install now</code>但是我为了演示还是选择下边那个分步</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222018217.webp" alt="image-20230622191611151"></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222018252.webp" alt="image-20230622191957896"></p><p>下一步</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222018665.webp" alt="image-20230622192115711"></p><p>点击安装</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222018873.webp" alt="image-20230622192332836"></p><p>安装完成点击close</p><h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><p><code>cmd</code>执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip config set global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222018188.webp" alt="image-20230622192700916"></p><p>升级pip</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure><h1 id="Anaconda"><a href="#Anaconda" class="headerlink" title="Anaconda"></a>Anaconda</h1><h2 id="下载-1"><a href="#下载-1" class="headerlink" title="下载"></a>下载</h2><p>官网 <a href="https://www.anaconda.com/">https://www.anaconda.com/</a> (非常不建议) 清华源： <a href="https://mirrors.tuna.tsinghua.edu.cn/anaconda/archive/">查看</a> 强烈推荐👍  下载所需版本</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222018075.webp" alt="image-20230622194100505"></p><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><ol><li><p>开始安装</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222018734.webp" alt="image-20230622194206889"></p></li><li><p>用户协议</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222018049.webp" alt="image-20230622194307932"></p></li><li><p>安装用户</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222018922.webp" alt="image-20230622194336555"></p></li><li><p>选择安装目录</p><blockquote><p>路径中不要出现中文字符</p></blockquote><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222018087.webp" alt="image-20230622194418000"></p></li><li><p>高级安装选项 自定义Anaconda3如何与Windows集成</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222019032.webp" alt="image-20230622194629324"></p><ul><li>创建开始菜单快捷方式（仅支持软件包)</li><li>注册Ancanda3为pythan3.10</li><li>完成后清除包缓存</li></ul></li><li><p>安装完成</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222019204.webp" alt="image-20230622195400154"></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222019524.webp" alt="image-20230622195426044"></p></li></ol><h2 id="配置环境"><a href="#配置环境" class="headerlink" title="配置环境"></a>配置环境</h2><p>添加新的环境变量 <code>ANACONDA_HOME</code> 值为安装的目录</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222019053.webp" alt="image-20230622200155576"></p><p>在 <code>path</code>中添加以下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">%ANACONDA_HOME%</span><br><span class="line">%ANACONDA_HOME%\Scripts</span><br><span class="line">%ANACONDA_HOME%\Library\bin</span><br><span class="line">%ANACONDA_HOME%\Library\mingw-w64\bin</span><br></pre></td></tr></table></figure><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222019702.webp" alt="image-20230622200644189"></p><p>验证安装成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># cmd输入</span><br><span class="line">conda --version</span><br></pre></td></tr></table></figure><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306222019787.webp" alt="image-20230622200812091"></p><h2 id="换源-1"><a href="#换源-1" class="headerlink" title="换源"></a>换源</h2><p><code>cmd</code>输入以下内容换为清华源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/</span><br><span class="line">conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/</span><br><span class="line">conda config --set show_channel_urls yes</span><br></pre></td></tr></table></figure><p>查看源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --show</span><br></pre></td></tr></table></figure><p>恢复默认源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --remove-key channels</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 环境安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境安装 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JAVA安装</title>
      <link href="/posts/8f6ffd84.html"/>
      <url>/posts/8f6ffd84.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>这不是重装系统了嘛准备把装配置的过程写一遍方便以后查看</p><h1 id="Java安装"><a href="#Java安装" class="headerlink" title="Java安装"></a>Java安装</h1><h2 id="下载JDK"><a href="#下载JDK" class="headerlink" title="下载JDK"></a>下载JDK</h2><p>官方下载链接:<a href="https://www.oracle.com/java/technologies/javase/javase8u211-later-archive-downloads.html">这里</a> 备用 : win：<a href="https://cowtransfer.com/s/e984fd19562449">奶牛快传</a></p><p>选择自己系统对应的版本下载 备用的是windows的其他版本情趣官方下载链接下载</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>在c盘新建文件夹 <code>winpath/Java</code>用来存放计算机安装的环境方便管理</p><p>双击打开文件 <code>jdk-8u361-windows-x64.exe</code>，点击下一步：</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221502399.webp" alt="image-20230622143240966"></p><p>点击更改</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221502339.webp" alt="image-20230622143321442"></p><p>将文件夹改为刚才的目录：<code>C:\winpath\Java\jdk1.8.0_361</code>然后点击下一步等待安装 （只需要将program Files给换成winpath就可以了）</p><p>此时在 <code>C:\winpath\Java\</code>下面创建文件夹 <code>jre1.8.0_361</code>，与 <code>C:\winpath\Java\jdk1.8.0_361\</code>平级</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221502449.webp" alt="image-20230622144649928"></p><p>在弹出的jre安装界面中选择安装目录更改为 <code>C:\winpath\Java\jre1.8.0_361\</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221502223.webp" alt="image-20230622144811234"></p><p>点击下一步，在最后弹出的窗口点击关闭即可。</p><h2 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h2><p>在windows下方搜索栏搜索 <code>环境变量</code>然后选择编辑系统环境变量</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221502694.webp" alt="image-20230622144938706"></p><p>添加环境变量 <code>JAVA_HOME</code> 值为jdk的安装目录 <code>C:\winpath\Java\jdk1.8.0_361</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221502200.webp" alt="image-20230622145204698"></p><p>相同的方法再添加 <code>JRE_HOME</code>值为jre的安装目录 <code>C:\winpath\Java\jre1.8.0_361</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221502293.webp" alt="image-20230622145615182"></p><p>变量名：<code>CLASSPATH</code>，变量值：<code>.;%JAVA_HOME%\lib\dt.jar;%JAVA_HOME%\lib\tools.jar;</code>，注意变量值的前面有一个 <code>.</code>，点击确定；</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221502361.webp" alt="image-20230622145556114"></p><p>点开双击点开 <code>path</code>也可选中之后点击编辑</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221503150.webp" alt="image-20230622145709490"></p><p>点击 <code>新建</code>添加两个变量值：<code>%JAVA_HOME%\bin</code>，<code>%JRE_HOME%\bin</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221505047.webp" alt="image-20230622150503874"></p><p>点击确定，把打开的几个界面全部关闭，这样Java环境变量即为配置完毕。</p><h2 id="验证安装"><a href="#验证安装" class="headerlink" title="验证安装"></a>验证安装</h2><p>打开 <code>cmd</code>输入 <code>java</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221503335.webp" alt="image-20230622150003657"></p><p><code>javac</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221503845.webp" alt="image-20230622150035009"></p><p>至此安装结束 如果没有出现上述图片而报出 <code>java不是内部或外部命令，也不是可运行的程序或批处理文件</code>结果那么就是你的配置出现了问题,请检查环境变量和java是否安装</p><h1 id="Maven安装"><a href="#Maven安装" class="headerlink" title="Maven安装"></a>Maven安装</h1><h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>官网地址：<a href="https://maven.apache.org/">查看</a> 在左侧选择 <code>Download</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221526759.webp" alt="image-20230622151708524"></p><p>windows用户直接下载 <code>apache-maven-3.9.2-bin.zip</code></p><p>下载完成后将压缩包进行解压，解压到 <code>C:\winpath</code>，得到如下：</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221526478.webp" alt="image-20230622152024342"></p><h2 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h2><p>搜索环境变量</p><p>新建 <code>MAVEN_HOME</code> 值：<code>C:\winpath\apache-maven-3.9.2</code></p><p>在 <code>path</code>中添加 <code>%MAVEN_HOME%\bin</code></p><h2 id="验证安装-1"><a href="#验证安装-1" class="headerlink" title="验证安装"></a>验证安装</h2><p>打开 <code>cmd</code></p><p>输入 <code>mvn -v</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306221526308.webp" alt="image-20230622152455829"></p><p>出现如图所示则为成功</p>]]></content>
      
      
      <categories>
          
          <category> 环境安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境安装 </tag>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jetbrains系列激活</title>
      <link href="/posts/5f7dbcf8.html"/>
      <url>/posts/5f7dbcf8.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>做个激活攻略方便分享</p></blockquote><h2 id="下载软件"><a href="#下载软件" class="headerlink" title="下载软件"></a>下载软件</h2><p>这个就不用说了吧直接去官网 <a href="https://www.jetbrains.com/zh-cn/">https://www.jetbrains.com/zh-cn/</a> 点击 <code>开发者工具</code>要下哪个直接下。</p><h2 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h2><p>使用开源项目 <object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/libin9iOak/ja-netfilter-all&"></object>  蓝奏云下载链接 ：<a href="https://xiaozoutx.lanzoub.com/iMJEt0zomh9i">下载</a>  密码:<span class='p green'>xztx</span> 如果失效了就去Github下载</p><p>下载完成之后<span class='p red'>解压文件</span>进入 <code>scripts</code>文件夹</p><div class="note danger modern"><p>注意：这里一定要把文件解压到一个文件夹，不要直接在压缩包里打开，而且这个文件夹不要删除，删除了激活就无效了</p></div><p>点击 <code>install-all-users.vbs</code>文件</p><blockquote><p>直到出现弹窗down出现再打开idea</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306211730635.webp" alt="image-20230621172009658"></p></blockquote><p>在激活方式中选择 <code>Activation code</code> 填写以下激活密钥</p><details class="folding-tag" green open><summary> 激活密钥 </summary>              <div class='content'>              <p><details class="folding-tag" green><summary> IDEA </summary>              <div class='content'>              <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">6G5NXCPJZB-eyJsaWNlbnNlSWQiOiI2RzVOWENQSlpCIiwibGljZW5zZWVOYW1lIjoic2lnbnVwIHNjb290ZXIiLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJQU0kiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBEQiIsImZhbGxiYWNrRGF0ZSI6IjIwMjUtMDgtMDEiLCJwYWlkVXBUbyI6IjIwMjUtMDgtMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiSUkiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJQUEMiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBHTyIsImZhbGxiYWNrRGF0ZSI6IjIwMjUtMDgtMDEiLCJwYWlkVXBUbyI6IjIwMjUtMDgtMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFNXIiwiZmFsbGJhY2tEYXRlIjoiMjAyNS0wOC0wMSIsInBhaWRVcFRvIjoiMjAyNS0wOC0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQV1MiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBQUyIsImZhbGxiYWNrRGF0ZSI6IjIwMjUtMDgtMDEiLCJwYWlkVXBUbyI6IjIwMjUtMDgtMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiUFJCIiwiZmFsbGJhY2tEYXRlIjoiMjAyNS0wOC0wMSIsInBhaWRVcFRvIjoiMjAyNS0wOC0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQQ1dNUCIsImZhbGxiYWNrRGF0ZSI6IjIwMjUtMDgtMDEiLCJwYWlkVXBUbyI6IjIwMjUtMDgtMDEiLCJleHRlbmRlZCI6dHJ1ZX1dLCJtZXRhZGF0YSI6IjAxMjAyMjA5MDJQU0FOMDAwMDA1IiwiaGFzaCI6IlRSSUFMOi0xMDc4MzkwNTY4IiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-SnRVlQQR1/9nxZ2AXsQ0seYwU5OjaiUMXrnQIIdNRvykzqQ0Q+vjXlmO7iAUwhwlsyfoMrLuvmLYwoD7fV8Mpz9Gs2gsTR8DfSHuAdvZlFENlIuFoIqyO8BneM9paD0yLxiqxy/WWuOqW6c1v9ubbfdT6z9UnzSUjPKlsjXfq9J2gcDALrv9E0RPTOZqKfnsg7PF0wNQ0/d00dy1k3zI+zJyTRpDxkCaGgijlY/LZ/wqd/kRfcbQuRzdJ/JXa3nj26rACqykKXaBH5thuvkTyySOpZwZMJVJyW7B7ro/hkFCljZug3K+bTw5VwySzJtDcQ9tDYuu0zSAeXrcv2qrOg==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUlaUFc1wf+CfY9wzFWEL2euKQ5nswqb57V8QZG7d7RoR6rwYUIXseTOAFq210oMEe++LCjzKDuqwDfsyhgDNTgZBPAaC4vUU2oy+XR+Fq8nBixWIsH668HeOnRK6RRhsr0rJzRB95aZ3EAPzBuQ2qPaNGm17pAX0Rd6MPRgjp75IWwI9eA6aMEdPQEVN7uyOtM5zSsjoj79Lbu1fjShOnQZuJcsV8tqnayeFkNzv2LTOlofU/Tbx502Ro073gGjoeRzNvrynAP03pL486P3KCAyiNPhDs2z8/COMrxRlZW5mfzo0xsK0dQGNH3UoG/9RVwHG4eS8LFpMTR9oetHZBAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBABqRoNGxAQct9dQUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/we9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD</span><br></pre></td></tr></table></figure>              </div>            </details></p><p><details class="folding-tag" green><summary> PyCharm </summary>              <div class='content'>              <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">EUWT4EE9X2-eyJsaWNlbnNlSWQiOiJFVVdUNEVFOVgyIiwibGljZW5zZWVOYW1lIjoic2lnbnVwIHNjb290ZXIiLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJQU0kiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBDIiwiZmFsbGJhY2tEYXRlIjoiMjAyNS0wOC0wMSIsInBhaWRVcFRvIjoiMjAyNS0wOC0wMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUFBDIiwiZmFsbGJhY2tEYXRlIjoiMjAyNS0wOC0wMSIsInBhaWRVcFRvIjoiMjAyNS0wOC0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQV1MiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBDV01QIiwiZmFsbGJhY2tEYXRlIjoiMjAyNS0wOC0wMSIsInBhaWRVcFRvIjoiMjAyNS0wOC0wMSIsImV4dGVuZGVkIjp0cnVlfV0sIm1ldGFkYXRhIjoiMDEyMDIyMDkwMlBTQU4wMDAwMDUiLCJoYXNoIjoiVFJJQUw6MzUzOTQ0NTE3IiwiZ3JhY2VQZXJpb2REYXlzIjo3LCJhdXRvUHJvbG9uZ2F0ZWQiOmZhbHNlLCJpc0F1dG9Qcm9sb25nYXRlZCI6ZmFsc2V9-FT9l1nyyF9EyNmlelrLP9rGtugZ6sEs3CkYIKqGgSi608LIamge623nLLjI8f6O4EdbCfjJcPXLxklUe1O/5ASO3JnbPFUBYUEebCWZPgPfIdjw7hfA1PsGUdw1SBvh4BEWCMVVJWVtc9ktE+gQ8ldugYjXs0s34xaWjjfolJn2V4f4lnnCv0pikF7Ig/Bsyd/8bsySBJ54Uy9dkEsBUFJzqYSfR7Z/xsrACGFgq96ZsifnAnnOvfGbRX8Q8IIu0zDbNh7smxOwrz2odmL72UaU51A5YaOcPSXRM9uyqCnSp/ENLzkQa/B9RNO+VA7kCsj3MlJWJp5Sotn5spyV+gA==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUlaUFc1wf+CfY9wzFWEL2euKQ5nswqb57V8QZG7d7RoR6rwYUIXseTOAFq210oMEe++LCjzKDuqwDfsyhgDNTgZBPAaC4vUU2oy+XR+Fq8nBixWIsH668HeOnRK6RRhsr0rJzRB95aZ3EAPzBuQ2qPaNGm17pAX0Rd6MPRgjp75IWwI9eA6aMEdPQEVN7uyOtM5zSsjoj79Lbu1fjShOnQZuJcsV8tqnayeFkNzv2LTOlofU/Tbx502Ro073gGjoeRzNvrynAP03pL486P3KCAyiNPhDs2z8/COMrxRlZW5mfzo0xsK0dQGNH3UoG/9RVwHG4eS8LFpMTR9oetHZBAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBABqRoNGxAQct9dQUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/we9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD</span><br></pre></td></tr></table></figure>              </div>            </details></p><p><details class="folding-tag" green><summary> PhpStorm </summary>              <div class='content'>              <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">DXHN0R5Z4F-eyJsaWNlbnNlSWQiOiJEWEhOMFI1WjRGIiwibGljZW5zZWVOYW1lIjoic2lnbnVwIHNjb290ZXIiLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJQU0kiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBTIiwiZmFsbGJhY2tEYXRlIjoiMjAyNS0wOC0wMSIsInBhaWRVcFRvIjoiMjAyNS0wOC0wMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUFdTIiwiZmFsbGJhY2tEYXRlIjoiMjAyNS0wOC0wMSIsInBhaWRVcFRvIjoiMjAyNS0wOC0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQUFMiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBDV01QIiwiZmFsbGJhY2tEYXRlIjoiMjAyNS0wOC0wMSIsInBhaWRVcFRvIjoiMjAyNS0wOC0wMSIsImV4dGVuZGVkIjp0cnVlfV0sIm1ldGFkYXRhIjoiMDEyMDIyMDkwMlBTQU4wMDAwMDUiLCJoYXNoIjoiVFJJQUw6LTE2MDY1NjU0NzQiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-PXxjbi2g20tUcfzptAnY/ZIKQbXW3FwXJ3P5scBMkXrya0Wg0YviqciwEWJe5laYfWevv8RzEEwrAcxz5ug1RYrg4bjZ7mJiQoOatsKahqGT1TDfU5YGpZPfbtjlKHAlYSszioJ0pka6go2qBa5AaPj4HmKfB4jkeGX4inRxPrIxc8PyAo0wyWWEaZ7R4pLC4ZDqIAYJ/IzXIf1V84+p5hGYd6QD6ze1BCEGxI/E8LjloaIvv0oNdkV2qTyDCH9IF3E42iheOwazyrlOWYivYyn/ew0kvjGwwSdbrbIJH7SSbaz2nxlBWnR04yJaI4txnnS1eUbiUNQtEhKJ3uD6oQ==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUlaUFc1wf+CfY9wzFWEL2euKQ5nswqb57V8QZG7d7RoR6rwYUIXseTOAFq210oMEe++LCjzKDuqwDfsyhgDNTgZBPAaC4vUU2oy+XR+Fq8nBixWIsH668HeOnRK6RRhsr0rJzRB95aZ3EAPzBuQ2qPaNGm17pAX0Rd6MPRgjp75IWwI9eA6aMEdPQEVN7uyOtM5zSsjoj79Lbu1fjShOnQZuJcsV8tqnayeFkNzv2LTOlofU/Tbx502Ro073gGjoeRzNvrynAP03pL486P3KCAyiNPhDs2z8/COMrxRlZW5mfzo0xsK0dQGNH3UoG/9RVwHG4eS8LFpMTR9oetHZBAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBABqRoNGxAQct9dQUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/we9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD</span><br></pre></td></tr></table></figure>              </div>            </details></p><p><details class="folding-tag" green><summary> WebStorm </summary>              <div class='content'>              <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">8R927DG13X-eyJsaWNlbnNlSWQiOiI4UjkyN0RHMTNYIiwibGljZW5zZWVOYW1lIjoic2lnbnVwIHNjb290ZXIiLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJQU0kiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IldTIiwiZmFsbGJhY2tEYXRlIjoiMjAyNS0wOC0wMSIsInBhaWRVcFRvIjoiMjAyNS0wOC0wMSIsImV4dGVuZGVkIjpmYWxzZX0seyJjb2RlIjoiUFdTIiwiZmFsbGJhY2tEYXRlIjoiMjAyNS0wOC0wMSIsInBhaWRVcFRvIjoiMjAyNS0wOC0wMSIsImV4dGVuZGVkIjp0cnVlfSx7ImNvZGUiOiJQQ1dNUCIsImZhbGxiYWNrRGF0ZSI6IjIwMjUtMDgtMDEiLCJwYWlkVXBUbyI6IjIwMjUtMDgtMDEiLCJleHRlbmRlZCI6dHJ1ZX1dLCJtZXRhZGF0YSI6IjAxMjAyMjA5MDJQU0FOMDAwMDA1IiwiaGFzaCI6IlRSSUFMOjIwMTEzMjMwMjYiLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-Jev3eIT6wPDh59rzeBG67oHD8GcYHifz9+OkIePP3Qo49dGX1DqLTGJgOxSClHrshRzjOktdBYwkwpeTrDMwgeGu+cy0OhzvtQMeh7R3HrEQkhGbNBjfpbW6nq6Mhv8k6Duoiw3XiU434V5iM6DgRN3Yzo8VKxU7Kb4u/SQnPTd+PR64hYJjblVXUzGHZUX4w8RBej3T0EREccs36bfnnPC2X91K/qbvr9C0uY/feHAMpuekMks0v4qApbInpw5O+elLE3l8txlNWhWSC8m/O/S7iydf27hV5mgePM5422Rpvm4dmA2DIQcq7xxdt4X67DmVGMC2yIFiH4hfkqySWg==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUlaUFc1wf+CfY9wzFWEL2euKQ5nswqb57V8QZG7d7RoR6rwYUIXseTOAFq210oMEe++LCjzKDuqwDfsyhgDNTgZBPAaC4vUU2oy+XR+Fq8nBixWIsH668HeOnRK6RRhsr0rJzRB95aZ3EAPzBuQ2qPaNGm17pAX0Rd6MPRgjp75IWwI9eA6aMEdPQEVN7uyOtM5zSsjoj79Lbu1fjShOnQZuJcsV8tqnayeFkNzv2LTOlofU/Tbx502Ro073gGjoeRzNvrynAP03pL486P3KCAyiNPhDs2z8/COMrxRlZW5mfzo0xsK0dQGNH3UoG/9RVwHG4eS8LFpMTR9oetHZBAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBABqRoNGxAQct9dQUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/we9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD</span><br></pre></td></tr></table></figure>              </div>            </details></p><p><details class="folding-tag" green><summary> DateGrip </summary>              <div class='content'>              <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">VPQ9LWBJ0Z-eyJsaWNlbnNlSWQiOiJWUFE5TFdCSjBaIiwibGljZW5zZWVOYW1lIjoic2lnbnVwIHNjb290ZXIiLCJhc3NpZ25lZU5hbWUiOiIiLCJhc3NpZ25lZUVtYWlsIjoiIiwibGljZW5zZVJlc3RyaWN0aW9uIjoiIiwiY2hlY2tDb25jdXJyZW50VXNlIjpmYWxzZSwicHJvZHVjdHMiOlt7ImNvZGUiOiJQU0kiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOnRydWV9LHsiY29kZSI6IlBEQiIsImZhbGxiYWNrRGF0ZSI6IjIwMjUtMDgtMDEiLCJwYWlkVXBUbyI6IjIwMjUtMDgtMDEiLCJleHRlbmRlZCI6dHJ1ZX0seyJjb2RlIjoiREIiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOmZhbHNlfSx7ImNvZGUiOiJQV1MiLCJmYWxsYmFja0RhdGUiOiIyMDI1LTA4LTAxIiwicGFpZFVwVG8iOiIyMDI1LTA4LTAxIiwiZXh0ZW5kZWQiOnRydWV9XSwibWV0YWRhdGEiOiIwMTIwMjIwOTAyUFNBTjAwMDAwNSIsImhhc2giOiJUUklBTDotMjI4OTE3MTciLCJncmFjZVBlcmlvZERheXMiOjcsImF1dG9Qcm9sb25nYXRlZCI6ZmFsc2UsImlzQXV0b1Byb2xvbmdhdGVkIjpmYWxzZX0=-Y35sXvjNUN0+WMouR7PGFzl62+ApqSBgPjwganzPG1ErZKJS1xh3O8MbkZnjiTPkjODi+pyBGjozBojATCzTGx4uCt61zccnyF+XI1fE9H9WTA5DAO3/maxGFJ2KthOmkuktNnNi9qa0n7EyRuZ8rVVrc5+ETiEcfo2GctNcGqHKuRF96Bf8EL1GmCOkI8vU293X+n3XKEmN+Q1hEEBGbP9yiF5zhZDzFq0svj8g4c0fnTOrCc4GKyyEps6aDW2/DurkotUFddzDhTCyoW1Gao0EZt0AnWUALsogI9ABjdtJq3ndyvuMrXTlOr2C/hCGjqIN8ZDA0gf9mnrKBhcMbA==-MIIETDCCAjSgAwIBAgIBDTANBgkqhkiG9w0BAQsFADAYMRYwFAYDVQQDDA1KZXRQcm9maWxlIENBMB4XDTIwMTAxOTA5MDU1M1oXDTIyMTAyMTA5MDU1M1owHzEdMBsGA1UEAwwUcHJvZDJ5LWZyb20tMjAyMDEwMTkwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQCUlaUFc1wf+CfY9wzFWEL2euKQ5nswqb57V8QZG7d7RoR6rwYUIXseTOAFq210oMEe++LCjzKDuqwDfsyhgDNTgZBPAaC4vUU2oy+XR+Fq8nBixWIsH668HeOnRK6RRhsr0rJzRB95aZ3EAPzBuQ2qPaNGm17pAX0Rd6MPRgjp75IWwI9eA6aMEdPQEVN7uyOtM5zSsjoj79Lbu1fjShOnQZuJcsV8tqnayeFkNzv2LTOlofU/Tbx502Ro073gGjoeRzNvrynAP03pL486P3KCAyiNPhDs2z8/COMrxRlZW5mfzo0xsK0dQGNH3UoG/9RVwHG4eS8LFpMTR9oetHZBAgMBAAGjgZkwgZYwCQYDVR0TBAIwADAdBgNVHQ4EFgQUJNoRIpb1hUHAk0foMSNM9MCEAv8wSAYDVR0jBEEwP4AUo562SGdCEjZBvW3gubSgUouX8bOhHKQaMBgxFjAUBgNVBAMMDUpldFByb2ZpbGUgQ0GCCQDSbLGDsoN54TATBgNVHSUEDDAKBggrBgEFBQcDATALBgNVHQ8EBAMCBaAwDQYJKoZIhvcNAQELBQADggIBABqRoNGxAQct9dQUFK8xqhiZaYPd30TlmCmSAaGJ0eBpvkVeqA2jGYhAQRqFiAlFC63JKvWvRZO1iRuWCEfUMkdqQ9VQPXziE/BlsOIgrL6RlJfuFcEZ8TK3syIfIGQZNCxYhLLUuet2HE6LJYPQ5c0jH4kDooRpcVZ4rBxNwddpctUO2te9UU5/FjhioZQsPvd92qOTsV+8Cyl2fvNhNKD1Uu9ff5AkVIQn4JU23ozdB/R5oUlebwaTE6WZNBs+TA/qPj+5/we9NH71WRB0hqUoLI2AKKyiPw++FtN4Su1vsdDlrAzDj9ILjpjJKA1ImuVcG329/WTYIKysZ1CWK3zATg9BeCUPAV1pQy8ToXOq+RSYen6winZ2OO93eyHv2Iw5kbn1dqfBw1BuTE29V2FJKicJSu8iEOpfoafwJISXmz1wnnWL3V/0NxTulfWsXugOoLfv0ZIBP1xH9kmf22jjQ2JiHhQZP7ZDsreRrOeIQ/c4yR8IQvMLfC0WKQqrHu5ZzXTH4NO3CwGWSlTY74kE91zXB5mwWAx1jig+UXYc2w4RkVhy0//lOmVya/PEepuuTTI4+UJwC7qbVlh5zfhj8oTNUXgN0AOc+Q0/WFPl1aw5VV/VrO8FCoB15lFVlpKaQ1Yh+DVU8ke+rt9Th0BCHXe0uZOEmH0nOnH/0onD</span><br></pre></td></tr></table></figure>              </div>            </details></p><p><p>如果失效可以<a href="https://jetbra.in/5d84466e31722979266057664941a71893322460">点击这里</a>在这里选取其中一个网站来获取</p></p><blockquote><p>注： 使用这里的激活码必须是使用上述插件激活之后才会成功</p></blockquote>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 重装系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破解应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Adobe破解教程</title>
      <link href="/posts/ce72303.html"/>
      <url>/posts/ce72303.html</url>
      
        <content type="html"><![CDATA[<h3 id="安装下载器"><a href="#安装下载器" class="headerlink" title="安装下载器"></a>安装下载器</h3><p>进入官方网站安装<a href="https://www.adobe.com/cn/products/catalog.html">creative cloud</a></p><p>creative cloud 是adobe的应用商店，你可以在里面安装、更新你的所有adobe软件，安装它一切会变得更方便。</p><p>你也可以在其他平台下载安装需要的软件之后使用此方法破解</p><p>点击：免费试用</p><p>开始下载</p><p>安装</p><h3 id="下载软件"><a href="#下载软件" class="headerlink" title="下载软件"></a>下载软件</h3><p>登录账号 更改adobe软件默认安装地址</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306211531072.webp" alt="image-20230621151325419"></p><p>你可以先将creative cloud 给破解了再安装也可以先安装软件再进行破解</p><blockquote><p>选择想要下载的软件点击试用</p></blockquote><p>我已经破解一次了所以就没有使用这个选项</p><p>然后等待下载完成</p><h3 id="破解"><a href="#破解" class="headerlink" title="破解"></a>破解</h3><p>破解软件地址： <a href="https://www.cybermania.ws/software/adobe-genp/">查看</a> 国内下载 <a href="https://xiaozoutx.lanzoub.com/iV8vG0zods0b">下载</a> （密码xztx）</p><ol><li>下载解压之后进入 <code>Release</code>文件夹点击 <code>AdobeGenp</code>文件运行</li></ol><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306211531234.webp" alt="image-20230621152443080"></p><ol><li>如果你是默认安装位置那么你直接点击 <code>search</code>如果你是跟我一样前边更改了安装位置那么你点击 <code>path</code>选择软件的安装位置然后再点击 <code>search</code></li></ol><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306211531880.webp" alt="image-20230621152623572"></p><ol><li><p>搜索出来东西之后点击 <code>patch</code>，它会自动进行破解。</p><p>每少一个蓝勾就是破解过了一个文件。等待所以蓝对勾全部消失</p></li><li>点击 <code>pop-up</code>，取消adobe的警告弹窗</li></ol><blockquote><p>如果你的GenP破解不了，说明版本太低，工具失效了，需要更新GenP版本</p></blockquote><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>也可以从微博@vposy那里获取到已经破解过的adobe产品，但是那个是百度网盘下载太慢了</p>]]></content>
      
      
      <categories>
          
          <category> 重装系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 破解应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一次重装系统</title>
      <link href="/posts/524134f8.html"/>
      <url>/posts/524134f8.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为电脑文件太多东西太复杂配置文件搞得很混乱所以准备重装顺便理一下思路并为以后重装做一下教程</p><blockquote><p>所有蓝奏网盘需要密码的都为 <code>xztx</code> 奶牛快传的密码看提示或者无密码</p></blockquote><h2 id="PE"><a href="#PE" class="headerlink" title="PE"></a>PE</h2><ul><li><a href="https://www.microsoft.com/zh-cn/software-download/windows11">微软官方镜像</a></li><li><a href="https://hellowindows.cn/?ref=www.tboxn.com">HelloWindows</a></li></ul><h2 id="激活系统"><a href="#激活系统" class="headerlink" title="激活系统"></a>激活系统</h2><details class="folding-tag" green><summary> 查看详情 </summary>              <div class='content'>              <p>使用的版本是1.8</p><p> 在 <code>pawershell</code> 输入以下命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">irm https://massgrave.dev/get | iex</span><br></pre></td></tr></table></figure><p>如果出现错误则多输入几次</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306210022596.webp" alt=""></p><p>输入数字 <code>1</code>进行数字激活出现以下式样则为成功</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306210022703.webp" alt="image-20230620223114803"></p><p>如果不是专业版想换成专业版或其他版本的可以执行 <code>6</code>然后执行 <code>1</code>然后选择想要更换的版本</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202306210022985.webp" alt="image-20230620223715308"></p><p>项目地址：<a href="https://github.com/massgravel/Microsoft-Activation-Scripts">Github</a></p>              </div>            </details><h2 id="office"><a href="#office" class="headerlink" title="office"></a>office</h2><p>因为我有office 365 不需要激活就不说了 激活的话可以使用office tools</p><ul><li>官方office ：<a href="https://c2rsetup.officeapps.live.com/c2r/download.aspx?productReleaseID=O365HomePremRetail&amp;platform=X64&amp;language=zh-cn">下载</a></li><li>csdn下载链接 ： <a href="https://blog.csdn.net/weixin_43381677/article/details/114559654">查看</a></li><li>office tools ：<a href="https://otp.landian.vip/zh-cn/">查看</a></li><li>kms list : <a href="https://www.coolhub.top/tech-articles/kms_list.html">查看</a></li></ul><h2 id="驱动"><a href="#驱动" class="headerlink" title="驱动"></a>驱动</h2><ul><li>我的电脑的驱动 ：<a href="https://xiaozoutx.lanzoub.com/b00r69j4b">下载</a></li><li>n卡驱动：<a href="https://www.nvidia.cn/geforce/drivers/">查看</a></li><li>amd显卡驱动： <a href="https://www.amd.com/zh-hans/support">查看</a></li></ul><h2 id="必备工具"><a href="#必备工具" class="headerlink" title="必备工具"></a>必备工具</h2><h3 id="必备"><a href="#必备" class="headerlink" title="必备"></a>必备</h3><ul><li>解压缩7-zip：<a href="https://www.7-zip.org/">下载</a></li><li>截图工具： <a href="https://www.snipaste.com/">snipaste</a> 备用下载链接：<a href="https://xiaozoutx.lanzoub.com/iFehA0znarcd">下载</a></li><li>PowerToys: <a href="https://learn.microsoft.com/zh-cn/windows/powertoys/install">查看</a> 备用下载：<a href="https://cowtransfer.com/s/944a37afedae41">下载</a></li></ul><details class="folding-tag" green><summary> PowerToys推荐开启功能 </summary>              <div class='content'>              <ul><li>始终置顶</li><li>唤醒 （我一般使用无期限保持唤醒）</li><li>粘贴为纯文本</li><li>速览</li><li><p>PowerToys Run（很好用但是最好把全屏响应给关掉防止打游戏）</p><blockquote><p>其他我一般都为关闭</p></blockquote></li></ul>              </div>            </details><ul><li>下载神器IDM: <a href="https://www.internetdownloadmanager.com/">下载</a> 破解插件：<a href="https://xiaozoutx.lanzoub.com/iAykx0zncleb">下载</a></li><li>umi-ocr文本识别工具： <a href="https://kgithub.com/hiroi-sora/Umi-OCR">查看</a> <a href="https://hiroi-sora.lanzoul.com/s/umi-ocr">下载</a></li></ul><h3 id="实用"><a href="#实用" class="headerlink" title="实用"></a>实用</h3><ul><li>录屏软件obs： <a href="https://obsproject.com/">下载</a></li><li>视频播放软件 potplayer：<a href="https://t1.daumcdn.net/potplayer/PotPlayer/Version/Latest/PotPlayerSetup64.exe">下载</a> 备用下载：<a href="https://xiaozoutx.lanzoub.com/iX8YJ0zo9p1a">下载</a>  配置教程 有时间再写</li><li><p>终端软件： 这个自带了 我想要把他美化所以就写上来了 <a href="https://aka.ms/terminal">下载</a></p><details class="folding-tag" green><summary> 查看终端优化 </summary>              <div class='content'>              <p>  美化教程：</p>  <div class="btns rounded grid5"><a class="button" href='https://www.aboyzy.top/posts/930e9396.html' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>          </div>              </div>            </details></li><li>gif软件screentogif：<a href="https://www.screentogif.com/">下载</a></li><li>远控软件todesk <a href="https://www.todesk.com/">下载</a></li><li>网易有道翻译 <a href="https://fanyi.youdao.com/download-Windows">下载</a></li><li>xmind <a href="https://xmind.cn/">下载</a></li></ul><h2 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h2><ul><li><p>Chrome：<a href="https://www.google.cn/intl/zh-CN/chrome/">下载</a> <a href="https://xiaozoutx.lanzoub.com/iYYQ60zn9vod">备用</a></p><details class="folding-tag" green><summary> 插件 </summary>              <div class='content'>              <p>crx下载地址 ：<a href="https://www.crxsoso.com/">crx搜搜</a></p><ol><li>AdGuard 广告拦截器</li><li>IDM Integration Module</li><li>Tampermonkey</li><li><p>Sider: ChatGPT 侧边栏, GPT-4, 联网</p><blockquote><p>设置 通用配置 使用openAI api key</p><p>使用自己的网址</p><p><code>https://api.chatanywhere.com.cn</code></p><p>点击以下链接获取免费api <a href="https://api.chatanywhere.cn/v1/oauth/free/github/render">点击这里</a></p><p>将免费key填入就可以使用了</p></blockquote></li><li>bitwarden <a href="https://xiaozoutx.lanzoub.com/i1D3k0zp6ppc">https://xiaozoutx.lanzoub.com/i1D3k0zp6ppc</a></li><li><p>tampermonkey</p><blockquote><ol><li>CSDN广告完全过滤、人性化脚本优化 <a href="https://greasyfork.org/scripts/378351">下载</a></li><li>Github 增强 - 高速下载 <a href="https://greasyfork.org/scripts/412245">下载</a></li><li>GitHub 中文化插件 <a href="https://greasyfork.org/scripts/435208">下载</a></li><li>百度网盘千千下载助手 <a href="https://greasyfork.org/scripts/463171">下载</a></li><li>知乎增强 <a href="https://greasyfork.org/scripts/419081">下载</a></li></ol></blockquote></li></ol>              </div>            </details></li><li>Edge： 自带了</li></ul><h2 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h2><ul><li>火绒： <a href="https://www.huorong.cn/">查看</a></li></ul><h2 id="社交"><a href="#社交" class="headerlink" title="社交"></a>社交</h2><ul><li>QQ： <a href="https://im.qq.com/index/">查看</a></li><li>微信：<a href="https://weixin.qq.com/">查看</a></li><li>钉钉：<a href="https://www.dingtalk.com/">查看</a></li><li>邮件管理Foxmail：<a href="https://www.foxmail.com/">查看</a></li></ul><h2 id="adobe系列"><a href="#adobe系列" class="headerlink" title="adobe系列"></a>adobe系列</h2><details class="folding-tag" green><summary> 破解教程 </summary>              <div class='content'>              <p>查看文章</p><div class="site-card-group"><a class="site-card" href="https://www.aboyzy.top/posts/ce72303.html"><div class="img"><img src="https://s7d1.scene7.com/is/image/TitanProd/cn-ccp-homepage-q1fy22-pod0-desktop-1"/></div><div class="info"><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang/img/%E5%A4%B4%E5%83%8F.webp"/><span class="title">adobe破解教程</span></div></a></div>              </div>            </details><h2 id="开发软件"><a href="#开发软件" class="headerlink" title="开发软件"></a>开发软件</h2><ul><li><p>Jetbrains系列</p><ul><li>IDEA <a href="https://www.jetbrains.com/zh-cn/idea/">下载</a></li><li>Pycharm <a href="https://www.jetbrains.com/zh-cn/pycharm/">下载</a></li></ul><div class="tag link"><a class="link-card" title="破解教程" href="https://www.aboyzy.top/posts/5f7dbcf8.html"><div class="left"><img src="https://www.jetbrains.com.cn/favicon.ico"/></div><div class="right"><p class="text">破解教程</p><p class="url">https://www.aboyzy.top/posts/5f7dbcf8.html</p></div></a></div><details class="folding-tag" green><summary> 插件 </summary>              <div class='content'>              <h4 id="必备"><a href="#必备" class="headerlink" title="必备"></a>必备</h4><ol><li>Translation</li><li>Chinese (Simplified) LanguagePack／中文语言包</li></ol>              </div>            </details></li><li><p>虚拟机vmware <a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html">下载</a></p><ul><li><p>17pro激活密钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">NZ4RR-FTK5H-H81C1-Q30QH-1V2LA</span><br></pre></td></tr></table></figure></li><li><p>16pro激活密钥</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ZF3R0-FHED2-M80TY-8QYGC-NPKYF</span><br></pre></td></tr></table></figure></li></ul></li><li><p>vscode</p><details class="folding-tag" green><summary> 设置 </summary>              <div class='content'>              <ul><li>自动保存</li></ul><blockquote><p>打开设置搜索 <code>auto save</code>  选择 <code>onFocusChange</code>鼠标不在VSCode里面时自动保存</p></blockquote>              </div>            </details><ol><li><a href="https://marketplace.visualstudio.com/items?itemName=MS-CEINTL.vscode-language-pack-zh-hans">Chinese (Simplified) (简体中文) Language Pack for Visual Studio Code</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=redjue.git-commit-plugin">git-commit-plugin</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-ssh">Remote - SSH</a></li><li><a href="https://marketplace.visualstudio.com/items?itemName=PKief.material-icon-theme">Material Icon Theme</a></li><li><p><a href="https://marketplace.visualstudio.com/items?itemName=shalldie.background">background</a></p><details class="folding-tag" green><summary> 设置 </summary>              <div class='content'>              <p>点击插件设置 选择 <code>Extension Settings</code> 打开之后选择 <code>Edit in settings json</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;background.useDefault&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;background.customImages&quot;</span>: [</span><br><span class="line">        <span class="string">&quot;https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang/img/202301091601600.png&quot;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;background.useFront&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    <span class="string">&quot;background.styles&quot;</span>: [</span><br><span class="line"></span><br><span class="line">        &#123;&#125;,</span><br><span class="line">        &#123;&#125;,</span><br><span class="line">        &#123;&#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="string">&quot;background.fullscreen&quot;</span>: &#123;</span><br><span class="line"></span><br><span class="line">        <span class="string">&quot;image&quot;</span>: <span class="string">&quot;https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang/img/202301091557348.jpg&quot;</span>, <span class="comment">// 图片的url</span></span><br><span class="line">        <span class="comment">// &quot;image&quot;: [&quot;https://pathtoimage.png&quot;], // 当开启轮播图的时候，可以用数组配置多张图片</span></span><br><span class="line">        <span class="string">&quot;opacity&quot;</span>: <span class="number">0.83</span>, <span class="comment">// 建议值 0.85 ~ 0.95</span></span><br><span class="line">        <span class="string">&quot;size&quot;</span>: <span class="string">&quot;cover&quot;</span>, <span class="comment">// css, 建议使用 `cover`自适应，或者 `contain`、`200px 200px`</span></span><br><span class="line">        <span class="string">&quot;position&quot;</span>: <span class="string">&quot;center&quot;</span>, <span class="comment">// 同 `background-position`, 默认 `center`</span></span><br><span class="line">        <span class="string">&quot;interval&quot;</span>: <span class="number">0</span> <span class="comment">// 单位 `秒`，轮播时候图片切换间隔，默认 `0` 表示不开启</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>              </div>            </details></li><li><a href="https://marketplace.visualstudio.com/items?itemName=alefragnani.project-manager">Project Manager</a></li></ol></li><li><p>博客系列</p><ul><li><p>Typora <a href="https://typoraio.cn/">下载</a></p><details class="folding-tag" green><summary> 破解教程 </summary>              <div class='content'>              <p>破解插件 <a href="https://xiaozoutx.lanzoub.com/ip6y60zosruf">下载</a> 下载之后把他放到Typora的安装目录里就可以了</p><p>如果最新版不行可以使用一下版本 <a href="https://xiaozoutx.lanzoub.com/ih2220wjdrre">下载</a></p>              </div>            </details><details class="folding-tag" green><summary> 设置 </summary>              <div class='content'>              <p>主题下载链接 ：<a href="https://github.com/liangjingkanji/DrakeTyporaTheme">下载</a> 备用下载：<a href="https://xiaozoutx.lanzoub.com/i9XQL0zowa7e">下载</a></p><p>通过文件-&gt; 偏好设置 -&gt; 外观 -&gt; 打开主题文件夹打开theme目录</p><p>复制解压后目录内的所有文件到theme目录下然后重启, 选择菜单栏 -&gt; 主题即可 我用的是dark vue3.</p><details class="folding-tag" green><summary> 其他设置 </summary>          <div class='content'>          <p>文件</p><blockquote><p>启动选项-&gt; 打开指定文件夹</p><p>自动保存开启</p></blockquote><p>图像</p><blockquote><p>插入图片时-&gt; 复制到指定路径</p><p>使用相对路径 加./ 转义</p><p>上传服务picgo</p></blockquote>          </div>        </details>              </div>            </details></li><li><p>picgo <a href="https://picgo.github.io/PicGo-Doc/zh/guide/#%E4%B8%8B%E8%BD%BD%E5%AE%89%E8%A3%85">下载</a></p><details class="folding-tag" green><summary> 设置 </summary>              <div class='content'>              <blockquote><p>打开 上传前重命名 时间戳重命名 和上传后自动复制url</p></blockquote><p>插件配置</p><p>下载 picgo-plugin-compress-webp-lossless <a href="https://xiaozoutx.lanzoub.com/ipjHs0zox8fg">下载</a>或者在软件自带的插件里搜索下载</p>              </div>            </details></li></ul></li><li><p>ssh连接软件：MobaXterm_Personal中文版 <a href="https://github.com/RipplePiam/MobaXterm-Chinese-Simplified">下载</a> 备用：<a href="https://xiaozoutx.lanzoub.com/iwOsI0zoxnhi">下载</a></p><details class="folding-tag" green><summary> 解锁pro </summary>              <div class='content'>              <p>破解插件：<a href="https://xiaozoutx.lanzoub.com/ip2tP0zoy6af">下载</a> 下载之后解压到MobaXterm的文件夹内就可以了</p>              </div>            </details></li></ul><h2 id="群晖系列软件"><a href="#群晖系列软件" class="headerlink" title="群晖系列软件"></a>群晖系列软件</h2><ul><li>同步软件Synology Drive Client <a href="https://cndl.synology.cn/download/Utility/SynologyDriveClient/3.3.0-15082/Windows/Installer/Synology%20Drive%20Client-3.3.0-15082.exe?model=DS918%2B&amp;bays=4&amp;dsm_version=7.1.1&amp;build_number=42962">下载</a></li><li>笔记软件Synology Note Station Client <a href="https://cndl.synology.cn/download/Utility/NoteStationClient/2.2.2-609/Windows/x86_64/synology-note-station-client-2.2.2-609-win-x64-Setup.exe?model=DS918%2B&amp;bays=4&amp;dsm_version=7.1.1&amp;build_number=42962">下载</a></li><li>其他 <a href="https://www.synology.cn/zh-cn/support/download/DS918+?version=7.1#utilities">链接</a></li></ul><h2 id="其他软件"><a href="#其他软件" class="headerlink" title="其他软件"></a>其他软件</h2><ul><li>压缩视频软件：小丸工具箱 <a href="https://cowtransfer.com/s/b46095afa9ae46">下载</a></li><li>代理工具<ol><li>v2rayn  <object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/2dust/v2rayN&"></object> 备用： <a href="https://xiaozoutx.lanzoub.com/iMmQN0zp4oqf">下载</a></li><li>clash <object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/Fndroid/clash_for_windows_pkg&"></object> 备用： <a href="https://xiaozoutx.lanzoub.com/iiKcD0zp4l4f">下载</a></li></ol></li><li>QQ音乐: <a href="https://y.qq.com/download/download.html">下载</a></li><li>网易云音乐 ：<a href="https://music.163.com/#/download">下载</a></li></ul><h2 id="开发环境"><a href="#开发环境" class="headerlink" title="开发环境"></a>开发环境</h2><h3 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h3><details class="folding-tag" green><summary> 安装教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="Java安装" href="https://www.aboyzy.top/posts/8f6ffd84.html"><div class="left"><img src="https://www.oracle.com/a/ocom/img/rc30v1-java-se.png"/></div><div class="right"><p class="text">Java安装</p><p class="url">https://www.aboyzy.top/posts/8f6ffd84.html</p></div></a></div>              </div>            </details><h3 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h3><details class="folding-tag" green><summary> 安装教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="Python安装" href="https://www.aboyzy.top/posts/9c451689.html"><div class="left"><img src="https://s3.dualstack.us-east-2.amazonaws.com/pythondotorg-assets/media/community/logos/python-logo-only.png"/></div><div class="right"><p class="text">Python安装</p><p class="url">https://www.aboyzy.top/posts/9c451689.html</p></div></a></div>              </div>            </details><h3 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h3><details class="folding-tag" green><summary> 安装教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="使用nvm安装Node" href="https://www.aboyzy.top/posts/747b4ac0.html"><div class="left"><img src="https://img.nodejs.cn/logo.svg"/></div><div class="right"><p class="text">使用nvm安装Node</p><p class="url">https://www.aboyzy.top/posts/747b4ac0.html</p></div></a></div>              </div>            </details><h3 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h3><details class="folding-tag" green><summary> 安装教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="Git安装" href="https://www.aboyzy.top/posts/bfed1ba3.html"><div class="left"><img src="https://git-scm.com/images/logos/downloads/Git-Icon-1788C.png"/></div><div class="right"><p class="text">Git安装</p><p class="url">https://www.aboyzy.top/posts/bfed1ba3.html</p></div></a></div>              </div>            </details><h3 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h3><details class="folding-tag" green><summary> 安装教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="Mysql安装" href="https://www.aboyzy.top/posts/e4055611.html"><div class="left"><img src="https://labs.mysql.com/common/logos/mysql-logo.svg"/></div><div class="right"><p class="text">Mysql安装</p><p class="url">https://www.aboyzy.top/posts/e4055611.html</p></div></a></div>              </div>            </details><h3 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h3><details class="folding-tag" green><summary> 安装教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="Docker安装" href="https://www.aboyzy.top/posts/2a40ac23.html"><div class="left"><img src="https://cdn.icon-icons.com/icons2/2415/PNG/96/docker_original_wordmark_logo_icon_146557.png"/></div><div class="right"><p class="text">Docker安装</p><p class="url">https://www.aboyzy.top/posts/2a40ac23.html</p></div></a></div>              </div>            </details><h3 id="GCC"><a href="#GCC" class="headerlink" title="GCC"></a>GCC</h3><details class="folding-tag" green><summary> 安装教程 </summary>              <div class='content'>              <div class="tag link"><a class="link-card" title="GCC安装" href="https://blog.csdn.net/weixin_48820458/article/details/128069360"><div class="left"><img src="https://jmeubank.github.io/tdm-gcc/img/dragon_logo1.gif"/></div><div class="right"><p class="text">GCC安装</p><p class="url">https://blog.csdn.net/weixin_48820458/article/details/128069360</p></div></a></div>              </div>            </details>]]></content>
      
      
      <categories>
          
          <category> 重装系统 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>一些配置项</title>
      <link href="/posts/acc3fd1f.html"/>
      <url>/posts/acc3fd1f.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="3f58a06278e6712313521b95863e4dd9681236b7139e84b1ca60c95b4e49c9ec">b1b5cca864ba944475e8a83009f0cbb483989c70a7193187df2903a67c5921f0c0f44f836c83e7ecdae4a2a2d4ffd491fb99a8cac261088a6ace520489e8996612da865d4ea791ecb5bc3b1bf90df3087706fafcc8bf119cc55f708032982ad31268c5da78baea27b864acfd87de18212241fb98024a13166c562261ce6b3b14bfac93c6cbed14dbbbaa7dea4181b923754836b8b8685b187dd737b42180ef292e4b584b6a695d9d35d4fa6c69ad13ef5f20c248459ad2954ff9bcc031f4d29c37c2dd0aa751777fe3ab503ed604e60a374989363804e24223e263b00faa14dea0f65503b7e69b73f7781628b2d1dadf910bad26159623a064d104a6e0379a6ffa11f446cd2411d854735a69bfd197d8a463fc14079671ed4a72db9ba188734c8a90ce12c7c1bf5c3f8a626dee46ef71734f01ba58201b32e238ae868eaf94037bbe0d11ba658658975b78468a1beb1c4790141b542a7755d87556fef2b01d3ebb76661ad14f715f03aaa76ff6a9a6dfed3b9d609376afdd364671267e4e1d23dc898a68587e5309ec4b396ba336ebbef5b3d35dbdaa34fd80eeddf9e29857821e8084209e10e0f4cd9aea0ad57a2fceee55473e32cd1f93b8734a0c244575df4dd998ae97dc12f79c9bd1411940a0fc9f27166f3f3b18d35f13df7e7efbc257933609c6c20fee713257114893ae04953ccbda677e9264754fa84d8ebe86bad21c6dd78f88ee7e851548cec8c607a2740f173a343e48c8f3f8415cc11ce8054f985f536616517f98d0f7d534450d137ebdd1b2108f6054c09814a65d2b9060fc</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="您好, 这里需要密码.">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>记一次MySQL的安装</title>
      <link href="/posts/e4055611.html"/>
      <url>/posts/e4055611.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>java期末需要用到数据库操作所以没办法就再安装一次数据库记录一下本次安装步骤方便以后查找使用。</p><h1 id="下载mysql"><a href="#下载mysql" class="headerlink" title="下载mysql"></a>下载mysql</h1><p>下载链接<a href="https://downloads.mysql.com/archives/installer/">https://downloads.mysql.com/archives/installer/</a></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031824253.webp" alt="image-20230603165043804"></p><h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><h2 id="1-选择设置类型"><a href="#1-选择设置类型" class="headerlink" title="1. 选择设置类型"></a>1. 选择设置类型</h2><p>我下载的版本是5.7.30 版本太高容易出问题</p><p>“Developer Default”是开发者默认</p><p>“Server only”仅作为服务器安装</p><p>“Client only”仅作为客户端安装</p><p>“Full”是完整安装</p><p>“Custom”是自定义安装</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031824317.webp" alt="image-20230603165305712"></p><p>选择自定义安装</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031824440.webp" alt="image-20230603173251872"></p><h2 id="2-选择安装目录"><a href="#2-选择安装目录" class="headerlink" title="2.选择安装目录"></a>2.选择安装目录</h2><p>这里提示已经有此目录不用管点击ok 弹出界面之后再次点击ok</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031824097.webp" alt="image-20230603173423722"></p><p>确认一下安装路径和数据存放路径对不对，没有问题的话就直接点击Next</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031824483.webp" alt="image-20230603173619734"></p><p>弹出这个直接点yes意思是 所选路径已存在</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031824123.webp" alt="image-20230603173638727"></p><h2 id="3-安装"><a href="#3-安装" class="headerlink" title="3.安装"></a>3.安装</h2><p>直接点击 <code>Execute</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031824713.webp" alt="image-20230603173749947"></p><p>等待全部成功点击 <code>Next</code> 这个界面再次点击 <code>Next</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031824153.webp" alt="image-20230603173911175"></p><h2 id="4-选择安装类型"><a href="#4-选择安装类型" class="headerlink" title="4.选择安装类型"></a>4.选择安装类型</h2><p>个人学习研究的话选择 <code>Development Computer</code>则可以，我这里选择是 <code>Development Computer</code></p><p>Development Computer 适合个人开发学习使用的</p><p>Server Computer 是像主要用于像FTP，email，web服务器等等</p><p>Dedicated Computer 只用作MySQL服务器</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031824320.webp" alt="image-20230603174055245"></p><p>可以修改端口也可以不更改点击 <code>Next</code></p><h2 id="5-设置mysql密码"><a href="#5-设置mysql密码" class="headerlink" title="5.设置mysql密码"></a>5.设置mysql密码</h2><p>自己用可以简单点</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031825319.webp" alt="image-20230603174141865"></p><p>之后直接下一步</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031825997.webp" alt="image-20230603174301314"></p><p>配置权限直接给了</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031825065.webp" alt="image-20230603174325524"></p><h2 id="6-最后"><a href="#6-最后" class="headerlink" title="6.最后"></a>6.最后</h2><p>直接点击Execute安装</p><p>等待完成点击Finish</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031825428.webp" alt="image-20230603174424371"></p><h2 id="7-MySQL-Router-Configuration"><a href="#7-MySQL-Router-Configuration" class="headerlink" title="7.MySQL Router Configuration"></a>7.MySQL Router Configuration</h2><p>直接 <code>Finish</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031825355.webp" alt="image-20230603174655154"></p><p>检查连接能够成功 输入刚才设置的密码</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031825816.webp" alt="image-20230603174735557"></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031825079.webp" alt="image-20230603174802444"></p><h2 id="8-安装完成"><a href="#8-安装完成" class="headerlink" title="8.安装完成"></a>8.安装完成</h2><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031825130.webp" alt="image-20230603174900840"></p><h1 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h1><p>在 <code>path</code>里边增加 <code>mysql/bin</code>的路径</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031825085.webp" alt="image-20230603175124018"></p><p>测试登录</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031825700.webp" alt="image-20230603175231867"></p><h1 id="MySQL服务器的启动和关闭"><a href="#MySQL服务器的启动和关闭" class="headerlink" title="MySQL服务器的启动和关闭"></a>MySQL服务器的启动和关闭</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">net stop mysql57 //mysql57是刚才配置的名称 执行需要管理员权限不然会报错</span><br><span class="line">net start mysql57</span><br></pre></td></tr></table></figure><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031825100.webp" alt="image-20230603175504554"></p><h1 id="可视化管理工具Navicat安装与注册"><a href="#可视化管理工具Navicat安装与注册" class="headerlink" title="可视化管理工具Navicat安装与注册"></a>可视化管理工具Navicat安装与注册</h1><p>下载地址<a href="https://navicat.com.cn/download/navicat-premium" title="navicat-premium">https://navicat.com.cn/download/navicat-premium</a></p><p>下载安装就不演示了 完成之后先不要打开</p><p>激活器下载地址 <a href="https://xiaozoutx.lanzouj.com/idyin0y53gji">https://xiaozoutx.lanzouj.com/idyin0y53gji</a></p><ol><li>打开下载的激活器</li><li>右键【以管理员身份运行】<strong>NavicatCracker.exe</strong></li><li><p>选择navicat的路径 确定没问题之后 点击【Patch】（点击之前不要打开Navicat）</p><div class="note danger modern"><p>只可Patch一次，重复操作时需重装Navicat</p></div><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031826081.webp" alt="afd2a33d6c7939ac8e7c3143ff4371e1"></p></li><li>弹框选择【是】</li><li>打开【Navicat】软件，点击【注册】</li><li><p>点击【Generate】，生成激活码，复制激活码至Navicat</p><blockquote><p>(注意点击前确认【Version】与【Production】的选择应与您安装的Navicat版本一致）</p></blockquote></li><li><p>点击【Generate】，生成激活码，复制激活码至Navicat</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031826707.webp" alt="image-20230603181723149"></p></li><li><p>点击【手动激活】</p><div class="note danger modern"><p>无法出现该选项，请断网重试</p></div><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031826859.webp" alt="b32895a654049ec67aa72ed0126c302e"></p></li><li><p>将【请求码】复制到激活软件中；点击【Generate Activation Code】；将生成的【激活码】复制到Navicat中；点击【激活】</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang///img/202306031826398.webp" alt="c08d39e43587371d545ba0a77a44dcdc"></p><blockquote><p>注：注册参考链接<a href="https://github.com/shuhongfan/NavicatCracker">https://github.com/shuhongfan/NavicatCracker</a></p></blockquote></li></ol>]]></content>
      
      
      <categories>
          
          <category> 环境安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境安装 </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>操作系统期末复习</title>
      <link href="/posts/a7e9f0cd.html"/>
      <url>/posts/a7e9f0cd.html</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>期末考试在即😭 没办法,突击学习 👍把一些容易忘记的东西给汇总一下方便记忆 如果出现错误请指正。</p><h1 id="填空"><a href="#填空" class="headerlink" title="填空"></a>填空</h1><ol><li>操作系统的目标：<psw>方便性</psw>、<psw>有效性</psw>、<psw>可扩充性</psw>、<psw>开放性</psw>。</li><li>OS的主要功能是针对以下四类资源进行有效的管理，即  <psw>处理机管理</psw>、<psw>存储器管理</psw>、<psw>I/O设备管理</psw>、 <psw>文件管理</psw>。</li><li><psw>多道批处理系统</psw>、<psw>分时操作系统</psw>和<psw>实时操作系统</psw>是操作系统的三种基本类型</li><li><psw>并发</psw>和<psw>共享</psw>是操作系统的两个最基本的特征</li><li>os 为用户提供的接口有：<psw>命令接口</psw>、<psw>程序接口</psw>、<psw>图形接口</psw>。</li><li>进程存在的唯一标志：<psw>PCB(进程控制块)</psw>;</li><li>进程控制包括：<psw>进程创建</psw>、<psw>进程撤消</psw>、<psw>进程阻塞</psw>、<psw>进程唤醒</psw></li><li>由<psw>程序段</psw>、<psw>数据段</psw>及<psw>进程控制块</psw>三部分构成了一个进程的实体</li><li>同步机制应遵循的准则：<psw>空闲让进</psw>,<psw>忙则等待</psw>,<psw>有限等待</psw>,<psw>让权等待</psw></li><li>进程互斥的实现：<psw>信号量机制</psw>，<psw>信号量集</psw>，<psw>AND信号量</psw></li><li>每个进程中访问<psw>临界资源</psw>的那段<psw>代码</psw>称为临界区</li><li><psw>进程</psw>是拥有系统资源的独立单位，<psw>线程</psw>自己不拥有系统资源</li><li>产生死锁的原因:1、<psw>竞争资源</psw> 2、<psw>进程推进的顺序序不当</psw></li><li>产生死锁的必要条件：⑴<psw>互斥条件</psw>⑵<psw>不剥夺条件</psw>⑶<psw>部分分配:（请求和保持条件）</psw>⑷<psw>环路等待条件</psw></li><li>处理死锁的基本方法: ⑴<psw>预防死锁</psw>⑵<psw>避免死锁</psw>⑶<psw>检测死锁</psw>⑷<psw>解除死锁</psw></li><li>避免死锁的实质是<psw>如何使系统不进入不安全状态</psw>。避免死锁的算法：<psw>银行家算法</psw>。</li><li>死锁的检测：实质是<psw>确定是否存在环路等待现象</psw></li><li>死锁的解除：1、<psw>撤消进程</psw>；2、<psw>挂起进程（剥夺资源）</psw>。</li><li>重定位方法：1、<psw>绝对装入</psw>： 2、<psw>可重定位装入</psw>3、<psw>动态运行时装入</psw>。</li><li>I/O控制方式: 一般可分为：<psw>程序I/O方式</psw>、<psw>中断方式</psw>、<psw>DMA方式</psw>和<psw>通道方式</psw>。</li><li>利用SPOOLing技术可以<psw>提高I/O的速度，将独占设备改造为共享设备，实现虚拟设备的功能</psw>。</li><li><p>文件分类:</p><ul><li>按用途分类：<psw>系统文件</psw>，<psw>用户文件</psw>，<psw>库文件</psw>。</li><li>按信息保存期限分类：<psw>临时文件</psw>，<psw>永久文件</psw>，<psw>档案文件</psw>。</li><li>按文件的存取控制属性（保护方式）分类： <psw>只读文件</psw>，<psw>读写文件</psw>，<psw>只执行文件</psw>。</li><li>按文件的逻辑结构分类： <psw>（无结构文件）流式文件</psw>，<psw>有结构文件（记录式文件）</psw>。</li><li>按文件的物理结构分类：<psw>顺序（连续）文件</psw>，<psw>链接文件</psw>，<psw>索引文件</psw>。</li><li>按信息流向分类：<psw>输入文件</psw>，<psw>输出文件</psw>，<psw>输入/输出文件</psw>。</li></ul></li><li>操作系统是用户和计算机之间的接口。其接口型式有：<psw>命令接口</psw>；(2)<psw>程序接口</psw>；(3)<psw>基于图像的图形用户接口</psw></li><li>目前常用的外存分配方法有：(1)<psw>连续分配</psw>， (2)<psw>链接分配</psw>，(3)<psw>索引分配</psw></li></ol>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>解包wallpaperEngine壁纸</title>
      <link href="/posts/7db222a0.html"/>
      <url>/posts/7db222a0.html</url>
      
        <content type="html"><![CDATA[<p><strong>下载RePKG 编译或者</strong><a href="https://github.com/notscuffed/repkg/issues/28">https://github.com/notscuffed/repkg/issues/28</a>下载exe</p><ol><li>转到带有 RePKG.exe 的目录</li><li>按住 Shift+右键单击并选择“在此处打开 Powershell 窗口”</li><li><p>运行应用程序例如：.\RePGK.exe extract pkg路径` 例：<br><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202305201423708.webp" alt="image-20230407181343638"></p></li><li><p>在repkg路径找到output在里边寻找解包后的壁纸图片或视频</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一些常用的linux命令</title>
      <link href="/posts/2578b5d7.html"/>
      <url>/posts/2578b5d7.html</url>
      
        <content type="html"><![CDATA[<h3 id="1-用户Owner、Group、Others、Root"><a href="#1-用户Owner、Group、Others、Root" class="headerlink" title="1.用户Owner、Group、Others、Root"></a>1.用户Owner、Group、Others、Root</h3><p>Linux 系统是一种多用户系统，它将文件访问者身份分为三种：</p><ul><li><p>文件所有者（Owner）</p><p>当创建一个用户的时候，Linux 会为该用户创建一个主目录，路径为 <code>/home/&lt;username&gt;</code>，我们可以使用 <code>cd ~</code>，快捷进入主目录。如果你想放一个私密文件，就可以放在自己的主目录里，然后设置只能自己查看。</p></li><li><p>群组（Group）</p><p>每个用户都有一个用户组，方便多人操作的时候，为一群人分配权限。当创建用户的时候，会自动创建一个与它同名的用户组。</p><p>如果一个用户同时属于多个组，用户需要在用户组之间切换，才能具有其他用户组的权限。</p></li><li><p>其他人（Others）</p><p>既不是文件所有者又不是文件所属群组成员的用户，就是其他人。</p></li><li><p>超级用户（Root）</p><p>Root 用户是一类特殊的用户，该用户可以访问所有文件</p></li></ul><h3 id="2-adduser-添加用户-和-passwd-更改密码"><a href="#2-adduser-添加用户-和-passwd-更改密码" class="headerlink" title="2.adduser 添加用户 和 passwd 更改密码"></a>2.adduser 添加用户 和 passwd 更改密码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">添加一个名为 git 的用户</span></span><br><span class="line">adduser git</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置 git 用户的密码</span></span><br><span class="line">passwd git</span><br></pre></td></tr></table></figure><p>但是由于创建的用户权限较低，有的时候我们需要为用户提权，此时我们可以这样做：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">会打开 sudoers 配置文件</span></span><br><span class="line">sudo visudo</span><br></pre></td></tr></table></figure><p>注意同样是编辑 <code>sudoers</code> 配置文件，使用这个命令会比使用 <code>sudo vim /etc/ sudoers</code> 更安全， 除了对语法有校验，并且还会在多用户编辑的时候锁住文件。</p><p>打开 <code>sudoers</code> 配置文件后，我们添加这样一行配置：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Allow git to run any commands anywhere</span><br><span class="line">git ALL=(ALL:ALL) ALL </span><br></pre></td></tr></table></figure><p>简单解释下这句话 <code>git ALL=(ALL:ALL) ALL</code>：</p><ul><li>git 表示规则应用的用户名</li><li>第一个 <code>ALL</code> 表示规则应用于所有 hosts</li><li>第二个 <code>ALL</code> 表示规则应用于所有 users</li><li>第三个 <code>ALL</code> 表示规则应用于所有 groups</li><li>第四个 <code>ALL</code> 表示规则应用于所有 commands</li></ul><p>我们保存退出后，<code>git</code> 用户就会获得 root 权限。</p><h3 id="3-ls-列出文件和目录"><a href="#3-ls-列出文件和目录" class="headerlink" title="3. ls 列出文件和目录"></a>3. ls 列出文件和目录</h3><ol><li><code>ls</code> 列出文件和目录</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@zy learn.git]# ls</span><br><span class="line">branches  config  description  HEAD  hooks  index  info  objects  refs</span><br></pre></td></tr></table></figure><ol><li><code>ls -la</code> 由 <code>-a</code> 显示所有文件和目录（包括隐藏）和 <code>-l</code> 显示详细列表组成：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@zy learn.git]# ls -la</span><br><span class="line">总用量 20</span><br><span class="line">drwxrwxr-x  7 git git  132 12月 15 12:33 .</span><br><span class="line">drwx------  3 git git  127 12月 15 14:51 ..</span><br><span class="line">drwxrwxr-x  2 git git    6 12月 15 12:21 branches</span><br><span class="line">-rw-rw-r--  1 git git   66 12月 15 12:21 config</span><br><span class="line">-rw-rw-r--  1 git git   73 12月 15 12:21 description</span><br><span class="line">-rw-rw-r--  1 git git   23 12月 15 12:21 HEAD</span><br><span class="line">drwxrwxr-x  2 git git 4096 12月 15 13:10 hooks</span><br><span class="line">-rw-rw-r--  1 git git  217 12月 15 12:33 index</span><br><span class="line">drwxrwxr-x  2 git git   21 12月 15 12:21 info</span><br><span class="line">drwxrwxr-x 10 git git   90 12月 15 12:33 objects</span><br><span class="line">drwxrwxr-x  4 git git   31 12月 15 12:21 refs</span><br></pre></td></tr></table></figure><p>每一行都有 7 列，我们以 <code>branches</code> 为例讲解每列的含义：</p><div class="table-container"><table><thead><tr><th>drwxrwxr-x</th><th>2</th><th>git</th><th>git</th><th>6</th><th>12月 15 12:21</th><th>branches</th></tr></thead><tbody><tr><td>文件类型和权限信息</td><td>链接数或者一级子目录数</td><td>所有者</td><td>所属组</td><td>文件大小，单位字节</td><td>最后修改时间</td><td>文件名</td></tr></tbody></table></div><p>重点看第 1 列的内容，以 <code>drwxrwxr-x</code> 为例，这里一共 10 位，第 1 位表示文件类型，其中 <code>-</code> 表示普通文件，<code>d</code> 表示目录文件。</p><p>第 2 到第 4 位，表示所有者权限，其中 <code>r</code> 表示读权限，<code>w</code> 表示写权限，<code>x</code> 表示可执行权限， <code>-</code>表示无权限，第 2 到 5 位为 <code>rwx</code>，表示所有者可读可写可执行。</p><p>第 5 到第 7 位，表示组用户权限，这里也是 <code>rwx</code>。</p><p>第 8 到第 10 位，表示其他用户权限，这里是 <code>r-x</code>，表示有可读可执行权限，无写入权限。</p><p>这里再额外补充一点：</p><p>像 <code>root</code> 用户创建文件夹的默认权限为 <code>rwxr-xr-x</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2ze www]# mkdir test</span><br><span class="line">[root@iZ2ze www]# ls -l</span><br><span class="line"></span><br><span class="line">drwxr-xr-x  2 root root  6 12月 17 23:53 test</span><br></pre></td></tr></table></figure><blockquote><p>创建文件的默认权限是 <code>rw-r--r--</code>，注意创建文件默认会去掉 <code>x</code>(可执行) 权限：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@iZ2ze www]# touch index.html</span><br><span class="line">[root@iZ2ze www]# ls -l</span><br><span class="line"></span><br><span class="line">-rw-r--r--  1 root root  0 12月 17 23:54 index.html</span><br></pre></td></tr></table></figure><p>这就是为什么我们有的时候需要在创建文件后，又加上执行权限。</p><h3 id="4-chown-更改文件属主，也可以同时更改文件属组"><a href="#4-chown-更改文件属主，也可以同时更改文件属组" class="headerlink" title="4. chown 更改文件属主，也可以同时更改文件属组"></a>4. chown 更改文件属主，也可以同时更改文件属组</h3><p><strong>chown (change owner)</strong> 语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># -R：递归更改文件属组</span><br><span class="line">chown [–R] 属主名 文件名</span><br><span class="line">chown [-R] 属主名：属组名 文件名</span><br></pre></td></tr></table></figure><p>将 <code>index.html</code> 的所有者更改为 <code>git</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zy www]# chown git index.html</span><br><span class="line">[root@zy www]# ls -</span><br><span class="line"></span><br><span class="line">-rw-r--r-- 1 git  root  0 12月 17 23:54 index.html</span><br></pre></td></tr></table></figure><p>将 <code>index.html</code> 的所有者和群组都改为 <code>git</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zy www]# chown git:git index.html</span><br><span class="line">[root@zy www]# ls -l</span><br><span class="line"></span><br><span class="line">-rw-r--r-- 1 git  git   0 12月 17 23:54 index.html</span><br></pre></td></tr></table></figure><h3 id="5-chmod-更改文件权限"><a href="#5-chmod-更改文件权限" class="headerlink" title="5. chmod 更改文件权限"></a>5. chmod 更改文件权限</h3><p>权限除了用 <code>r</code> <code>w</code> <code>x</code> 这种方式表示，也可以用数字表示，数组与字母的对应关系为：</p><ul><li>r:4</li><li>w:2</li><li>x:1</li></ul><p>之所有如此对应关系，是根据二进制所来的</p><p>0代表无权限<br>1代表有权限<br>001 = 1 = 可执行<br>010 = 2 = 可读<br>100 = 4 = 可写</p><p>我们看下 <strong>chmod （change mode）</strong> 的具体语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># -R：递归更改文件属组</span><br><span class="line">chmod [-R] xyz 文件或目录</span><br></pre></td></tr></table></figure><p>其中 xyz 分别表示 Owner、Group、Others 的权限，如果我们这样设置一个文件的权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod 750 index.html</span><br></pre></td></tr></table></figure><p>我们可以得知，Owner 的权限为 7，为可读可写可执行，Group 的权限为 5，为可读可执行，Others 的权限为 0，表示不可读写不可执行。对应字母为：<code>rwxr-x---</code>。</p><p>除了这种数字的方式，还有一种使用符号类型改变权限的方式：</p><p>在这种方式里，我们将三种身份 <code>Owner</code>、<code>Group</code>、<code>Others</code>，分别简写为 <code>u（User）</code>、<code>g</code>、<code>o</code>，用 <code>a</code> 表示所有身份，再使用 <code>+</code> <code>-</code> <code>=</code> 表示加入、去除、设定一个权限，<code>r</code> <code>w</code> <code>x</code> 则继续表示读，写，执行权限，举个例子：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod u+x,g-x,o-x index.html</span><br></pre></td></tr></table></figure><p>意思就是 <code>Owner</code> 加上执行权限，<code>Group</code> 和 <code>Others</code> 去除执行权限。</p><p>当然我们也可以直接设定权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod u=rwx,g=rx,o=r index.html</span><br></pre></td></tr></table></figure><p>此时文件的权限就相当于 <code>-rwxr-xr--</code>。</p><p>此外，我们还可以省略不写 <code>ugoa</code> 这类身份内容，直接写：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x index.html</span><br></pre></td></tr></table></figure><p>此时相当于使用了 <code>a</code>，会给所有身份添加执行权限。</p><h3 id="6-cd-切换工作目录"><a href="#6-cd-切换工作目录" class="headerlink" title="6.cd 切换工作目录"></a>6.cd 切换工作目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 进入 /home/www/</span><br><span class="line">cd /home/www</span><br><span class="line"></span><br><span class="line"># 进入自己的主目录</span><br><span class="line">cd ~</span><br><span class="line"></span><br><span class="line"># 进入当前目录的上上两层 :</span><br><span class="line">cd ../..</span><br></pre></td></tr></table></figure><h3 id="7-mkdir-创建目录"><a href="#7-mkdir-创建目录" class="headerlink" title="7. mkdir 创建目录"></a>7. mkdir 创建目录</h3><ol><li><code>mkdir</code> 创建目录：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir new_folder</span><br></pre></td></tr></table></figure><ol><li><code>mkdir -p</code> 递归创建目录：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p one/two/three</span><br></pre></td></tr></table></figure><h3 id="8-cat-连接文件并打印输出"><a href="#8-cat-连接文件并打印输出" class="headerlink" title="8.cat 连接文件并打印输出"></a>8.cat 连接文件并打印输出</h3><p>查看文件内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure><p>清空 index.html 内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat /dev/null &gt; index.html</span><br></pre></td></tr></table></figure><p>把 index.html 的内容写入 second.html：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat index.html &gt; second.html</span><br></pre></td></tr></table></figure><p>把 index.html 的内容追加写入 second.html：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat index.html &gt;&gt; second.html</span><br></pre></td></tr></table></figure><p>把 index.html 和 second.html 追加写入 third.html：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat index.html second.html &gt;&gt; third.html</span><br></pre></td></tr></table></figure><h3 id="9-mv-移动并重命名"><a href="#9-mv-移动并重命名" class="headerlink" title="9.mv 移动并重命名"></a>9.mv 移动并重命名</h3><p>文件改名：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv index.html index2.html</span><br></pre></td></tr></table></figure><p>隐藏文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 文件名上加上 .</span><br><span class="line">mv index.html .index.html</span><br></pre></td></tr></table></figure><p>移动文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 仅仅移动</span><br><span class="line">mv  /home/www/index.html   /home/static/</span><br><span class="line"># 移动又重命名</span><br><span class="line">mv /home/www/index.html   /home/static/index2.html</span><br></pre></td></tr></table></figure><p>批量移动：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv  /home/www/website/*  /home/www/static</span><br></pre></td></tr></table></figure><h3 id="10-rm-删除一个文件或者目录"><a href="#10-rm-删除一个文件或者目录" class="headerlink" title="10.rm 删除一个文件或者目录"></a>10.rm 删除一个文件或者目录</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"># 系统会询问</span><br><span class="line">rm file</span><br><span class="line"></span><br><span class="line"># -f 表示直接删除</span><br><span class="line"># -r 表示目录下的所有文件删除</span><br><span class="line"></span><br><span class="line"># 删除当前目录下的所有文件及目录</span><br><span class="line">rm -r  * </span><br><span class="line"></span><br><span class="line"># 跑路</span><br><span class="line">rm -rf /*</span><br></pre></td></tr></table></figure><h3 id="11-ssh-远程连接工具"><a href="#11-ssh-远程连接工具" class="headerlink" title="11.ssh 远程连接工具"></a>11.ssh 远程连接工具</h3><p>注意 ssh 监听是 22 端口。</p><p>其基本语法为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh [OPTIONS] [-p PORT] [USER@]HOSTNAME [COMMAND]</span><br></pre></td></tr></table></figure><p>监听端口示例：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -p 300 git@8.8.8.8</span><br></pre></td></tr></table></figure><p>打开调试模式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># -v 冗详模式，打印关于运行情况的调试信息</span><br><span class="line">ssh -v git@8.8.8.8</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Office 365 E5 账号申请及续期教程</title>
      <link href="/posts/34b85c1f.html"/>
      <url>/posts/34b85c1f.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>因为之前使用的office 365 E5账号使用了 <code>qyi</code>的续订所以 emm  在五月四号 终于 😭还是被清零了</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202305041945640.webp" alt="1683197002415"></p><p>申诉正在等待处理结果 所以就创建个新账号来拷贝和保存数据</p><p>于是我找到了使用<code>GitHub acction</code> 来调用api来实现续订</p><h2 id="申请步骤"><a href="#申请步骤" class="headerlink" title="申请步骤"></a>申请步骤</h2><p>打开 <a href="https://developer.microsoft.com/en-us/microsoft-365/dev-program">申请链接</a>，<code>登录</code> 你的微软账户。如未注册过，点击创建一个，在此不再赘述。</p><p>登录成功进入信息填写页面后，选择 <code>国家</code>，随意填写 <code>公司</code> 名称，勾选 <code>接受条款</code> 后，点击 <code>下一步</code>。</p><p>进入个性化体验页面后，<code>随意勾选</code> 几个必选项，点击 <code>加入</code>。</p><p>点击 <code>设置 E5 订阅</code></p><p>在弹出的对话框中填写 <code>国家</code>、<code>用户名</code>、<code>域</code> 和 <code>密码</code> 后，点击 <code>继续</code>，注意在记事本 <code>保存你的密码</code>。</p><p>域即 <code>网址前缀</code>，填写后可能提示 <code>已被使用</code>，改用 <code>其他字母</code> 即可</p><p>接着会要求绑定 <code>手机号</code>，由于网站使用了 谷歌 人机验证，因此需要科学上网。</p><p>收到 <code>验证码</code> 后，填入对话框，点击 <code>设置</code>。</p><p><code>等待一分钟</code> 左右，页面将显示订阅成功。</p><h2 id="扩展空间"><a href="#扩展空间" class="headerlink" title="扩展空间"></a>扩展空间</h2><p>默认的 OneDrive 空间是 1T，可在管理页扩展为 5T。打开 <a href="https://login.microsoftonline.com/common/oauth2/authorize?client_id=00000006-0000-0ff1-ce00-000000000000&amp;response_type=code%20id_token&amp;scope=openid%20profile&amp;state=OpenIdConnect.AuthenticationProperties%3DxaHZxj0fIZvUBs1pl_8eC7MCwRWFpquDKEiWW9Y4RcbsZ5xK0j0qRdKHaNnfKV7aZuC-kPlF6Lk1SbsxV_xJinLGTbbKZTUSInsv4jcXfj0eVoErmY7GglTrucHqq-tOAoxpzDvO8cc_vznjdh3QUK0Xw4nHT7dCrIapGku2FosT2L6o2I7-D406yOz6RyCP1V04ddpRB2NpWd6drG6RQA&amp;response_mode=form_post&amp;nonce=638187946441379617.YmY4MjdkNWItMGEyMS00MTg5LWE4NWItYTU2N2EzNzAzOGQwMWQ1ZjYzNjAtNWY2ZS00NjU5LTgwNjMtNzcwNGQyNGNlMTBh&amp;redirect_uri=https%3A%2F%2Fadmin.microsoft.com%2Flanding&amp;ui_locales=zh-CN&amp;mkt=zh-CN&amp;msafed=0&amp;x-client-SKU=ID_NET472&amp;x-client-ver=6.26.1.0">OneDrive 存储管理页</a>，<code>登录</code> 申请的管理号，将空间设置为 <code>5120</code> 后点击 <code>保存</code>。如页面 <code>无法加载</code>，则系统尚未完成初始化，<code>等待 24 小时</code> 后重新打开。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202305041946564.webp" alt="1683197938092"></p><h2 id="自动续期"><a href="#自动续期" class="headerlink" title="自动续期"></a>自动续期</h2><p>订阅的有效期是 <code>90</code> 天。到期前，如果微软检测到账号被用于开发，即 <code>API 被频繁且无规律调用</code>，将自动续期。</p><p><code>Github Action</code> 是 Github 提供给开发者使用的 <code>虚拟 Linux 环境</code>，可 <code>根据条件</code>，例如指定时间，<code>执行指定代码</code>。</p><p>首先 <a href="https://www.github.com" title="GIthub">登录或注册</a> 一个 Github 账号 然后创建一个私有仓库</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202305041946051.webp" alt="1683198146833"></p><p>选择从其他仓库导入</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202305041946063.webp" alt="1683198201892"></p><p>填入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://github.com/vcheckzen/KeepAliveE5.git</span><br></pre></td></tr></table></figure><p>点击 <code>Begin Import</code>，稍等片刻，你的账号下便会复制一份该项目。</p><h3 id="GitHub设置"><a href="#GitHub设置" class="headerlink" title="GitHub设置"></a>GitHub设置</h3><p>现在需为仓库添加下表中的三个密钥</p><div class="table-container"><table><thead><tr><th>Name</th><th>Value</th></tr></thead><tbody><tr><td>PAT</td><td>Github 个人访问密钥，需要具有 workflow 权限</td></tr><tr><td>USER</td><td>E5 管理员邮箱（支持多个，每行一个，不要填写子号）</td></tr><tr><td>PASSWD</td><td>E5 管理员密码（支持多个，每行一个，顺序必须和邮箱一致）</td></tr></tbody></table></div><h4 id="PAT"><a href="#PAT" class="headerlink" title="PAT"></a>PAT</h4><p>现在，创建一个具有 <code>workflow</code> 权限的个人访问密钥，用于同步上流代码。首先访问 <a href="https://github.com/settings/tokens/new">密钥创建页面</a>，按照下图填写信息，随后将页面拉到最下方，点击绿色的 <code>Generate token</code> 按钮。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202305041946631.webp" alt="1683198543439"></p><p>接着，页面会跳转到创建成功页面，点击图中的 <code>复制</code> 图标，复制生成的 PAT 密钥备用<span class='p red'>（只会显示一次 记得保存好）</span> 。 </p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202305041946896.webp" alt="1683198759363"></p><p>创建密钥 如下所示</p><h4 id="user-amp-amp-passwd"><a href="#user-amp-amp-passwd" class="headerlink" title="user &amp;&amp; passwd"></a>user &amp;&amp; passwd</h4><p>进入刚才创建的仓库点击 <code>settings</code> 找到如下图所示 actions 点击右边绿色按钮 <code>New repository secret</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202305041946001.webp" alt="1683198815279"></p><p>分别创建USER 和PADDWD 来填写账户密码</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202305041946783.webp" alt="1683198994880"></p><div class="note info modern"><p>PAT使用同样方法创建 secret内填写刚才生成的密钥</p></div><h3 id="微软设置"><a href="#微软设置" class="headerlink" title="微软设置"></a>微软设置</h3><p>可通过 Microsoft Azure 门户中 Azure Active Directory (Azure AD) 的“ <strong>属性</strong> ”窗格启用或禁用安全性默认值。</p><ol><li>使用全局管理员凭据登录 <a href="https://admin.microsoft.com/#/homepage">Microsoft 365 管理中心</a>。</li><li>在左侧导航栏中，选择“ <strong>全部显示</strong> ”，然后在 <strong>管理中心</strong> 下，选择“ <strong>Azure Active Directory</strong> ”。</li><li>在 <strong>Azure Active Directory 管理中心</strong> 中选择“ <strong>Azure Active Directory</strong> ”&gt;“ <strong>属性</strong> ”。</li><li>在页面底部，选择“ <strong>管理安全性默认值</strong> ”。</li><li>选择“ <strong>是</strong> ”启用安全性默认值，或选择“ <strong>否</strong> ”禁用安全性默认值，然后选择“ <strong>保存</strong> ”。</li><li>找到多重身份验证看是否打开 打开了把他关闭掉</li></ol><p>或者 点击 <a href="https://aad.portal.azure.com/#blade/Microsoft_AAD_IAM/ActiveDirectoryMenuBlade/Properties" title="Azure Active Directory 管理中心">Azure Active Directory 管理中心</a> 进入</p><div class="note danger modern"><p>一定要关闭两步验证（多因素认证、安全默认值），否则无法注册成功，进而无法调用 API。</p></div><h2 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h2><p>现在转到 <code>Action</code> 面板，在 <code>All workflows</code> 下找到 <code>Register APP</code>，手动触发它完成注册流程，2 分钟左右。如果确认一切操作正确仍然 <code>Register</code> 失败，可等待 10-30min 后再操作，因为关闭安全默认值后，微软系统要过一段时间才会刷新。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202305041946989.webp" alt="1683200299828"></p><p>如果 <code>Action</code> 面板找不到 <code>Register APP</code>，则修改 <code>.github/workflows</code> 目录下的两个文件，随便添加一行注释保存</p><p>如果 <code>Action</code> 面板不显示，则到仓库的 <code>Settings -&gt; Actions -&gt; Actions permissions</code> 勾选 <code>Allow all actions</code> 后保存</p><h2 id="成功示例"><a href="#成功示例" class="headerlink" title="成功示例"></a>成功示例</h2><details class="folding-tag" ><summary> 应用注册成功 </summary>              <div class='content'>              <p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202305041946403.webp" alt="1683200466922"></p>              </div>            </details><details class="folding-tag" ><summary> api调用成功 </summary>              <div class='content'>              <p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202305041946840.webp" alt="1683200599827"></p>              </div>            </details>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>vscode代码块</title>
      <link href="/posts/ea6ca2ac.html"/>
      <url>/posts/ea6ca2ac.html</url>
      
        <content type="html"><![CDATA[ <div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>最近经常使用markdown来写东西，但是使用的外挂标签打着又很麻烦所以在vscode上使用代码块来减少重复操作 </p></div><h2 id="设置代码块"><a href="#设置代码块" class="headerlink" title="设置代码块"></a>设置代码块</h2><p>在左上角 <code>打开文件</code> —&gt; <code>首选项</code> —&gt; <code>用户代码片段</code></p><p>找到 <code>markdown.json</code></p><ul><li>“Print to console” 是快捷语句的标题</li><li>prefix 是快捷语句触发的命令，也就是关键字</li><li>body 是触发后的样子，使用 $1，$2 等指定光标位置。这些数字指定了光标跳转的顺序。特别地，$0表示最终光标位置</li><li>description 是该快捷语句的功能描述</li></ul><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304242129284.webp" alt="image-20230424211637377"></p><details class="folding-tag" green><summary> 查看代码 </summary>              <div class='content'>              <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;Print to md_del&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;del&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot;&#123;% del $1 %&#125;&quot;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;markdown删除样式&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;Print to md_kbd&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;kbd&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot;&#123;% kbd $1 %&#125;&quot;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;markdown键盘样式&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;Print to md_tabs&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"> </span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tabs&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot;&#123;% tabs test4 %&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;&lt;!-- tab $1 --&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot; $0 &quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;&lt;!-- endtab --&gt;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;&#123;% endtabs %&#125;&quot;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;markdown分栏&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;Print to ```java&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;```java&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot; ```java &quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;$0&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot; ``` &quot;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;java代码&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;Print to ```python&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;```python&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot; ```python &quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;$0&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot; ``` &quot;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;python代码&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;Print to ```shell&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;```shell&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot; ```shell &quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;$0&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot; ``` &quot;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;shell终端&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;Print to md_danger&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;danger&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot; &#123;% note danger modern %&#125; $0 &#123;% endnote %&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;红色警告框&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;Print to md_tips&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tips&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot; &#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125; $0 &#123;% endnote %&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;蓝色喇叭提示框&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;Print to md_code&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line"><span class="attr">&quot;prefix&quot;</span><span class="punctuation">:</span> <span class="string">&quot;code&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;body&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line"><span class="string">&quot;&#123;% folding green, 查看代码 %&#125;&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;```&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot; $0 &quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;```&quot;</span><span class="punctuation">,</span></span><br><span class="line"><span class="string">&quot;&#123;% endfolding %&#125;&quot;</span></span><br><span class="line"><span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line"><span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;折叠代码框&quot;</span></span><br><span class="line"><span class="punctuation">&#125;</span><span class="punctuation">,</span> </span><br></pre></td></tr></table></figure>              </div>            </details><h2 id="启用设置"><a href="#启用设置" class="headerlink" title="启用设置"></a>启用设置</h2><p>在设置setting.json中启用 打开 <code>setting.json</code> 添加</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;[markdown]&quot;</span><span class="punctuation">:</span><span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;editor.quickSuggestions&quot;</span><span class="punctuation">:</span> <span class="literal"><span class="keyword">true</span></span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304242130216.webp" alt="image-20230424211916263"></p><p>添加完后进行保存，然后就可以使用刚刚添加的快捷键了</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304242130877.gif" alt="vscode代码块"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git使用教程</title>
      <link href="/posts/56ed55c1.html"/>
      <url>/posts/56ed55c1.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>最近经常使用Git又经常忘记命令,所以写了这篇文章来方便查找使用Git命令</p></blockquote><h1 id="Git命令"><a href="#Git命令" class="headerlink" title="Git命令"></a>Git命令</h1><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><p>创建一个git仓库有如下几种方式：</p><ul><li><strong>git init</strong>：初始化一个git仓库</li><li><strong>git clone</strong>：clone一个git仓库</li></ul><h3 id="Git-init"><a href="#Git-init" class="headerlink" title="Git init"></a>Git init</h3><p>Git使用git init命令来初始化一个Git仓库，执行完git init命令后，会生成一个.git目录，该目录包含了资源数据，且只会在仓库的根目录生成。</p><p>如果用当前目录作为Git仓库，则只需要执行如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p>执行该命令之后，就可以在当前目录下生成.init文件夹，并且会默认生成一个master分支。</p><p>如果要在指定的目录下生成仓库，则指令如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init newDir</span><br></pre></td></tr></table></figure><p>newDir为仓库的路径，执行完成之后，会在newDir目录下生成一个.git目录。</p><p>执行该命令之后，就可以在当前目录下生成newtest文件夹，并在改文件夹下生成.init文件夹。</p><h3 id="Git-clone"><a href="#Git-clone" class="headerlink" title="Git clone"></a>Git clone</h3><p>使用git clone命令可以从Git仓库拷贝项目，类似于SVN中的 svn checkout，命令格式为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone &lt;url&gt; [directory]</span><br></pre></td></tr></table></figure><p>url为git仓库地址，directory为本地目录，比如，要克隆某个Git 代码仓库，可以用下面的命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone ssh://git@192.168.2.2:26634/aboyzy/text.git</span><br></pre></td></tr></table></figure><p>执行完成之后会在当前目录下生成仓库，如果要指定目录下生成，则可以在后面加一个具体的位置路径，如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone ssh://git@192.168.2.2:26634/aboyzy/text.git</span><br></pre></td></tr></table></figure><p> git clone 时，可以用不同的协议，包括 ssh, git, https 等，其中最常用的是 ssh，因为速度较快，还可以配置公钥免输入密码，各种写法格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone ssh://git@192.168.2.2:26634/aboyzy/text.git         --SSH协议</span><br><span class="line">git clone http://192.168.2.2:26632/aboyzy/text.git  --HTTPS协议</span><br></pre></td></tr></table></figure><h2 id="Git-基本指令的使用"><a href="#Git-基本指令的使用" class="headerlink" title="Git 基本指令的使用"></a>Git 基本指令的使用</h2><p>下面介绍一下git中常用的几种命令：</p><ul><li>git config：配置信息</li><li>git add：添加文件到缓存命令</li><li>git status：查看文件的状态命令</li><li>git diff：查看更新的详细信息命令</li><li>git commit：提交命令</li><li>git reset HEAD：取消缓存命令</li><li>git rm：删除命令</li><li>git mv：移动或重命名命令</li></ul><h3 id="Git-config"><a href="#Git-config" class="headerlink" title="Git config"></a>Git config</h3><p>我们可以通过git config来配置用户名和邮箱地址，便于我们将代码提交到远程仓库，具体格式如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &#x27;你的用户名&#x27;</span><br><span class="line">git config --global user.email &#x27;你的邮箱&#x27;</span><br></pre></td></tr></table></figure></p><h3 id="Git-add"><a href="#Git-add" class="headerlink" title="Git add"></a>Git add</h3><p>git add 命令可将文件添加到缓存，如新项目中，添加所有文件很普遍，可以使用如下命令：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git add * -- 添加文件夹内所有文件</span><br><span class="line">git add readme.md --添加readme.md文件</span><br></pre></td></tr></table></figure></p><p>当然我们也可以指定某一类文件，如将md文件添加到缓存中，可以使用如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git  add *.md</span><br></pre></td></tr></table></figure><h3 id="Git-status"><a href="#Git-status" class="headerlink" title="Git status"></a>Git status</h3><p>我们可以使用 git status 命令来查看相关文件的状态，直接执行如下命令：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></table></figure></p><p>如果有修改的文件，则执行结果如下：</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304081433880.webp" alt="image-20230408110954379"></p><p>根据上面git status命令的提示内容，我们可以得到三种处理情况：</p><ol><li><p>暂存文件的命令：<code>git add &lt;文件名&gt;</code></p></li><li><p>放弃未暂存文件的修改命令：<code>git checkout – &lt;文件名&gt;</code></p></li><li><p>将被修改的文件暂存并提交的命令：<code>git commit -a</code></p></li></ol><p>如果你对Git的各种状态比较熟悉了，也可以使用 git status -s 来查看简写的状态，这种简写的状态和SVN上的差不多 M - 被修改，A - 被添加，D - 被删除，R - 重命名，?? - 未被跟踪 等等。</p><h3 id="Git-diff"><a href="#Git-diff" class="headerlink" title="Git diff"></a>Git diff</h3><p>  执行 git diff 来查看更新的详细信息，与git status不同的是，git status只显示更新的状态，而 git diff 可以显示已写入缓存与已修改但尚未写入缓存的改动的区别具体的详细信息。</p><ul><li><p>尚未缓存的改动：<code>git diff</code></p></li><li><p>查看已缓存的改动： <code>git diff --cached</code></p></li><li><p>查看已缓存的与未缓存的所有改动：<code>git diff HEAD</code></p></li><li><p>显示摘要而非整个 diff：<code>git diff --stat</code></p></li></ul><h3 id="Git-commit"><a href="#Git-commit" class="headerlink" title="Git commit"></a>Git commit</h3><p>git commit 将缓存区内容添加到仓库中，可以在后面加-m选项，以在命令行中提供提交注释，格式如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;第一次版本提交&quot;</span><br></pre></td></tr></table></figure><br>如果你觉得 每次 commit之前要add一下，想跳过add这一步，可以直接使用 -a选项,如：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -am &quot;第一次版本提交&quot;</span><br></pre></td></tr></table></figure><h3 id="Git-reset-HEAD"><a href="#Git-reset-HEAD" class="headerlink" title="Git reset HEAD"></a>Git reset HEAD</h3><p>git reset HEAD 命令用于取消已缓存的内容，如我们要取消已提交的test.txt文件，可以如下使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git reset HEAD readme.md</span><br></pre></td></tr></table></figure><p>执行完之后，再使用commit提交时，readme.md文件不会被提交。</p><h3 id="Git-rm"><a href="#Git-rm" class="headerlink" title="Git rm"></a>Git rm</h3><p>如果只是简单地从工作目录中手工删除文件，运行 git status 时就会在 Changes not staged for commit 的提示。要从 Git 中移除某个文件，就必须要从已跟踪文件清单中移除，然后提交。可以如下使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm &lt;file&gt;</span><br></pre></td></tr></table></figure><p>如果删除之前修改过并且已经放到暂存区域的话，则必须要用强制删除选项 -f</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm -f &lt;file&gt;</span><br></pre></td></tr></table></figure><p>  如果把文件从暂存区域移除，但仍然希望保留在当前工作目录中，换句话说，仅是从跟踪清单中删除，使用 —cached 选项即可<br> <br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm --cached &lt;file&gt;</span><br></pre></td></tr></table></figure></p><p>可以递归删除，即如果后面跟的是一个目录做为参数，则会递归删除整个目录中的所有子目录和文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm –r *</span><br></pre></td></tr></table></figure><h3 id="Git-mv"><a href="#Git-mv" class="headerlink" title="Git mv"></a>Git mv</h3><p>git mv 命令用于移动或重命名一个文件、目录、软连接，如要将一个test.txt文件重命名为newtest.txt，则可以使用如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git mv test.txt newtest.txt</span><br></pre></td></tr></table></figure><h2 id="Git的分支管理"><a href="#Git的分支管理" class="headerlink" title="Git的分支管理"></a>Git的分支管理</h2><p> 几乎每种版本控制系统都支持分支管理，使用分支我们可以从主干中分离出来，然后继续开发，不影响主干。下面介绍一下Git中分支常用的命令：</p><ul><li>git branch：查看分支命令</li><li>git branch (branchName)：创建分支命令</li><li>git checkout (branchName)：切换分支命令</li><li>git merge：合并分支命令</li><li>git branch -d (branchName)：删除分支命令</li></ul><h3 id="Git-branch"><a href="#Git-branch" class="headerlink" title="Git branch"></a>Git branch</h3><p>git branch可以查看分支，也可以创建分支，如果没有参数时，git branch会列出你在本地的分支；如果有参数时，git branch就会创建改参数的分支。</p><p>如果要查看分支，命令格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch</span><br></pre></td></tr></table></figure><p>当我们想创建分支时，可以在后面加参数，命令格式如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch  branchName</span><br></pre></td></tr></table></figure><p>如我们想创建一个test的分支，可以如下操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch  test</span><br></pre></td></tr></table></figure><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304081434501.webp" alt="image-20230408133624520"></p><p>现在我们可以看到，多了一个新的分支test。而master分支在我们执行git init的时候，缺省情况下 Git 就会为你创建 master 分支。</p><h3 id="Git-checkout-branchname"><a href="#Git-checkout-branchname" class="headerlink" title="Git checkout (branchname)"></a>Git checkout (branchname)</h3><p>git checkout可以切换分支，命令格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout branchName</span><br></pre></td></tr></table></figure><p>我们也可以使用 git checkout -b (branchName) 命令来创建新分支并立即切换到该分支下，从而在该分支中操作。如，我们想创建一个newtest分支，并创建后就切换到该分支下，可以如下操作：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b newtest</span><br></pre></td></tr></table></figure><h3 id="Git-merge"><a href="#Git-merge" class="headerlink" title="Git merge"></a>Git merge</h3><p>git merge命令可以将任意分支合并到到当前分支中去，命令格式如下：<br><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git merge branchName</span><br></pre></td></tr></table></figure><br>我们新建一个test分支，并在其中修改了readme.md文件，之后在master中将test分支的修改合并到master</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304081434000.webp" alt="image-20230408134514066"></p><p><strong>合并冲突</strong><br>  合并的时候，最大的难点就是冲突了，合并并不仅仅是简单的文件添加、移除的操作，Git 也会合并修改，如果我们在两个分支中同时修改了同一个文件，这时再合并，就可能会产生冲突</p><p>  现在有两个分支：test、newtest，两个分支中都要test.txt文件，这个时候我们都这个两个仓库的文件都进行修改，之后再提交，最后将newtest合并到test中，具体的操作如下：</p><ol><li><p>先修改分支：test、newtest中的test.txt文件，并提交：</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304081434768.webp" alt="image-20230408135758687"></p></li><li><p>之后再将newtest分支修改的内容合并到test分支中：</p></li></ol><p>​         <img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304081434295.webp" alt="image-20230408135835844"></p><p>​          <img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304081434611.webp" alt="image-20230408135843200"></p><p>​     可以看到newtest分支修改的内容和master分支修改的内容发生了冲突，这是根据具体的情况去解决，如下，我们保留两个分支都有的，之后再add，在commit就可以了：</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304081434283.webp" alt="image-20230408140035001"></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304081434134.webp" alt="image-20230408140118662"></p><p>到此一个简单的合并就完成了</p><h3 id="Git-branch-d-branchname"><a href="#Git-branch-d-branchname" class="headerlink" title="Git branch -d (branchname)"></a>Git branch -d (branchname)</h3><p>git branch -d可以删除分支，删除分支命令格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d (branchname)</span><br></pre></td></tr></table></figure><p>如：我们要删除newtest分支</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304081434620.webp" alt="image-20230408140347647"></p><h2 id="Git查看提交历史"><a href="#Git查看提交历史" class="headerlink" title="Git查看提交历史"></a>Git查看提交历史</h2><p>在使用 Git 提交了若干更新之后，又或者克隆了某个项目，想回顾下提交历史，我们可以使用 <strong>git log</strong> 命令查看，如，我们想列出历史提交记录如下：</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304081434818.webp" alt="image-20230408140645813"></p><p>下面介绍查看历史记录的几种选项：</p><ul><li>–oneline ：查看历史记录的简洁版本</li><li>–graph ：查看历史中什么时候出现了分支、合并</li><li>–reverse ：逆向显示所有日志</li><li>–author ：查找指定用户的提交日志</li><li>–since、–before、 —until、–after： 指定帅选日期</li><li>–no-merges ：选项以隐藏合并提交</li></ul><p>我们可以用 <strong>–oneline</strong> 选项来查看历史记录的简洁版本</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304081434736.webp" alt="image-20230408140918249"></p><h2 id="Git-标签"><a href="#Git-标签" class="headerlink" title="Git 标签"></a>Git 标签</h2><blockquote><p>等待补充</p></blockquote><p>使用标签可以很方便的永远的记住那个特别的提交快照，比如：我们发一个新的版本时，可以给它加一个“vx.x”版本，这样你可以使用git tag给它打上标签。</p><h3 id="创建新标签"><a href="#创建新标签" class="headerlink" title="创建新标签"></a>创建新标签</h3><p> 可以使用 git tag -a vx.x来创建一个标签。a 选项意为”创建一个带注解的标签”。 不用 -a 选项也可以执行的，但它不会记录这标签是啥时候打的，谁打的，也不会让你添加个标签的注解。</p><hr><h2 id="Git-远程仓库"><a href="#Git-远程仓库" class="headerlink" title="Git 远程仓库"></a>Git 远程仓库</h2><p> 前面我们使用到的 Git 命令都是在本地执行，如果你想通过 Git 分享你的代码或者与其他开发人员合作。 你就需要将数据放到一台其他开发人员能够连接的服务器上。使用 Github 作为远程仓库，来介绍Git 远程仓库的使用。<br>下面介绍远程仓库常用的几种指令：</p><ul><li>git remote add：添加远程仓库</li><li>git remote：查看当前的远程仓库</li><li>git fetch、git pull：提取远程仓仓库</li><li>git push：推送到远程仓库</li><li>git remote rm：删除远程仓库</li></ul><h3 id="Git-remote-add"><a href="#Git-remote-add" class="headerlink" title="Git remote add"></a>Git remote add</h3><p>git remote add可以添加一个远程仓库，其命令格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add [alias] [url]</span><br></pre></td></tr></table></figure><p>参数[alias]为别名， [url]为远程仓库的地址</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304081434260.webp" alt="image-20230408142327043"></p><h3 id="Git-remote"><a href="#Git-remote" class="headerlink" title="Git remote"></a>Git remote</h3><p><code>git remote</code>可以查看当前有哪些远程仓库，执行结果如下：</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304081434235.webp" alt="image-20230408142340360"></p><h3 id="Git-fetch、Git-pull"><a href="#Git-fetch、Git-pull" class="headerlink" title="Git fetch、Git pull"></a>Git fetch、Git pull</h3><h4 id="Git-fetch"><a href="#Git-fetch" class="headerlink" title="Git fetch"></a>Git fetch</h4><p><strong>git fetch</strong>可以提取远程仓库的数据，如果有多个远程仓库，我们可以在后面加仓库的别名.</p><p>该命令执行完后需要执行git merge 远程分支到你所在的分支。假设你配置好了一个远程仓库，并且你想要提取更新的数据，你可以首先执行 git fetch [alias] 告诉 Git 去获取它有你没有的数据，然后你可以执行 git merge [alias]/[branch] 以将服务器上的任何更新（假设有人这时候推送到服务器了）合并到你的当前分支.</p><p>执行完成之后可以在本地仓库找到远程仓库的文件。使用这种方式只能保证本地是一个空的仓库，如果非空，则会报：fatal: refusing to merge unrelated histories错误</p><h4 id="Git-pull"><a href="#Git-pull" class="headerlink" title="Git pull"></a>Git pull</h4><p><strong>git pull</strong>命令用于从另一个存储库或本地分支获取并集成(整合)，在默认模式下，git pull是git fetch后跟git merge FETCH_HEAD的缩写，使用格式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull [options] [&lt;repository&gt; [&lt;refspec&gt;…]]</span><br></pre></td></tr></table></figure><p>如：我们可以将远程仓库pull到本地，如果本地仓库和远程仓库实际上是独立的两个仓库，–allow-unrelated-history选项来解决。</p><p><strong>git fetch</strong>和<strong>git pull</strong>的区别：</p><ol><li>git fetch：相当于是从远程获取最新版本到本地，不会自动合并。</li><li>git pull：相当于是从远程获取最新版本并merge到本地。</li></ol><h3 id="Git-push"><a href="#Git-push" class="headerlink" title="Git push"></a>Git push</h3><p>git push 推送你的新分支与数据到某个远端仓库命令，格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push [alias] [branch]</span><br></pre></td></tr></table></figure><p>如：我们可以将前面提交的文件push到远程仓库中：</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304081434180.webp" alt="image-20230408142513682"></p><h3 id="Git-remote-rm"><a href="#Git-remote-rm" class="headerlink" title="Git remote rm"></a>Git remote rm</h3><p>git remote rm删除远程仓库，格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote rm [别名]</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>windows终端美化</title>
      <link href="/posts/930e9396.html"/>
      <url>/posts/930e9396.html</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>Windows自带的<strong>CMD</strong>以及<strong>Powershell</strong>界面着实是太<em>丑</em>了，对比上Linux上的终端界面简直就是上世纪的产物。不过微软提供了<strong>Windows Terminal</strong>，支持CMD、Powershell、Wsl所以准备美化一波<br>成品展示：<br><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304011603215.webp" alt="image-20230401160351377"></p><h2 id="Windows-Terminal"><a href="#Windows-Terminal" class="headerlink" title="Windows Terminal"></a>Windows Terminal</h2><p>打开应用商店，搜索 <code>Windows Terminal</code>并下载安装</p><div class="btns rounded grid1">            <a class="button" href='https://aka.ms/terminal' title='下载'><i class='fas fa-download'></i>下载</a>          </div><h2 id="设置默认程序"><a href="#设置默认程序" class="headerlink" title="设置默认程序"></a>设置默认程序</h2><blockquote><p>只有windows11支持此功能</p></blockquote><p>若要使用 Windows 终端打开任何命令行应用程序，请将其设置为默认终端应用程序。</p><ol><li>打开 Windows 终端并转到<strong>设置</strong> UI 窗口。</li><li>选择<strong>启动</strong>并选择“Windows 终端”作为<strong>默认终端应用程序</strong>设置。</li></ol><h2 id="开始配置"><a href="#开始配置" class="headerlink" title="开始配置"></a>开始配置</h2><p>打开设置，点击下方打开json文件</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304011521617.webp" alt="image-20230401145739594"></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304011521427.webp" alt="image-20230401145806660"></p><p>复制粘贴<code>&quot;profiles&quot;:</code>字段中的<code>&quot;defaults&quot;</code>字段</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&quot;defaults&quot;: </span><br><span class="line">       &#123;</span><br><span class="line">           &quot;backgroundImage&quot;: &quot;C:/Users/26632/OneDrive/\u56fe\u7247/58124091_p0.jpg&quot;,</span><br><span class="line">           &quot;backgroundImageOpacity&quot;: 0.7,</span><br><span class="line">           &quot;colorScheme&quot;: &quot;One Half Dark&quot;,</span><br><span class="line">           &quot;opacity&quot;: 75,</span><br><span class="line">           &quot;font&quot;: </span><br><span class="line">           &#123;</span><br><span class="line">               &quot;face&quot;: &quot;Consolas&quot;</span><br><span class="line">           &#125;,</span><br><span class="line">           &quot;useAcrylic&quot;: true</span><br><span class="line">       &#125;,</span><br></pre></td></tr></table></figure><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304011521404.webp" alt="image-20230401150046826"></p><p>根据自己实际需求，填写<strong>背景图片</strong>的地址。</p><h2 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>直接在微软商店搜索oh my posh下载</p><div class="btns rounded grid1">            <a class="button" href='ms-windows-store://pdp/?productid=XP8K0HKJFRXGCK' title='下载'><i class='fas fa-download'></i>下载</a>          </div><p>或者使用以下命令安装</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">winget</button></li><li class="tab"><button type="button" data-href="#test4-2">scoop</button></li><li class="tab"><button type="button" data-href="#test4-3">manual</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p>打开 PowerShell 提示符并运行以下命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winget install JanDeDobbeleer.OhMyPosh <span class="literal">-s</span> winget</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p>打开 PowerShell 提示符并运行以下命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scoop install https://github.com/JanDeDobbeleer/<span class="built_in">oh</span><span class="literal">-my-posh</span>/releases/latest/download/<span class="built_in">oh</span><span class="literal">-my-posh</span>.json</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p>打开 PowerShell 提示符并运行以下命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Set-ExecutionPolicy</span> Bypass <span class="literal">-Scope</span> <span class="keyword">Process</span> <span class="literal">-Force</span>; <span class="built_in">Invoke-Expression</span> ((<span class="built_in">New-Object</span> System.Net.WebClient).DownloadString(<span class="string">&#x27;https://ohmyposh.dev/install.ps1&#x27;</span>))</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>这将安装一些东西：</p><ul><li><code>oh-my-posh.exe</code>- 视窗可执行文件</li><li><code>themes</code>- 最新的哦，我的豪华<a href="https://ohmyposh.dev/docs/themes">主题</a></li></ul><p>要重新加载，建议重新启动终端。</p><h3 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h3><p>输入<code>$PROFILE</code>查看是否powershell路径</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304011540800.webp" alt="image-20230401153530691"></p><p>使用<code>CODE $PROFILE</code>打开配置文件写入（—config为主题路径）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oh-my-posh init pwsh --config C:\Users\26632\AppData\Local\Programs\oh-my-posh\themes\1_shell.omp.json | Invoke-Expression</span><br></pre></td></tr></table></figure><blockquote><p>这时，你会发现出现了一些方框，效果并不像图片上那么好。那是因为，还没有给主题安装适应的字体。</p></blockquote><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304011540140.webp" alt="image-20230401154035392"></p><p>这个时候需要下载工具支持的字体</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">官方</button></li><li class="tab"><button type="button" data-href="#test4-2">推荐</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p>使用字体管理器下载meslo</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">oh-my-posh font install</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><div class="btns rounded grid1">            <a class="button" href='https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/Meslo.zip' title='下载'><i class='fas fa-download'></i>下载</a>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>下载安装字体完成后配置字体生效</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">终端</button></li><li class="tab"><button type="button" data-href="#test4-2">vs code</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p>将终端设置中的json文件font的face更改为<code>MesloLGM NF</code> 就可以了</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304011603215.webp" alt="image-20230401160351377"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p>使用Visual Studio Code时，需要配置集成终端以使用书字体。<code>CTRL + ,</code>  输入<code>Integrated: Font Family</code> 输入字体<code>MesloLGM NF</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202304011612803.webp" alt="image-20230401161230224"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟专用网服务端搭建</title>
      <link href="/posts/f524320.html"/>
      <url>/posts/f524320.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="34c9c4b032b291b34c014bc271b1f7aaeba46414d13441e8484d6f5bb48e8d0b"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="您好, 这里需要密码.">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>linux配置jdk</title>
      <link href="/posts/e1e1d5ae.html"/>
      <url>/posts/e1e1d5ae.html</url>
      
        <content type="html"><![CDATA[<h1 id="linux配置"><a href="#linux配置" class="headerlink" title="linux配置"></a>linux配置</h1><h2 id="先查看是否有openjdk"><a href="#先查看是否有openjdk" class="headerlink" title="先查看是否有openjdk"></a>先查看是否有openjdk</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost zy]# java -version</span><br><span class="line">openjdk version &quot;1.8.0_362&quot;</span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_362-b08)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.362-b08, mixed mode)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost zy]# rpm -qa | grep jdk</span><br><span class="line">java-1.8.0-openjdk-headless-1.8.0.362.b08-1.el7_9.x86_64</span><br><span class="line">copy-jdk-configs-3.3-11.el7_9.noarch</span><br><span class="line">java-1.8.0-openjdk-1.8.0.362.b08-1.el7_9.x86_64</span><br></pre></td></tr></table></figure><h2 id="强制删除"><a href="#强制删除" class="headerlink" title="强制删除"></a>强制删除</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost zy]# rpm -e --nodeps java-1.8.0-openjdk-headless-1.8.0.362.b08-1.el7_9.x86_64</span><br><span class="line">[root@localhost zy]# rpm -e --nodeps copy-jdk-configs-3.3-11.el7_9.noarch</span><br><span class="line">[root@localhost zy]# rpm -e --nodeps java-1.8.0-openjdk-1.8.0.362.b08-1.el7_9.x86_64</span><br><span class="line">[root@localhost zy]# java -version</span><br><span class="line">bash: /usr/bin/java: 没有那个文件或目录</span><br><span class="line">[root@localhost zy]# </span><br></pre></td></tr></table></figure><h2 id="解压安装并配置环境变量"><a href="#解压安装并配置环境变量" class="headerlink" title="解压安装并配置环境变量"></a>解压安装并配置环境变量</h2><p>下载jdk 官方网站：<a href="https://www.oracle.com/java/technologies/downloads/#java8">oracle</a>  其他： <a href="https://cowtransfer.com/s/d208c338980e41">奶牛快传</a></p><p>/在 <code>/usr/local</code> 目录下新建Java文件夹</p><p>将jdk压缩包移动到Linux <code>/usr/local/java</code>目录下</p><p>执行 <code>tar xvf java/jdk-8u351-linux-x64.tar.gz</code></p><p>设置环境变量 全局设置方法，就是修改 <code>etc/profile</code>，它是是所有用户的共用的环境变量 找到 <code>/etc/profile</code>,编辑，在末尾添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME=/usr/local/java/jdk1.8.0_351</span><br><span class="line">export JRE_HOME=/usr/local/java/jdk1.8.0_351/jre</span><br><span class="line">export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib:$CLASSPATH</span><br><span class="line">export PATH=$JAVA_HOME/bin:$PATH</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后输入 <code>source /etc/profile</code>刷新环境变量</p><h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><p>输入 <code>java -version</code>查看输出</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202303301345349.webp" alt="image-20230330134530131"></p><h1 id="windows配置"><a href="#windows配置" class="headerlink" title="windows配置"></a>windows配置</h1><p>参考<a href="https://www.runoob.com/java/java-environment-setup.html">菜鸟教程</a></p>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>GitHub个人资料美化</title>
      <link href="/posts/1173a295.html"/>
      <url>/posts/1173a295.html</url>
      
        <content type="html"><![CDATA[<h1 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h1><ol><li><p>登录GitHub</p></li><li><p>创建新仓库</p></li><li><p>填写仓库信息</p><p>仓库名字与用户名字一致</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202303251156112.webp" alt="image-20230325115616833"></p></li></ol><p>我已经创建过了所以会提示</p><p>GitHub默认为此文件添加了demo，我们编辑此文件，即可开启自己的DIY之路了！</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202303251158526.webp" alt="image-20230325115850961"></p><h1 id="开始DIY"><a href="#开始DIY" class="headerlink" title="开始DIY"></a>开始DIY</h1><ol><li>可以前往这个网站进行基础设置<a href="https://www.profileme.dev/create-profile">ProfileMe.dev</a></li></ol><p>2.</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>重装系统后复刻源码</title>
      <link href="/posts/990aa559.html"/>
      <url>/posts/990aa559.html</url>
      
        <content type="html"><![CDATA[<ol><li>下载git</li><li><p>安装node</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>换原</p></li><li><p>配置用户名和邮箱</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">git config --global user.name &quot;你的用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>通过 <code>git config -l</code> 检查是否配置成功，至此git安装及配置全部完成。</p></li><li><p>执行以下命令生成ssh公钥，此公钥用于你的计算机连接Github</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>生成公钥</p><p>之后打开C盘下用户文件夹下的.ssh的文件夹，会看到 id_rsa.pub</p><p>复制到github</p><p>将 SSH KEY 配置到 GitHub</p><p>进入github，点击右上角头像 选择 <code>settings</code>，进入设置页后选择 <code>SSH and GPG keys</code>，名字随便起，公钥填到 <code>Key</code>那一栏。</p><p>测试连接，输入以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">PLAINTEXT</span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></li><li>仓库</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 存放源码的链接</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-cli -g </span><br><span class="line">下载hexo</span><br><span class="line">npm i </span><br><span class="line">进入源码所在的文件夹</span><br><span class="line">安装依赖</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b main # 切换到main分支，</span><br><span class="line">#2020年10月后github新建仓库默认分支改为main，注意更改</span><br><span class="line"># 如果不是，后面的所有设置的分支记得保持一致</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;github action update&quot;</span><br><span class="line">git push origin main</span><br><span class="line">#2020年10月后github新建仓库默认分支改为main，注意更改</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 重装系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安阳工学院宿舍区宽带自动连接</title>
      <link href="/posts/5c8a585f.html"/>
      <url>/posts/5c8a585f.html</url>
      
        <content type="html"><![CDATA[<h1 id="Python实现自动登录校园网并且维持校园网登录状态教程"><a href="#Python实现自动登录校园网并且维持校园网登录状态教程" class="headerlink" title="Python实现自动登录校园网并且维持校园网登录状态教程"></a>Python实现自动登录校园网并且维持校园网登录状态教程</h1><h2 id="程序登录"><a href="#程序登录" class="headerlink" title="程序登录"></a>程序登录</h2><h3 id="获取连接请求链接"><a href="#获取连接请求链接" class="headerlink" title="获取连接请求链接"></a>获取连接请求链接</h3><div class="tip error"><p>更正：登录请求连接一样 不需要获取了 可以直接跳转到代码部分</p></div><p>校园网宿舍区连接方式是post进行连接</p><p>进入<a href="http://172.168.254.6/">http://172.168.254.6/</a> 输入账号密码和选择连接方式 然后</p><blockquote><p>先不要点击登录  先进入控制台清理界面</p></blockquote><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302172025829.png" alt="image-20230217202043170"></p><p>然后点击登录</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302172022304.png" alt="image-20230217202247719"></p><p>将请求网址记录下来</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><h4 id="安装库"><a href="#安装库" class="headerlink" title="安装库"></a>安装库</h4><p>requests 这个库主要是用来向目标网页发送请求</p><p><strong>方法一：可以在 cmd 下使用命令下载安装：</strong></p><blockquote><p>按下 WIN+R 组合键，然后在弹出的窗口中输入 cmd ，再按下回车<br><strong>在 cmd 中输入：</strong><code>pip3 install requests</code><br>然后回车即可，等待下载完成</p></blockquote><p><strong>方法二：可以在 Pycharm 里安装这些库</strong></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302172029073.png" alt="image-20230217202924602"></p><p><strong>编写代码</strong></p><p> 填写自己的<strong>username</strong> 和<strong>pwd</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">import requests</span><br><span class="line">import socket</span><br><span class="line"></span><br><span class="line">#此处根据自己校园网Form Data中发送的数据进行更改</span><br><span class="line">username = &#x27;123456@yidong&#x27; # 格式学号@登录方式 联通@unicom 电信@telecom 移动@yidong</span><br><span class="line">pwd = &#x27;123456&#x27; # 校园网登录密码</span><br><span class="line">om = &#x27;123456&#x27; #不用管</span><br><span class="line">#获取计算机名称</span><br><span class="line">hostname=socket.gethostname()</span><br><span class="line">#获取本机IP</span><br><span class="line">ip=socket.gethostbyname(hostname)</span><br><span class="line">print(ip)</span><br><span class="line"># 登录地址</span><br><span class="line">post_addr = &quot;http://172.168.254.6:801/eportal/?c=ACSetting&amp;a=Login&amp;protocol=http:&amp;hostname=172.168.254.6&amp;iTermType=1&amp;wlanuserip=&quot;+ip+&quot;&amp;wlanacip=172.168.254.100&amp;mac=000000000000&amp;ip=&quot;+ip+&quot;&amp;enAdvert=0&amp;loginMethod=1&quot;</span><br><span class="line"></span><br><span class="line">post_data = &#123;</span><br><span class="line">   &#x27;DDDDD&#x27;: username,</span><br><span class="line">   &#x27;upass&#x27;: pwd,</span><br><span class="line">   &#x27;0MKKey&#x27;: om</span><br><span class="line">&#125;</span><br><span class="line"># 发送post请求登录网页</span><br><span class="line">requests.post(post_addr, data=post_data)</span><br><span class="line">print(&quot;login success!&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="执行程序-验证"><a href="#执行程序-验证" class="headerlink" title="执行程序 验证"></a>执行程序 验证</h4><p> 刚才我们在获取请求链接的时候登录成功了 先注销登录验证使用程序是否能够连接</p><p>进入<a href="http://172.168.254.6/">http://172.168.254.6/</a></p><p>点击注销登录</p><p>PyCharm 在<strong>终端</strong>运行</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302172041756.png" alt="image-20230217204108677"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python .\main.py</span><br></pre></td></tr></table></figure><p>然后随便进个网页验证是否连接成功</p><h4 id="校园网持久化"><a href="#校园网持久化" class="headerlink" title="校园网持久化"></a>校园网持久化</h4><p>经过上面的步骤，我们可以实现程序登录校园网</p><p>但是，有时候校园网过了一段时间会自动断开，这时候又需要我们在浏览器中输入账号密码来登录</p><p>我们的时间非常宝贵，不能浪费在登录校园网这种事情上</p><p>所以这就是本小节的内容：校园网持久化</p><details class="folding-tag" green><summary> 原理 </summary>              <div class='content'>              <p>思路：</p><p>1.判断是否连接上校园网</p><p>如果已连接，那么什么也不做</p><p>如果没有连接到校园网，那么开始连接校园网</p><p>2.将上述逻辑放入死循环中，让它一直执行</p><p>校园网页面的源代码中<code>&lt;title&gt;</code>标签为：注销页</p><p>这时断开校园网，再重复上述操作</p><p>可以看到校园网页面源代码中的<code>&lt;title&gt;</code>标签为：校园网登录页</p><p>接下来就简单了：</p><p>注销页 = 已登录校园网</p><p>校园网登录页 = 未登录校园网</p><p>我们只需要去获取到这个<code>&lt;title&gt;</code>标签，然后判断是哪种情况即可</p>              </div>            </details><p><strong>代码如下</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"># _*_ coding : utf-8 _*_</span><br><span class="line">import re    # 正则表达式，用于匹配字符</span><br><span class="line">import requests</span><br><span class="line">import socket</span><br><span class="line"></span><br><span class="line">#此处根据自己校园网Form Data中发送的数据进行更改</span><br><span class="line">username = &#x27;123456@yidong&#x27; # 格式学号@登录方式 联通@unicom 电信@telecom 移动@yidong</span><br><span class="line">pwd = &#x27;123456&#x27; # 校园网登录密码</span><br><span class="line">om = &#x27;123456&#x27; #不用管</span><br><span class="line">#获取计算机名称</span><br><span class="line">hostname=socket.gethostname()</span><br><span class="line">#获取本机IP</span><br><span class="line">ip=socket.gethostbyname(hostname)</span><br><span class="line">print(ip)</span><br><span class="line"># 登录地址</span><br><span class="line">post_addr = &quot;http://172.168.254.6:801/eportal/?c=ACSetting&amp;a=Login&amp;protocol=http:&amp;hostname=172.168.254.6&amp;iTermType=1&amp;wlanuserip=&quot;+ip+&quot;&amp;wlanacip=172.168.254.100&amp;mac=000000000000&amp;ip=&quot;+ip+&quot;&amp;enAdvert=0&amp;loginMethod=1&quot;</span><br><span class="line"></span><br><span class="line">post_data = &#123;</span><br><span class="line">   &#x27;DDDDD&#x27;: username,</span><br><span class="line">   &#x27;upass&#x27;: pwd,</span><br><span class="line">   &#x27;0MKKey&#x27;: om</span><br><span class="line">&#125;</span><br><span class="line">schoolWebURL = &#x27;http://172.168.254.6/&#x27;</span><br><span class="line">while(True):</span><br><span class="line">   # 正则表达式，匹配&lt;title&gt;标签中的内容</span><br><span class="line">   response = requests.get(schoolWebURL)</span><br><span class="line">   pattern = re.compile(&#x27;&lt;title&gt;(.*?)&lt;/title&gt;&#x27;, re.S)</span><br><span class="line">   title = re.findall(pattern, response.text)</span><br><span class="line">   title = title[0]  # 将格式转为字符串</span><br><span class="line"></span><br><span class="line">   if title == &#x27;注销页&#x27;:  # 根据上面的分析填入相应的字符</span><br><span class="line">      pass</span><br><span class="line">   else:</span><br><span class="line">      # 发送post请求登录网页</span><br><span class="line">      requests.post(post_addr, data=post_data)</span><br><span class="line">      print(&quot;login success!&quot;)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>现在你可以运行代码，然后再断开校园网，看它是否能正常帮你连上校园网</p><p>代码运行成功！</p><h2 id="开机自动启动"><a href="#开机自动启动" class="headerlink" title="开机自动启动"></a>开机自动启动</h2><h4 id="安装库-1"><a href="#安装库-1" class="headerlink" title="安装库"></a>安装库</h4><p>pyinstaller 这个库用来将我们写好的代码打包成类似于 .exe 的可执行程序</p><p><strong>方法一：可以在 cmd 下使用命令下载安装：</strong></p><blockquote><p><strong>cmd 中输入：</strong><code>pip3 install pyinstaller</code><br>然后回车，等待它下载完成即可</p></blockquote><p><strong>方法二：可以在 Pycharm 里安装这些库</strong></p><p>看前边</p><h4 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h4><p> 终端输入（cmd终端和Pycharm终端都可以 但是要进入main的路径）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -F -w main.py</span><br></pre></td></tr></table></figure><blockquote><p><strong>注意， 上面这行命令中的<code>main.py</code>是我的 Python 代码文件名，你需要替换为你自己的</strong></p></blockquote><p>这次我们添加了 <code>-w</code> 参数，这表示当我们执行打包好的<code>.exe</code> 程序时不会有黑框框出来(它会在后台运行)</p><p>等待打包完成，在 dist 目录下可以看到一个<code>.exe</code>程序</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302172113485.png" alt="image-20230217211319242"></p><p>当你双击执行它的时候，不会有弹窗出现，只是在后台运行</p><h4 id="设置开机自动运行"><a href="#设置开机自动运行" class="headerlink" title="设置开机自动运行"></a>设置开机自动运行</h4><p>搜索计算机管理</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302172114034.png" alt="image-20230217211424380"></p><p>然后按照下图依次点击：</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302172116334.png" alt="image-20230217211622708"></p><p>在新出现的窗口中输入名称，描述可以不用写，然后点击下一步</p><p>再接着，勾选<code>计算机启动时</code> ，然后点击下一步</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302172117182.png" alt="image-20230217211742787"></p><p>勾选<code>启动程序</code> ，然后点击下一步</p><p>点击浏览，选择好你刚刚打包好的<code>.exe</code>程序 ，选择好后点击下一步</p><p>把这个选项勾选上，然后点击完成</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302172120065.png" alt="image-20230217212005551"></p><p>如下图，在出现的窗口中选择好操作系统</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302172121117.png" alt="image-20230217212102477"></p><p>在同样的窗口中点击<code>条件</code>，按照你自己的需要进行勾选</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302172122006.png" alt="image-20230217212157282"></p><p>在同样的页面中点击<code>设置</code>，自行设置，完成后点击<code>确定</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302172122713.png" alt="image-20230217212251845"></p><p>通过以上步骤我们就实现了每次开机的时候自动登录校园网，再也不用每次都要开浏览器自己手动登录了</p><p>快断开你的校园网然后重启你的电脑试试看吧</p>]]></content>
      
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vscode使用ssh免密连接</title>
      <link href="/posts/5b94c199.html"/>
      <url>/posts/5b94c199.html</url>
      
        <content type="html"><![CDATA[<h1 id="vscode连接服务器"><a href="#vscode连接服务器" class="headerlink" title="vscode连接服务器"></a>vscode连接服务器</h1><h2 id="在vscode安装remote-ssh插件"><a href="#在vscode安装remote-ssh插件" class="headerlink" title="在vscode安装remote-ssh插件"></a>在vscode安装remote-ssh插件</h2><p>直接在vscode中搜索remote-ssh即可安装</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302081406179.png" alt="image-20230208140617756"></p><h2 id="使用remote-ssh远程登录ssh"><a href="#使用remote-ssh远程登录ssh" class="headerlink" title="使用remote-ssh远程登录ssh"></a>使用remote-ssh远程登录ssh</h2><p>按照下图标记依次点击1、2、3，就会出现remote-ssh编辑界面，用来输出要远程登录的ssh</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302081408109.png" alt="image-20230208140837802"></p><p>这是远程ssh信息的编辑界面：</p><ul><li>Host是这个ssh信息在你本地的显示内容</li><li>HostName是你的远程ssh的ip信息</li><li>User是你的远程ssh的用户名，如果远程是Linux系统的话，这个就是你登录Linux的用户名</li></ul><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302081411963.png" alt="image-20230208141151449"></p><p>这里我使用的是docker安装的ubuntu所以指定了port为50003,如果你使用默认的22端口可以不用添加port这一行</p><p>输入完成保存以后，右侧就会出现你的刚才设置的信息</p><p>然后点击下图圈起来的按钮，用来登录你的远程ssh</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302081415051.png" alt="image-20230208141550408"></p><p>选择登录的系统类型</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302081416861.png" alt="image-20230208141607559"></p><p>输入yes回车</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302081417536.png" alt="image-20230208141713300"></p><p>输入密码</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302081417899.png" alt="image-20230208141748615"></p><h1 id="服务器开启ssh"><a href="#服务器开启ssh" class="headerlink" title="服务器开启ssh"></a>服务器开启ssh</h1><p><a href="https://blog.csdn.net/crayon0/article/details/122272001">Linux开启ssh并允许root登录(ubuntu、centos、kalilinux)</a></p><h1 id="设置免密登录"><a href="#设置免密登录" class="headerlink" title="设置免密登录"></a>设置免密登录</h1><blockquote><p> 如果之前生成过ssh可以不用重新生成</p></blockquote><p>当可以连接上ssh以后，在<code>本机电脑</code>打开命令行，输入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure><p>回车，一直回车，不要输入任何内容</p><p>生成完成之后打开c盘找到.ssh文件夹  <code>一般在用户文件夹下</code></p><p>找到<code>id_rsa.pub</code>文件复制里边的内容，然后在要免密连接服务器上进行一下操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd .ssh</span><br><span class="line">vi authorized_keys</span><br><span class="line">sudo chmod 600 authorized_keys</span><br><span class="line">service sshd restart</span><br></pre></td></tr></table></figure><p>可能在最后一条命令要输出你的账号登录密码。<br>这样远程ssh主机配置免密码登录就完成了。<br>然后你可以在vscode重复打开远程ssh的步骤，看看是否还需要输入密码了。</p><h1 id="报错"><a href="#报错" class="headerlink" title="报错"></a>报错</h1><p>我经历过有一个<code>过程试图写入的管道不存在</code> 我的报错是因为之前在.ssh文件夹内有过服务器连接的历史 把 known_hosts 和 known_hosts.old中关于要连接服务器的历史记录删除就可以了</p>]]></content>
      
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>红米a6s安装openwrt</title>
      <link href="/posts/c975c363.html"/>
      <url>/posts/c975c363.html</url>
      
        <content type="html"><![CDATA[<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>红米 AX6S 路由器</li><li>一台 Windows 或 Mac 的电脑</li><li><a href="https://ptk7-my.sharepoint.com/:f:/g/personal/2663221849zy_ptk7_onmicrosoft_com/EvKcaKaedr9KiYsYsdaUvTYBwb4PK3dZHKu7K_EU0BCmMg?e=gLIgjE">提前下载好需要的固件</a></li><li><a href="https://termius.com/windows">下载安装好 Termius</a>（老手可以不安装，直接用系统自带的 terminal）</li></ul><h2 id="解锁-SSH"><a href="#解锁-SSH" class="headerlink" title="解锁 SSH"></a>解锁 SSH</h2><p><strong>1. 升级开发版固件</strong></p><p>登录红米 AX6S 的后台（一般是：192.168.31.1），点击右上角选择-系统升级-选择手动升级，勾选下载好的「内测版」固件（miwifi_rb03_firmware_stable_1.2.7（内测版) 这个文件），点击开始升级。</p><p>⌛️等待系统升级完成重启，重新连接上 Wi-Fi。</p><p><strong>2. 在线计算 root 密码</strong></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302041807957.png" alt="image-20230204180747445"></p><p>浏览器打开<a href="https://miwifi.dev/ssh">https://miwifi.dev/ssh</a>输入路由器后台右下角完整的 SN 号(如果没有也可在路由器背面查看)，点击 calc。<strong>计算出来的结果就是 root 密码，复制保存好</strong></p><p>如果上面这个网站你访问不了，可以稍麻烦一点</p><ul><li>下载这个脚本文件unlock_pwd.py （脚本下载地址：<a href="https://raw.githubusercontent.com/YangWang92/AX6S-unlock/master/unlock_pwd.py">https://raw.githubusercontent.com/YangWang92/AX6S-unlock/master/unlock_pwd.py</a> ）</li></ul><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302041824618.png" alt="image-20230204182436551"></p><p>如果你点击这个链接后浏览器里直接显示了脚本的内容而不是下载.py文件，你可以在浏览器页面上点击右键选择“另存为”来把它保存成文件</p><ul><li>安装python</li><li>打开Windows里的CMD/Powershell，并cd到你保存unlock_pwd.py文件的目录</li><li>执行如下命令： <code>python .\unlock_pwd.py aaaaa/xxxxxxxxx</code> ，其中“aaaaa/xxxxxxxxx”替换为你的序列号</li></ul><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302041841831.webp" alt="img"></p><p><strong>3. telnet 连接开启 ssh</strong></p><p>打开 Termius，可以选择不登录 Continue Without Account。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302041812956.png" alt="image-20230204181218104"></p><p>Address 填写：192.168.31.1</p><p>SSH：取消勾选</p><p>Telnet：勾选</p><p>然后点击向右的箭头，最后选择 Hosts 里的「192.168.31.1」开始 telnet 连接</p><ul><li>login 用户名：root</li><li>密码通过在线计算得来，复制粘贴回车即可。（输入不显示）</li></ul><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302041814509.png" alt="img"></p><p>复制以下命令，回车即可开启 ssh。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nvram set ssh_en=1 &amp; nvram set uart_en=1 &amp; nvram set boot_wait=on &amp; nvram set bootdelay=3 &amp; nvram set flag_try_sys1_failed=0 &amp; nvram set flag_try_sys2_failed=1</span><br><span class="line">nvram set flag_boot_rootfs=0 &amp; nvram set &quot;boot_fw1=run boot_rd_img;bootm&quot;</span><br><span class="line">nvram set flag_boot_success=1 &amp; nvram commit &amp; /etc/init.d/dropbear enable &amp; /etc/init.d/dropbear start</span><br></pre></td></tr></table></figure><p><strong>4. 尝试 ssh 连接路由器</strong></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302041816932.png" alt="image-20230204181619713"></p><p>选择 Hosts-点击 New Host 添加</p><p>Address 填写：192.168.31.1</p><p>SSH 的用户名里填写：root</p><p>Password 粘贴之前计算出来的 root 密码</p><p>点击右上角箭头，再点击 Hosts 里的 192.168.31.1 就应该能连接上 SSH 了。（注意选择 ssh 不是 telnet）</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302041817805.png" alt="image-20230204181705165"></p><p>选择 ADD AND CONTINUE，就会进入 SSH 连接。</p><h2 id="安装-openwrt-系统"><a href="#安装-openwrt-系统" class="headerlink" title="安装 openwrt 系统"></a>安装 openwrt 系统</h2><p><strong>1. 刷入过渡 openwrt 固件</strong></p><p>在 SSH 里复制粘贴下面的命令，便可刷入 openwrt 过渡固件。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /tmp</span><br><span class="line">curl -L https://sebs.oss-cn-shanghai.aliyuncs.com/factory.bin -o factory.bin</span><br><span class="line">mtd -r write /tmp/factory.bin firmware</span><br></pre></td></tr></table></figure><p>刷入过渡固件后会自动重启，Wi-Fi 名会变为 openwrt-5G。</p><ul><li>默认后台：192.168.6.1</li><li>用户名：root</li><li>密码：password</li></ul><p><strong>2. 刷写其它第三方固件：</strong></p><p>在路由器后台选择-System-Backup / Flash Firmware</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302041819965.png" alt="image-20230204181902925"></p><p><strong>不要勾选</strong> Keep settings，然后 Image 选择文件选择 openwrt 固件(CCA2878-3-14-immortalwrt文件)，然后点击 Flash image。</p><p>最后选择 Proceed 即可。</p><p>如果上一步操作顺利，路由器重启后，电脑就能够通过192.168.1.1访问openwrt系统了。</p><h2 id="失败重置"><a href="#失败重置" class="headerlink" title="失败重置"></a>失败重置</h2><p>我在设置openwrt设置的时候设置错误导致了他崩溃了！！！ 对没错 崩溃了哎 然后找到了“变砖”恢复方法</p><p>打开<a href="http://www1.miwifi.com/miwifi_download.html">小米路由器修复工具网站</a></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202302041831850.png" alt="image-20230204183140882"></p><p>下载打开之后 选择开发版的安装包（miwifi_rb03_firmware_stable_1.2.7（内测版））下一步</p><p>选择<strong>以太网</strong> </p><p>断开电源 用卡针顶住重置孔 开机 等到黄灯闪烁可以松开卡针 这个时候就已经重置完成了</p>]]></content>
      
      
      <categories>
          
          <category> 家庭网络设备 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 折腾 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker命令</title>
      <link href="/posts/b1109de1.html"/>
      <url>/posts/b1109de1.html</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-命令"><a href="#Docker-命令" class="headerlink" title="Docker 命令"></a>Docker 命令</h1><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><p>Docker 命令有两大类，客户端命令和服务端命令。前者是主要的操作接口，后者用来启动 Docker Daemon。</p><ul><li>客户端命令：基本命令格式为 <code>docker [OPTIONS] COMMAND [arg...]</code>；</li><li>服务端命令：基本命令格式为 <code>dockerd [OPTIONS]</code>。</li></ul><p>可以通过 <code>man docker</code> 或 <code>docker help</code> 来查看这些命令。</p><h2 id="客户端命令选项"><a href="#客户端命令选项" class="headerlink" title="客户端命令选项"></a>客户端命令选项</h2><ul><li><code>--config=&quot;&quot;</code>：指定客户端配置文件，默认为 <code>~/.docker</code>；</li><li><code>-D=true|false</code>：是否使用 debug 模式。默认不开启；</li><li><code>-H, --host=[]</code>：指定命令对应 Docker 守护进程的监听接口，可以为 unix 套接字 <code>unix:///path/to/socket</code>，文件句柄 <code>fd://socketfd</code> 或 tcp 套接字 <code>tcp://[host[:port]]</code>，默认为 <code>unix:///var/run/docker.sock</code>；</li><li><code>-l, --log-level=&quot;debug|info|warn|error|fatal&quot;</code>：指定日志输出级别；</li><li><code>--tls=true|false</code>：是否对 Docker 守护进程启用 TLS 安全机制，默认为否；</li><li><code>--tlscacert=/.docker/ca.pem</code>：TLS CA 签名的可信证书文件路径；</li><li><code>--tlscert=/.docker/cert.pem</code>：TLS 可信证书文件路径；</li><li><code>--tlscert=/.docker/key.pem</code>：TLS 密钥文件路径；</li><li><code>--tlsverify=true|false</code>：启用 TLS 校验，默认为否。</li></ul><h2 id="客户端命令"><a href="#客户端命令" class="headerlink" title="客户端命令"></a>客户端命令</h2><p>可以通过 <code>docker COMMAND --help</code> 来查看这些命令的具体用法。</p><ul><li><code>attach</code>：依附到一个正在运行的容器中；</li><li><code>build</code>：从一个 Dockerfile 创建一个镜像；</li><li><code>commit</code>：从一个容器的修改中创建一个新的镜像；</li><li><code>cp</code>：在容器和本地宿主系统之间复制文件中；</li><li><code>create</code>：创建一个新容器，但并不运行它；</li><li><code>diff</code>：检查一个容器内文件系统的修改，包括修改和增加；</li><li><code>events</code>：从服务端获取实时的事件；</li><li><code>exec</code>：在运行的容器内执行命令；</li><li><code>export</code>：导出容器内容为一个 <code>tar</code> 包；</li><li><code>history</code>：显示一个镜像的历史信息；</li><li><code>images</code>：列出存在的镜像；</li><li><code>import</code>：导入一个文件（典型为 <code>tar</code> 包）路径或目录来创建一个本地镜像；</li><li><code>info</code>：显示一些相关的系统信息；</li><li><code>inspect</code>：显示一个容器的具体配置信息；</li><li><code>kill</code>：关闭一个运行中的容器 (包括进程和所有相关资源)；</li><li><code>load</code>：从一个 tar 包中加载一个镜像；</li><li><code>login</code>：注册或登录到一个 Docker 的仓库服务器；</li><li><code>logout</code>：从 Docker 的仓库服务器登出；</li><li><code>logs</code>：获取容器的 log 信息；</li><li><code>network</code>：管理 Docker 的网络，包括查看、创建、删除、挂载、卸载等；</li><li><code>node</code>：管理 swarm 集群中的节点，包括查看、更新、删除、提升/取消管理节点等；</li><li><code>pause</code>：暂停一个容器中的所有进程；</li><li><code>port</code>：查找一个 nat 到一个私有网口的公共口；</li><li><code>ps</code>：列出主机上的容器；</li><li><code>pull</code>：从一个Docker的仓库服务器下拉一个镜像或仓库；</li><li><code>push</code>：将一个镜像或者仓库推送到一个 Docker 的注册服务器；</li><li><code>rename</code>：重命名一个容器；</li><li><code>restart</code>：重启一个运行中的容器；</li><li><code>rm</code>：删除给定的若干个容器；</li><li><code>rmi</code>：删除给定的若干个镜像；</li><li><code>run</code>：创建一个新容器，并在其中运行给定命令；</li><li><code>save</code>：保存一个镜像为 tar 包文件；</li><li><code>search</code>：在 Docker index 中搜索一个镜像；</li><li><code>service</code>：管理 Docker 所启动的应用服务，包括创建、更新、删除等；</li><li><code>start</code>：启动一个容器；</li><li><code>stats</code>：输出（一个或多个）容器的资源使用统计信息；</li><li><code>stop</code>：终止一个运行中的容器；</li><li><code>swarm</code>：管理 Docker swarm 集群，包括创建、加入、退出、更新等；</li><li><code>tag</code>：为一个镜像打标签；</li><li><code>top</code>：查看一个容器中的正在运行的进程信息；</li><li><code>unpause</code>：将一个容器内所有的进程从暂停状态中恢复；</li><li><code>update</code>：更新指定的若干容器的配置信息；</li><li><code>version</code>：输出 Docker 的版本信息；</li><li><code>volume</code>：管理 Docker volume，包括查看、创建、删除等；</li><li><code>wait</code>：阻塞直到一个容器终止，然后输出它的退出符。</li><li></li></ul><h2 id="服务端-命令选项"><a href="#服务端-命令选项" class="headerlink" title="服务端 命令选项"></a>服务端 命令选项</h2><ul><li><code>--api-cors-header=&quot;&quot;</code>：CORS 头部域，默认不允许 CORS，要允许任意的跨域访问，可以指定为 “*”；</li><li><code>--authorization-plugin=&quot;&quot;</code>：载入认证的插件；</li><li><code>-b=&quot;&quot;</code>：将容器挂载到一个已存在的网桥上。指定为 <code>none</code> 时则禁用容器的网络，与 <code>--bip</code> 选项互斥；</li><li><code>--bip=&quot;&quot;</code>：让动态创建的 <code>docker0</code> 网桥采用给定的 CIDR 地址; 与 <code>-b</code> 选项互斥；</li><li><code>--cgroup-parent=&quot;&quot;</code>：指定 cgroup 的父组，默认 fs cgroup 驱动为 <code>/docker</code>，systemd cgroup 驱动为 <code>system.slice</code>；</li><li><code>--cluster-store=&quot;&quot;</code>：构成集群（如 <code>Swarm</code>）时，集群键值数据库服务地址；</li><li><code>--cluster-advertise=&quot;&quot;</code>：构成集群时，自身的被访问地址，可以为 <code>host:port</code> 或 <code>interface:port</code>；</li><li><code>--cluster-store-opt=&quot;&quot;</code>：构成集群时，键值数据库的配置选项；</li><li><code>--config-file=&quot;/etc/docker/daemon.json&quot;</code>：daemon 配置文件路径；</li><li><code>--containerd=&quot;&quot;</code>：containerd 文件的路径；</li><li><code>-D, --debug=true|false</code>：是否使用 Debug 模式。缺省为 false；</li><li><code>--default-gateway=&quot;&quot;</code>：容器的 IPv4 网关地址，必须在网桥的子网段内；</li><li><code>--default-gateway-v6=&quot;&quot;</code>：容器的 IPv6 网关地址；</li><li><code>--default-ulimit=[]</code>：默认的 ulimit 值；</li><li><code>--disable-legacy-registry=true|false</code>：是否允许访问旧版本的镜像仓库服务器；</li><li><code>--dns=&quot;&quot;</code>：指定容器使用的 DNS 服务器地址；</li><li><code>--dns-opt=&quot;&quot;</code>：DNS 选项；</li><li><code>--dns-search=[]</code>：DNS 搜索域；</li><li><code>--exec-opt=[]</code>：运行时的执行选项；</li><li><code>--exec-root=&quot;&quot;</code>：容器执行状态文件的根路径，默认为 <code>/var/run/docker</code>；</li><li><code>--fixed-cidr=&quot;&quot;</code>：限定分配 IPv4 地址范围；</li><li><code>--fixed-cidr-v6=&quot;&quot;</code>：限定分配 IPv6 地址范围；</li><li><code>-G, --group=&quot;&quot;</code>：分配给 unix 套接字的组，默认为 <code>docker</code>；</li><li><code>-g, --graph=&quot;&quot;</code>：Docker 运行时的根路径，默认为 <code>/var/lib/docker</code>；</li><li><code>-H, --host=[]</code>：指定命令对应 Docker daemon 的监听接口，可以为 unix 套接字 <code>unix:///path/to/socket</code>，文件句柄 <code>fd://socketfd</code> 或 tcp 套接字 <code>tcp://[host[:port]]</code>，默认为 <code>unix:///var/run/docker.sock</code>；</li><li><code>--icc=true|false</code>：是否启用容器间以及跟 daemon 所在主机的通信。默认为 true。</li><li><code>--insecure-registry=[]</code>：允许访问给定的非安全仓库服务；</li><li><code>--ip=&quot;&quot;</code>：绑定容器端口时候的默认 IP 地址。缺省为 <code>0.0.0.0</code>；</li><li><code>--ip-forward=true|false</code>：是否检查启动在 Docker 主机上的启用 IP 转发服务，默认开启。注意关闭该选项将不对系统转发能力进行任何检查修改；</li><li><code>--ip-masq=true|false</code>：是否进行地址伪装，用于容器访问外部网络，默认开启；</li><li><code>--iptables=true|false</code>：是否允许 Docker 添加 iptables 规则。缺省为 true；</li><li><code>--ipv6=true|false</code>：是否启用 IPv6 支持，默认关闭；</li><li><code>-l, --log-level=&quot;debug|info|warn|error|fatal&quot;</code>：指定日志输出级别；</li><li><code>--label=&quot;[]&quot;</code>：添加指定的键值对标注；</li><li><code>--log-driver=&quot;json-file|syslog|journald|gelf|fluentd|awslogs|splunk|etwlogs|gcplogs|none&quot;</code>：指定日志后端驱动，默认为 <code>json-file</code>；</li><li><code>--log-opt=[]</code>：日志后端的选项；</li><li><code>--mtu=VALUE</code>：指定容器网络的 <code>mtu</code>；</li><li><code>-p=&quot;&quot;</code>：指定 daemon 的 PID 文件路径。缺省为 <code>/var/run/docker.pid</code>；</li><li><code>--raw-logs</code>：输出原始，未加色彩的日志信息；</li><li><code>--registry-mirror=&lt;scheme&gt;://&lt;host&gt;</code>：指定 <code>docker pull</code> 时使用的注册服务器镜像地址；</li><li><code>-s, --storage-driver=&quot;&quot;</code>：指定使用给定的存储后端；</li><li><code>--selinux-enabled=true|false</code>：是否启用 SELinux 支持。缺省值为 false。SELinux 目前尚不支持 overlay 存储驱动；</li><li><code>--storage-opt=[]</code>：驱动后端选项；</li><li><code>--tls=true|false</code>：是否对 Docker daemon 启用 TLS 安全机制，默认为否；</li><li><code>--tlscacert=/.docker/ca.pem</code>：TLS CA 签名的可信证书文件路径；</li><li><code>--tlscert=/.docker/cert.pem</code>：TLS 可信证书文件路径；</li><li><code>--tlscert=/.docker/key.pem</code>：TLS 密钥文件路径；</li><li><code>--tlsverify=true|false</code>：启用 TLS 校验，默认为否；</li><li><code>--userland-proxy=true|false</code>：是否使用用户态代理来实现容器间和出容器的回环通信，默认为 true；</li><li><code>--userns-remap=default|uid:gid|user:group|user|uid</code>：指定容器的用户命名空间，默认是创建新的 UID 和 GID 映射到容器内进程。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker基础使用</title>
      <link href="/posts/cf791c57.html"/>
      <url>/posts/cf791c57.html</url>
      
        <content type="html"><![CDATA[<h1 id="镜像"><a href="#镜像" class="headerlink" title="镜像"></a>镜像</h1><h2 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h2><p>之前提到过，<a href="https://hub.docker.com/search?q=&amp;type=image">Docker Hub</a> 上有大量的高质量的镜像可以用，这里我们就说一下怎么获取这些镜像。</p><p>从 Docker 镜像仓库获取镜像的命令是 <code>docker pull</code>。其命令格式为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull [选项] [Docker Registry 地址[:端口号]/]仓库名[:标签]</span><br></pre></td></tr></table></figure><p>具体的选项可以通过 <code>docker pull --help</code> 命令看到，这里我们说一下镜像名称的格式。</p><ul><li>Docker 镜像仓库地址：地址的格式一般是 <code>&lt;域名/IP&gt;[:端口号]</code>。默认地址是 Docker Hub(<code>docker.io</code>)。</li><li>仓库名：如之前所说，这里的仓库名是两段式名称，即 <code>&lt;用户名&gt;/&lt;软件名&gt;</code>。对于 Docker Hub，如果不给出用户名，则默认为 <code>library</code>，也就是官方镜像。 </li></ul><p>比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull ubuntu:18.04</span><br><span class="line">18.04: Pulling from library/ubuntu</span><br><span class="line">92dc2a97ff99: Pull complete</span><br><span class="line">be13a9d27eb8: Pull complete</span><br><span class="line">c8299583700a: Pull complete</span><br><span class="line">Digest: sha256:4bc3ae6596938cb0d9e5ac51a1152ec9dcac2a1c50829c74abd9c4361e321b26</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> ubuntu:18.04</span><br><span class="line">docker.io/library/ubuntu:18.04</span><br></pre></td></tr></table></figure><p>上面的命令中没有给出 Docker 镜像仓库地址，因此将会从 Docker Hub （<code>docker.io</code>）获取镜像。而镜像名称是 <code>ubuntu:18.04</code>，因此将会获取官方镜像 <code>library/ubuntu</code> 仓库中标签为 <code>18.04</code> 的镜像。<code>docker pull</code> 命令的输出结果最后一行给出了镜像的完整名称，即： <code>docker.io/library/ubuntu:18.04</code>。</p><p>从下载过程中可以看到我们之前提及的分层存储的概念，镜像是由多层存储所构成。下载也是一层层的去下载，并非单一文件。下载过程中给出了每一层的 ID 的前 12 位。并且下载结束后，给出该镜像完整的 <code>sha256</code> 的摘要，以确保下载一致性。</p><p>在使用上面命令的时候，你可能会发现，你所看到的层 ID 以及 <code>sha256</code> 的摘要和这里的不一样。这是因为官方镜像是一直在维护的，有任何新的 bug，或者版本更新，都会进行修复再以原来的标签发布，这样可以确保任何使用这个标签的用户可以获得更安全、更稳定的镜像。</p><p><em>如果从 Docker Hub 下载镜像非常缓慢，可以参照 镜像加速器 一节配置加速器。</em></p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>有了镜像后，我们就能够以这个镜像为基础启动并运行一个容器。以上面的 <code>ubuntu:18.04</code> 为例，如果我们打算启动里面的 <code>bash</code> 并且进行交互式操作的话，可以执行下面的命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -it --<span class="built_in">rm</span> ubuntu:18.04 bash</span><br><span class="line">root@e7009c6ce357:/<span class="comment"># cat /etc/os-release</span></span><br><span class="line">NAME=<span class="string">&quot;Ubuntu&quot;</span></span><br><span class="line">VERSION=<span class="string">&quot;18.04.1 LTS (Bionic Beaver)&quot;</span></span><br><span class="line">ID=ubuntu</span><br><span class="line">ID_LIKE=debian</span><br><span class="line">PRETTY_NAME=<span class="string">&quot;Ubuntu 18.04.1 LTS&quot;</span></span><br><span class="line">VERSION_ID=<span class="string">&quot;18.04&quot;</span></span><br><span class="line">HOME_URL=<span class="string">&quot;https://www.ubuntu.com/&quot;</span></span><br><span class="line">SUPPORT_URL=<span class="string">&quot;https://help.ubuntu.com/&quot;</span></span><br><span class="line">BUG_REPORT_URL=<span class="string">&quot;https://bugs.launchpad.net/ubuntu/&quot;</span></span><br><span class="line">PRIVACY_POLICY_URL=<span class="string">&quot;https://www.ubuntu.com/legal/terms-and-policies/privacy-policy&quot;</span></span><br><span class="line">VERSION_CODENAME=bionic</span><br><span class="line">UBUNTU_CODENAME=bionic</span><br></pre></td></tr></table></figure><p><code>docker run</code> 就是运行容器的命令，具体格式我们会在 容器一节进行详细讲解，我们这里简要的说明一下上面用到的参数。</p><ul><li><code>-it</code>：这是两个参数，一个是 <code>-i</code>：交互式操作，一个是 <code>-t</code> 终端。我们这里打算进入 <code>bash</code> 执行一些命令并查看返回结果，因此我们需要交互式终端。</li><li><code>--rm</code>：这个参数是说容器退出后随之将其删除。默认情况下，为了排障需求，退出的容器并不会立即删除，除非手动 <code>docker rm</code>。我们这里只是随便执行个命令，看看结果，不需要排障和保留结果，因此使用 <code>--rm</code> 可以避免浪费空间。</li><li><code>ubuntu:18.04</code>：这是指用 <code>ubuntu:18.04</code> 镜像为基础来启动容器。</li><li><code>bash</code>：放在镜像名后的是 <strong>命令</strong>，这里我们希望有个交互式 Shell，因此用的是 <code>bash</code>。</li></ul><p>进入容器后，我们可以在 Shell 下操作，执行任何所需的命令。这里，我们执行了 <code>cat /etc/os-release</code>，这是 Linux 常用的查看当前系统版本的命令，从返回的结果可以看到容器内是 <code>Ubuntu 18.04.1 LTS</code> 系统。</p><p>最后我们通过 <code>exit</code> 退出了这个容器。</p><h2 id="列出镜像"><a href="#列出镜像" class="headerlink" title="列出镜像"></a>列出镜像</h2><p>要想列出已经下载下来的镜像，可以使用 <code>docker image ls</code> 命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">ls</span></span><br><span class="line">REPOSITORY           TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">redis                latest              5f515359c7f8        5 days ago          183 MB</span><br><span class="line">nginx                latest              05a60462f8ba        5 days ago          181 MB</span><br><span class="line">mongo                3.2                 fe9198c04d62        5 days ago          342 MB</span><br><span class="line">&lt;none&gt;               &lt;none&gt;              00285df0df87        5 days ago          342 MB</span><br><span class="line">ubuntu               18.04               329ed837d508        3 days ago          63.3MB</span><br><span class="line">ubuntu               bionic              329ed837d508        3 days ago          63.3MB</span><br></pre></td></tr></table></figure><p>列表包含了 <code>仓库名</code>、<code>标签</code>、<code>镜像 ID</code>、<code>创建时间</code> 以及 <code>所占用的空间</code>。</p><p>其中仓库名、标签在之前的基础概念章节已经介绍过了。<strong>镜像 ID</strong> 则是镜像的唯一标识，一个镜像可以对应多个 <strong>标签</strong>。因此，在上面的例子中，我们可以看到 <code>ubuntu:18.04</code> 和 <code>ubuntu:bionic</code> 拥有相同的 ID，因为它们对应的是同一个镜像。</p><h3 id="镜像体积"><a href="#镜像体积" class="headerlink" title="镜像体积"></a>镜像体积</h3><p>如果仔细观察，会注意到，这里标识的所占用空间和在 Docker Hub 上看到的镜像大小不同。比如，<code>ubuntu:18.04</code> 镜像大小，在这里是 <code>63.3MB</code>，但是在 <a href="https://hub.docker.com/layers/ubuntu/library/ubuntu/bionic/images/sha256-32776cc92b5810ce72e77aca1d949de1f348e1d281d3f00ebcc22a3adcdc9f42?context=explore">Docker Hub</a> 显示的却是 <code>25.47 MB</code>。这是因为 Docker Hub 中显示的体积是压缩后的体积。在镜像下载和上传过程中镜像是保持着压缩状态的，因此 Docker Hub 所显示的大小是网络传输中更关心的流量大小。而 <code>docker image ls</code> 显示的是镜像下载到本地后，展开的大小，准确说，是展开后的各层所占空间的总和，因为镜像到本地后，查看空间的时候，更关心的是本地磁盘空间占用的大小。</p><p>另外一个需要注意的问题是，<code>docker image ls</code> 列表中的镜像体积总和并非是所有镜像实际硬盘消耗。由于 Docker 镜像是多层存储结构，并且可以继承、复用，因此不同镜像可能会因为使用相同的基础镜像，从而拥有共同的层。由于 Docker 使用 Union FS，相同的层只需要保存一份即可，因此实际镜像硬盘占用空间很可能要比这个列表镜像大小的总和要小的多。</p><p>你可以通过 <code>docker system df</code> 命令来便捷的查看镜像、容器、数据卷所占用的空间。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker system <span class="built_in">df</span></span><br><span class="line">TYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLE</span><br><span class="line">Images              24                  0                   1.992GB             1.992GB (100%)</span><br><span class="line">Containers          1                   0                   62.82MB             62.82MB (100%)</span><br><span class="line">Local Volumes       9                   0                   652.2MB             652.2MB (100%)</span><br><span class="line">Build Cache                                                 0B                  0B</span><br></pre></td></tr></table></figure><h3 id="虚悬镜像"><a href="#虚悬镜像" class="headerlink" title="虚悬镜像"></a>虚悬镜像</h3><p>上面的镜像列表中，还可以看到一个特殊的镜像，这个镜像既没有仓库名，也没有标签，均为 <code>&lt;none&gt;</code>。：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;none&gt;               &lt;none&gt;              00285df0df87        5 days ago          342 MB</span><br></pre></td></tr></table></figure><p>这个镜像原本是有镜像名和标签的，原来为 <code>mongo:3.2</code>，随着官方镜像维护，发布了新版本后，重新 <code>docker pull mongo:3.2</code> 时，<code>mongo:3.2</code> 这个镜像名被转移到了新下载的镜像身上，而旧的镜像上的这个名称则被取消，从而成为了 <code>&lt;none&gt;</code>。除了 <code>docker pull</code> 可能导致这种情况，<code>docker build</code> 也同样可以导致这种现象。由于新旧镜像同名，旧镜像名称被取消，从而出现仓库名、标签均为 <code>&lt;none&gt;</code> 的镜像。这类无标签镜像也被称为 <strong>虚悬镜像(dangling image)</strong> ，可以用下面的命令专门显示这类镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">ls</span> -f dangling=<span class="literal">true</span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">&lt;none&gt;              &lt;none&gt;              00285df0df87        5 days ago          342 MB</span><br></pre></td></tr></table></figure><p>一般来说，虚悬镜像已经失去了存在的价值，是可以随意删除的，可以用下面的命令删除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker image prune</span><br></pre></td></tr></table></figure><h3 id="中间层镜像"><a href="#中间层镜像" class="headerlink" title="中间层镜像"></a>中间层镜像</h3><p>为了加速镜像构建、重复利用资源，Docker 会利用 <strong>中间层镜像</strong>。所以在使用一段时间后，可能会看到一些依赖的中间层镜像。默认的 <code>docker image ls</code> 列表中只会显示顶层镜像，如果希望显示包括中间层镜像在内的所有镜像的话，需要加 <code>-a</code> 参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">ls</span> -a</span><br></pre></td></tr></table></figure><p>这样会看到很多无标签的镜像，与之前的虚悬镜像不同，这些无标签的镜像很多都是中间层镜像，是其它镜像所依赖的镜像。这些无标签镜像不应该删除，否则会导致上层镜像因为依赖丢失而出错。实际上，这些镜像也没必要删除，因为之前说过，相同的层只会存一遍，而这些镜像是别的镜像的依赖，因此并不会因为它们被列出来而多存了一份，无论如何你也会需要它们。只要删除那些依赖它们的镜像后，这些依赖的中间层镜像也会被连带删除。</p><h3 id="列出部分镜像"><a href="#列出部分镜像" class="headerlink" title="列出部分镜像"></a>列出部分镜像</h3><p>不加任何参数的情况下，<code>docker image ls</code> 会列出所有顶层镜像，但是有时候我们只希望列出部分镜像。<code>docker image ls</code> 有好几个参数可以帮助做到这个事情。</p><p>根据仓库名列出镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">ls</span> ubuntu</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">ubuntu              18.04               329ed837d508        3 days ago          63.3MB</span><br><span class="line">ubuntu              bionic              329ed837d508        3 days ago          63.3MB</span><br></pre></td></tr></table></figure><p>列出特定的某个镜像，也就是说指定仓库名和标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">ls</span> ubuntu:18.04</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">ubuntu              18.04               329ed837d508        3 days ago          63.3MB</span><br></pre></td></tr></table></figure><p>除此以外，<code>docker image ls</code> 还支持强大的过滤器参数 <code>--filter</code>，或者简写 <code>-f</code>。之前我们已经看到了使用过滤器来列出虚悬镜像的用法，它还有更多的用法。比如，我们希望看到在 <code>mongo:3.2</code> 之后建立的镜像，可以用下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">ls</span> -f since=mongo:3.2</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">redis               latest              5f515359c7f8        5 days ago          183 MB</span><br><span class="line">nginx               latest              05a60462f8ba        5 days ago          181 MB</span><br></pre></td></tr></table></figure><p>想查看某个位置之前的镜像也可以，只需要把 <code>since</code> 换成 <code>before</code> 即可。</p><p>此外，如果镜像构建时，定义了 <code>LABEL</code>，还可以通过 <code>LABEL</code> 来过滤。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">ls</span> -f label=com.example.version=0.1</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="以特定格式显示"><a href="#以特定格式显示" class="headerlink" title="以特定格式显示"></a>以特定格式显示</h3><p>默认情况下，<code>docker image ls</code> 会输出一个完整的表格，但是我们并非所有时候都会需要这些内容。比如，刚才删除虚悬镜像的时候，我们需要利用 <code>docker image ls</code> 把所有的虚悬镜像的 ID 列出来，然后才可以交给 <code>docker image rm</code> 命令作为参数来删除指定的这些镜像，这个时候就用到了 <code>-q</code> 参数。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">ls</span> -q</span><br><span class="line">5f515359c7f8</span><br><span class="line">05a60462f8ba</span><br><span class="line">fe9198c04d62</span><br><span class="line">00285df0df87</span><br><span class="line">329ed837d508</span><br><span class="line">329ed837d508</span><br></pre></td></tr></table></figure><p><code>--filter</code> 配合 <code>-q</code> 产生出指定范围的 ID 列表，然后送给另一个 <code>docker</code> 命令作为参数，从而针对这组实体成批的进行某种操作的做法在 Docker 命令行使用过程中非常常见，不仅仅是镜像，将来我们会在各个命令中看到这类搭配以完成很强大的功能。因此每次在文档看到过滤器后，可以多注意一下它们的用法。</p><p>另外一些时候，我们可能只是对表格的结构不满意，希望自己组织列；或者不希望有标题，这样方便其它程序解析结果等，这就用到了 <a href="https://gohugo.io/templates/introduction/">Go 的模板语法</a>。</p><p>比如，下面的命令会直接列出镜像结果，并且只包含镜像ID和仓库名：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">ls</span> --format <span class="string">&quot;&#123;&#123;.ID&#125;&#125;: &#123;&#123;.Repository&#125;&#125;&quot;</span></span><br><span class="line">5f515359c7f8: redis</span><br><span class="line">05a60462f8ba: nginx</span><br><span class="line">fe9198c04d62: mongo</span><br><span class="line">00285df0df87: &lt;none&gt;</span><br><span class="line">329ed837d508: ubuntu</span><br><span class="line">329ed837d508: ubuntu</span><br></pre></td></tr></table></figure><p>或者打算以表格等距显示，并且有标题行，和默认一样，不过自己定义列：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">ls</span> --format <span class="string">&quot;table &#123;&#123;.ID&#125;&#125;\t&#123;&#123;.Repository&#125;&#125;\t&#123;&#123;.Tag&#125;&#125;&quot;</span></span><br><span class="line">IMAGE ID            REPOSITORY          TAG</span><br><span class="line">5f515359c7f8        redis               latest</span><br><span class="line">05a60462f8ba        nginx               latest</span><br><span class="line">fe9198c04d62        mongo               3.2</span><br><span class="line">00285df0df87        &lt;none&gt;              &lt;none&gt;</span><br><span class="line">329ed837d508        ubuntu              18.04</span><br><span class="line">329ed837d508        ubuntu              bionic</span><br></pre></td></tr></table></figure><h2 id="删除本地镜像"><a href="#删除本地镜像" class="headerlink" title="删除本地镜像"></a>删除本地镜像</h2><p>如果要删除本地的镜像，可以使用 <code>docker image rm</code> 命令，其格式为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">rm</span> [选项] &lt;镜像1&gt; [&lt;镜像2&gt; ...]</span><br></pre></td></tr></table></figure><p>也可<code>docker rmi image_id</code></p><h3 id="用-ID、镜像名、摘要删除镜像"><a href="#用-ID、镜像名、摘要删除镜像" class="headerlink" title="用 ID、镜像名、摘要删除镜像"></a>用 ID、镜像名、摘要删除镜像</h3><p>其中，<code>&lt;镜像&gt;</code> 可以是 <code>镜像短 ID</code>、<code>镜像长 ID</code>、<code>镜像名</code> 或者 <code>镜像摘要</code>。</p><p>比如我们有这么一些镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">ls</span></span><br><span class="line">REPOSITORY                  TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">centos                      latest              0584b3d2cf6d        3 weeks ago         196.5 MB</span><br><span class="line">redis                       alpine              501ad78535f0        3 weeks ago         21.03 MB</span><br><span class="line">docker                      latest              cf693ec9b5c7        3 weeks ago         105.1 MB</span><br><span class="line">nginx                       latest              e43d811ce2f4        5 weeks ago         181.5 MB</span><br></pre></td></tr></table></figure><p>我们可以用镜像的完整 ID，也称为 <code>长 ID</code>，来删除镜像。使用脚本的时候可能会用长 ID，但是人工输入就太累了，所以更多的时候是用 <code>短 ID</code> 来删除镜像。<code>docker image ls</code> 默认列出的就已经是短 ID 了，一般取前3个字符以上，只要足够区分于别的镜像就可以了。</p><p>比如这里，如果我们要删除 <code>redis:alpine</code> 镜像，可以执行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">rm</span> 501</span><br><span class="line">Untagged: redis:alpine</span><br><span class="line">Untagged: redis@sha256:f1ed3708f538b537eb9c2a7dd50dc90a706f7debd7e1196c9264edeea521a86d</span><br><span class="line">Deleted: sha256:501ad78535f015d88872e13fa87a828425117e3d28075d0c117932b05bf189b7</span><br><span class="line">Deleted: sha256:96167737e29ca8e9d74982ef2a0dda76ed7b430da55e321c071f0dbff8c2899b</span><br><span class="line">Deleted: sha256:32770d1dcf835f192cafd6b9263b7b597a1778a403a109e2cc2ee866f74adf23</span><br><span class="line">Deleted: sha256:127227698ad74a5846ff5153475e03439d96d4b1c7f2a449c7a826ef74a2d2fa</span><br><span class="line">Deleted: sha256:1333ecc582459bac54e1437335c0816bc17634e131ea0cc48daa27d32c75eab3</span><br><span class="line">Deleted: sha256:4fc455b921edf9c4aea207c51ab39b10b06540c8b4825ba57b3feed1668fa7c7</span><br></pre></td></tr></table></figure><p>我们也可以用<code>镜像名</code>，也就是 <code>&lt;仓库名&gt;:&lt;标签&gt;</code>，来删除镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">rm</span> centos</span><br><span class="line">Untagged: centos:latest</span><br><span class="line">Untagged: centos@sha256:b2f9d1c0ff5f87a4743104d099a3d561002ac500db1b9bfa02a783a46e0d366c</span><br><span class="line">Deleted: sha256:0584b3d2cf6d235ee310cf14b54667d889887b838d3f3d3033acd70fc3c48b8a</span><br><span class="line">Deleted: sha256:97ca462ad9eeae25941546209454496e1d66749d53dfa2ee32bf1faabd239d38</span><br></pre></td></tr></table></figure><p>当然，更精确的是使用 <code>镜像摘要</code> 删除镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">ls</span> --digests</span><br><span class="line">REPOSITORY                  TAG                 DIGEST                                                                    IMAGE ID            CREATED             SIZE</span><br><span class="line">node                        slim                sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228   6e0c4c8e3913        3 weeks ago         214 MB</span><br><span class="line">$ docker image <span class="built_in">rm</span> node@sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228</span><br><span class="line">Untagged: node@sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228</span><br></pre></td></tr></table></figure><h3 id="Untagged-和-Deleted"><a href="#Untagged-和-Deleted" class="headerlink" title="Untagged 和 Deleted"></a>Untagged 和 Deleted</h3><p>如果观察上面这几个命令的运行输出信息的话，你会注意到删除行为分为两类，一类是 <code>Untagged</code>，另一类是 <code>Deleted</code>。我们之前介绍过，镜像的唯一标识是其 ID 和摘要，而一个镜像可以有多个标签。</p><p>因此当我们使用上面命令删除镜像的时候，实际上是在要求删除某个标签的镜像。所以首先需要做的是将满足我们要求的所有镜像标签都取消，这就是我们看到的 <code>Untagged</code> 的信息。因为一个镜像可以对应多个标签，因此当我们删除了所指定的标签后，可能还有别的标签指向了这个镜像，如果是这种情况，那么 <code>Delete</code> 行为就不会发生。所以并非所有的 <code>docker image rm</code> 都会产生删除镜像的行为，有可能仅仅是取消了某个标签而已。</p><p>当该镜像所有的标签都被取消了，该镜像很可能会失去了存在的意义，因此会触发删除行为。镜像是多层存储结构，因此在删除的时候也是从上层向基础层方向依次进行判断删除。镜像的多层结构让镜像复用变得非常容易，因此很有可能某个其它镜像正依赖于当前镜像的某一层。这种情况，依旧不会触发删除该层的行为。直到没有任何层依赖当前层时，才会真实的删除当前层。这就是为什么，有时候会奇怪，为什么明明没有别的标签指向这个镜像，但是它还是存在的原因，也是为什么有时候会发现所删除的层数和自己 <code>docker pull</code> 看到的层数不一样的原因。</p><p>除了镜像依赖以外，还需要注意的是容器对镜像的依赖。如果有用这个镜像启动的容器存在（即使容器没有运行），那么同样不可以删除这个镜像。之前讲过，容器是以镜像为基础，再加一层容器存储层，组成这样的多层存储结构去运行的。因此该镜像如果被这个容器所依赖的，那么删除必然会导致故障。如果这些容器是不需要的，应该先将它们删除，然后再来删除镜像。</p><h3 id="用-docker-image-ls-命令来配合"><a href="#用-docker-image-ls-命令来配合" class="headerlink" title="用 docker image ls 命令来配合"></a>用 docker image ls 命令来配合</h3><p>像其它可以承接多个实体的命令一样，可以使用 <code>docker image ls -q</code> 来配合使用 <code>docker image rm</code>，这样可以成批的删除希望删除的镜像。我们在“镜像列表”章节介绍过很多过滤镜像列表的方式都可以拿过来使用。</p><p>比如，我们需要删除所有仓库名为 <code>redis</code> 的镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">rm</span> $(docker image <span class="built_in">ls</span> -q redis)</span><br></pre></td></tr></table></figure><p>或者删除所有在 <code>mongo:3.2</code> 之前的镜像：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">rm</span> $(docker image <span class="built_in">ls</span> -q -f before=mongo:3.2)</span><br></pre></td></tr></table></figure><h1 id="容器"><a href="#容器" class="headerlink" title="容器"></a>容器</h1><h2 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h2><p>启动容器有两种方式，一种是基于镜像新建一个容器并启动，另外一个是将在终止状态（<code>exited</code>）的容器重新启动。</p><p>因为 Docker 的容器实在太轻量级了，很多时候用户都是随时删除和新创建容器。</p><h3 id="新建并启动"><a href="#新建并启动" class="headerlink" title="新建并启动"></a>新建并启动</h3><p>所需要的命令主要为 <code>docker run</code>。</p><p>例如，下面的命令输出一个 “Hello World”，之后终止容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker run ubuntu:18.04 /bin/echo <span class="string">&#x27;Hello world&#x27;</span></span><br><span class="line">Hello world</span><br></pre></td></tr></table></figure><p>这跟在本地直接执行 <code>/bin/echo &#39;hello world&#39;</code> 几乎感觉不出任何区别。</p><p>下面的命令则启动一个 bash 终端，允许用户进行交互。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -t -i ubuntu:18.04 /bin/bash</span><br><span class="line">root@af8bae53bdd3:/<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>其中，<code>-t</code> 选项让Docker分配一个伪终端（pseudo-tty）并绑定到容器的标准输入上， <code>-i</code> 则让容器的标准输入保持打开。</p><p>在交互模式下，用户可以通过所创建的终端来输入命令，例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@af8bae53bdd3:/<span class="comment"># pwd</span></span><br><span class="line">/</span><br><span class="line">root@af8bae53bdd3:/<span class="comment"># ls</span></span><br><span class="line">bin boot dev etc home lib lib64 media mnt opt proc root run sbin srv sys tmp usr var</span><br></pre></td></tr></table></figure><p>当利用 <code>docker run</code> 来创建容器时，Docker 在后台运行的标准操作包括：</p><ul><li>检查本地是否存在指定的镜像，不存在就从 <a href="../repository/README.md">registry</a> 下载</li><li>利用镜像创建并启动一个容器</li><li>分配一个文件系统，并在只读的镜像层外面挂载一层可读写层</li><li>从宿主主机配置的网桥接口中桥接一个虚拟接口到容器中去</li><li>从地址池配置一个 ip 地址给容器</li><li>执行用户指定的应用程序</li><li>执行完毕后容器被终止</li></ul><h3 id="启动已终止容器"><a href="#启动已终止容器" class="headerlink" title="启动已终止容器"></a>启动已终止容器</h3><p>可以利用 <code>docker container start</code> 命令，直接将一个已经终止（<code>exited</code>）的容器启动运行。</p><p>容器的核心为所执行的应用程序，所需要的资源都是应用程序运行所必需的。除此之外，并没有其它的资源。可以在伪终端中利用 <code>ps</code> 或 <code>top</code> 来查看进程信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ba267838cc1b:/<span class="comment"># ps</span></span><br><span class="line">  PID TTY          TIME CMD</span><br><span class="line">    1 ?        00:00:00 bash</span><br><span class="line">   11 ?        00:00:00 ps</span><br></pre></td></tr></table></figure><p>可见，容器中仅运行了指定的 bash 应用。这种特点使得 Docker 对资源的利用率极高，是货真价实的轻量级虚拟化。</p><h3 id="重启容器"><a href="#重启容器" class="headerlink" title="重启容器"></a>重启容器</h3><p><code>docker restart 容器ID</code></p><h2 id="后台运行"><a href="#后台运行" class="headerlink" title="后台运行"></a>后台运行</h2><p>更多的时候，需要让 Docker 在后台运行而不是直接把执行命令的结果输出在当前宿主机下。此时，可以通过添加 <code>-d</code> 参数来实现。</p><p>下面举两个例子来说明一下。</p><p>如果不使用 <code>-d</code> 参数运行容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker run ubuntu:18.04 /bin/sh -c <span class="string">&quot;while true; do echo hello world; sleep 1; done&quot;</span></span><br><span class="line">hello world</span><br><span class="line">hello world</span><br><span class="line">hello world</span><br><span class="line">hello world</span><br></pre></td></tr></table></figure><p>容器会把输出的结果 (STDOUT) 打印到宿主机上面</p><p>如果使用了 <code>-d</code> 参数运行容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d ubuntu:18.04 /bin/sh -c <span class="string">&quot;while true; do echo hello world; sleep 1; done&quot;</span></span><br><span class="line">77b2dc01fe0f3f1265df143181e7b9af5e05279a884f4776ee75350ea9d8017a</span><br></pre></td></tr></table></figure><p>此时容器会在后台运行并不会把输出的结果 (STDOUT) 打印到宿主机上面(输出结果可以用 <code>docker logs</code> 查看)。</p><p><strong>注：</strong> 容器是否会长久运行，是和 <code>docker run</code> 指定的命令有关，和 <code>-d</code> 参数无关。</p><p>使用 <code>-d</code> 参数启动后会返回一个唯一的 id，也可以通过 <code>docker container ls</code> 命令来查看容器信息。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker container ls</span><br><span class="line">CONTAINER ID  IMAGE         COMMAND               CREATED        STATUS       PORTS NAMES</span><br><span class="line">77b2dc01fe0f  ubuntu:18.04  /bin/sh -c &#x27;while tr  2 minutes ago  Up 1 minute        agitated_wright</span><br></pre></td></tr></table></figure><p>要获取容器的输出信息，可以通过 <code>docker container logs</code> 命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker container logs [container ID or NAMES]</span><br><span class="line">hello world</span><br><span class="line">hello world</span><br><span class="line">hello world</span><br><span class="line">. . .</span><br></pre></td></tr></table></figure><h2 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h2><p>在使用 <code>-d</code> 参数时，容器启动后会进入后台。</p><p>某些时候需要进入容器进行操作，包括使用 <code>docker attach</code> 命令或 <code>docker exec</code> 命令，推荐大家使用 <code>docker exec</code> 命令，原因会在下面说明。</p><h3 id="attach-命令"><a href="#attach-命令" class="headerlink" title="attach 命令"></a><code>attach</code> 命令</h3><p>下面示例如何使用 <code>docker attach</code> 命令。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -dit ubuntu</span><br><span class="line">243c32535da7d142fb0e6df616a3c3ada0b8ab417937c853a9e1c251f499f550</span><br><span class="line">$ docker container <span class="built_in">ls</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">243c32535da7        ubuntu:latest       <span class="string">&quot;/bin/bash&quot;</span>         18 seconds ago      Up 17 seconds                           nostalgic_hypatia</span><br><span class="line">$ docker attach 243c</span><br><span class="line">root@243c32535da7:/<span class="comment">#</span></span><br></pre></td></tr></table></figure><p><em>注意：</em> 如果从这个 stdin 中 exit，会导致容器的停止。</p><h3 id="exec-命令"><a href="#exec-命令" class="headerlink" title="exec 命令"></a><code>exec</code> 命令</h3><h4 id="i-t-参数"><a href="#i-t-参数" class="headerlink" title="-i -t 参数"></a><code>-i</code> <code>-t</code> 参数</h4><p><code>docker exec</code> 后边可以跟多个参数，这里主要说明 <code>-i</code> <code>-t</code> 参数。</p><p>只用 <code>-i</code> 参数时，由于没有分配伪终端，界面没有我们熟悉的 Linux 命令提示符，但命令执行结果仍然可以返回。</p><p>当 <code>-i</code> <code>-t</code> 参数一起使用时，则可以看到我们熟悉的 Linux 命令提示符。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -dit ubuntu</span><br><span class="line">69d137adef7a8a689cbcb059e94da5489d3cddd240ff675c640c8d96e84fe1f6</span><br><span class="line">$ docker container <span class="built_in">ls</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">69d137adef7a        ubuntu:latest       <span class="string">&quot;/bin/bash&quot;</span>         18 seconds ago      Up 17 seconds                           zealous_swirles</span><br><span class="line">$ docker <span class="built_in">exec</span> -i 69d1 bash</span><br><span class="line"><span class="built_in">ls</span></span><br><span class="line">bin</span><br><span class="line">boot</span><br><span class="line">dev</span><br><span class="line">...</span><br><span class="line">$ docker <span class="built_in">exec</span> -it 69d1 bash</span><br><span class="line">root@69d137adef7a:/<span class="comment">#</span></span><br></pre></td></tr></table></figure><p>如果从这个 stdin 中 exit，不会导致容器的停止。这就是为什么推荐大家使用 <code>docker exec</code> 的原因。</p><p>更多参数说明请使用 <code>docker exec --help</code> 查看。</p><h2 id="终止容器"><a href="#终止容器" class="headerlink" title="终止容器"></a>终止容器</h2><p>可以使用 <code>docker container stop</code> 来终止一个运行中的容器。</p><p>此外，当 Docker 容器中指定的应用终结时，容器也自动终止。</p><p>例如对于上一章节中只启动了一个终端的容器，用户通过 <code>exit</code> 命令或 <code>Ctrl+d</code> 来退出终端时，所创建的容器立刻终止。</p><p>终止状态的容器可以用 <code>docker container ls -a</code> 命令看到。例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker container <span class="built_in">ls</span> -a</span><br><span class="line">CONTAINER ID        IMAGE                    COMMAND                CREATED             STATUS                          PORTS               NAMES</span><br><span class="line">ba267838cc1b        ubuntu:18.04             <span class="string">&quot;/bin/bash&quot;</span>            30 minutes ago      Exited (0) About a minute ago                       trusting_newton</span><br></pre></td></tr></table></figure><p>处于终止状态的容器，可以通过 <code>docker container start</code> 命令来重新启动。</p><p>此外，<code>docker container restart</code> 命令会将一个运行态的容器终止，然后再重新启动它。</p><h2 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h2><p>可以使用 <code>docker container rm</code> 来删除一个处于终止状态的容器。例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker container <span class="built_in">rm</span> trusting_newton</span><br><span class="line">trusting_newton</span><br></pre></td></tr></table></figure><p>也可以<code>docker rm 容器id</code></p><p>如果要删除一个运行中的容器，可以添加 <code>-f</code> 参数。Docker 会发送 <code>SIGKILL</code> 信号给容器。</p><h3 id="清理所有处于终止状态的容器"><a href="#清理所有处于终止状态的容器" class="headerlink" title="清理所有处于终止状态的容器"></a>清理所有处于终止状态的容器</h3><p>用 <code>docker container ls -a</code> 命令可以查看所有已经创建的包括终止状态的容器，如果数量太多要一个个删除可能会很麻烦，用下面的命令可以清理掉所有处于终止状态的容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker container prune</span><br></pre></td></tr></table></figure><h2 id="导出和导入容器"><a href="#导出和导入容器" class="headerlink" title="导出和导入容器"></a>导出和导入容器</h2><h3 id="导出容器"><a href="#导出容器" class="headerlink" title="导出容器"></a>导出容器</h3><p>如果要导出本地某个容器，可以使用 <code>docker export</code> 命令。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker container <span class="built_in">ls</span> -a</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS                    PORTS               NAMES</span><br><span class="line">7691a814370e        ubuntu:18.04        <span class="string">&quot;/bin/bash&quot;</span>         36 hours ago        Exited (0) 21 hours ago                       <span class="built_in">test</span></span><br><span class="line">$ docker <span class="built_in">export</span> 7691a814370e &gt; ubuntu.tar</span><br></pre></td></tr></table></figure></p><p>这样将导出容器快照到本地文件。</p><h3 id="导入容器快照"><a href="#导入容器快照" class="headerlink" title="导入容器快照"></a>导入容器快照</h3><p>可以使用 <code>docker import</code> 从容器快照文件中再导入为镜像，例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> ubuntu.tar | docker import - <span class="built_in">test</span>/ubuntu:v1.0</span><br><span class="line">$ docker image <span class="built_in">ls</span></span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED              VIRTUAL SIZE</span><br><span class="line"><span class="built_in">test</span>/ubuntu         v1.0                9d37a6082e97        About a minute ago   171.3 MB</span><br></pre></td></tr></table></figure><p>此外，也可以通过指定 URL 或者某个目录来导入，例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker import http://example.com/exampleimage.tgz example/imagerepo</span><br></pre></td></tr></table></figure><p><em>注：用户既可以使用 <code>docker load</code> 来导入镜像存储文件到本地镜像库，也可以使用 <code>docker import</code> 来导入一个容器快照到本地镜像库。这两者的区别在于容器快照文件将丢弃所有的历史记录和元数据信息（即仅保存容器当时的快照状态），而镜像存储文件将保存完整记录，体积也要大。此外，从容器快照文件导入时可以重新指定标签等元数据信息。</em></p><h1 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h1><p>仓库（<code>Repository</code>）是集中存放镜像的地方。</p><p>一个容易混淆的概念是注册服务器（<code>Registry</code>）。实际上注册服务器是管理仓库的具体服务器，每个服务器上可以有多个仓库，而每个仓库下面有多个镜像。从这方面来说，仓库可以被认为是一个具体的项目或目录。例如对于仓库地址 <code>docker.io/ubuntu</code> 来说，<code>docker.io</code> 是注册服务器地址，<code>ubuntu</code> 是仓库名。</p><p>大部分时候，并不需要严格区分这两者的概念。</p><h2 id="Docker-Hub"><a href="#Docker-Hub" class="headerlink" title="Docker Hub"></a>Docker Hub</h2><p>目前 Docker 官方维护了一个公共仓库 <a href="https://hub.docker.com/">Docker Hub</a>，其中已经包括了数量超过 <a href="https://hub.docker.com/search/?type=image">2,650,000</a> 的镜像。大部分需求都可以通过在 Docker Hub 中直接下载镜像来实现。</p><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p>你可以在 <a href="https://hub.docker.com">https://hub.docker.com</a> 免费注册一个 Docker 账号。</p><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p>可以通过执行 <code>docker login</code> 命令交互式的输入用户名及密码来完成在命令行界面登录 Docker Hub。</p><p>你可以通过 <code>docker logout</code> 退出登录。</p><h3 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h3><p>你可以通过 <code>docker search</code> 命令来查找官方仓库中的镜像，并利用 <code>docker pull</code> 命令来将它下载到本地。</p><p>例如以 <code>centos</code> 为关键词进行搜索：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ docker search centos</span><br><span class="line">NAME                               DESCRIPTION                                     STARS     OFFICIAL   AUTOMATED</span><br><span class="line">centos                             The official build of CentOS.                   6449      [OK]</span><br><span class="line">ansible/centos7-ansible            Ansible on Centos7                              132                  [OK]</span><br><span class="line">consol/centos-xfce-vnc             Centos container with <span class="string">&quot;headless&quot;</span> VNC session…   126                  [OK]</span><br><span class="line">jdeathe/centos-ssh                 OpenSSH / Supervisor / EPEL/IUS/SCL Repos - …   117                  [OK]</span><br><span class="line">centos/systemd                     systemd enabled base container.                 96                   [OK]</span><br></pre></td></tr></table></figure><p>可以看到返回了很多包含关键字的镜像，其中包括镜像名字、描述、收藏数（表示该镜像的受关注程度）、是否官方创建（<code>OFFICIAL</code>）、是否自动构建 （<code>AUTOMATED</code>）。</p><p>根据是否是官方提供，可将镜像分为两类。</p><p>一种是类似 <code>centos</code> 这样的镜像，被称为基础镜像或根镜像。这些基础镜像由 Docker 公司创建、验证、支持、提供。这样的镜像往往使用单个单词作为名字。</p><p>还有一种类型，比如 <code>ansible/centos7-ansible</code> 镜像，它是由 Docker Hub 的注册用户创建并维护的，往往带有用户名称前缀。可以通过前缀 <code>username/</code> 来指定使用某个用户提供的镜像，比如 ansible 用户。</p><p>另外，在查找的时候通过 <code>--filter=stars=N</code> 参数可以指定仅显示收藏数量为 <code>N</code> 以上的镜像。</p><p>下载官方 <code>centos</code> 镜像到本地。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull centos</span><br><span class="line">Using default tag: latest</span><br><span class="line">latest: Pulling from library/centos</span><br><span class="line">7a0437f04f83: Pull complete</span><br><span class="line">Digest: sha256:5528e8b1b1719d34604c87e11dcd1c0a20bedf46e83b5632cdeac91b8c04efc1</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> centos:latest</span><br><span class="line">docker.io/library/centos:latest</span><br></pre></td></tr></table></figure><h3 id="推送镜像"><a href="#推送镜像" class="headerlink" title="推送镜像"></a>推送镜像</h3><p>用户也可以在登录后通过 <code>docker push</code> 命令来将自己的镜像推送到 Docker Hub。</p><p>以下命令中的 <code>username</code> 请替换为你的 Docker 账号用户名。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ docker tag ubuntu:18.04 username/ubuntu:18.04</span><br><span class="line">$ docker image <span class="built_in">ls</span></span><br><span class="line">REPOSITORY                                               TAG                    IMAGE ID            CREATED             SIZE</span><br><span class="line">ubuntu                                                   18.04                  275d79972a86        6 days ago          94.6MB</span><br><span class="line">username/ubuntu                                          18.04                  275d79972a86        6 days ago          94.6MB</span><br><span class="line">$ docker push username/ubuntu:18.04</span><br><span class="line">$ docker search username</span><br><span class="line">NAME                      DESCRIPTION                                     STARS               OFFICIAL            AUTOMATED</span><br><span class="line">username/ubuntu</span><br></pre></td></tr></table></figure><h3 id="自动构建"><a href="#自动构建" class="headerlink" title="自动构建"></a>自动构建</h3><blockquote><p>2021 年 7 月 26 日之后，该项功能仅限<a href="https://www.docker.com/blog/changes-to-docker-hub-autobuilds/">付费用户</a>使用。</p></blockquote><p>自动构建（<code>Automated Builds</code>）可以自动触发构建镜像，方便升级镜像。</p><p>有时候，用户构建了镜像，安装了某个软件，当软件发布新版本则需要手动更新镜像。</p><p>而自动构建允许用户通过 Docker Hub 指定跟踪一个目标网站（支持 <a href="https://github.com">GitHub</a> 或 <a href="https://bitbucket.org">BitBucket</a>）上的项目，一旦项目发生新的提交 （<code>commit</code>）或者创建了新的标签（<code>tag</code>），Docker Hub 会自动构建镜像并推送到 Docker Hub 中。</p><p>要配置自动构建，包括如下的步骤：</p><ul><li><p>登录 Docker Hub；</p></li><li><p>在 Docker Hub 点击右上角头像，在账号设置（<code>Account Settings</code>）中关联（<code>Linked Accounts</code>）目标网站；</p></li><li><p>在 Docker Hub 中新建或选择已有的仓库，在 <code>Builds</code> 选项卡中选择 <code>Configure Automated Builds</code>；</p></li><li><p>选取一个目标网站中的项目（需要含 <code>Dockerfile</code>）和分支；</p></li><li><p>指定 <code>Dockerfile</code> 的位置，并保存。</p></li></ul><p>之后，可以在 Docker Hub 的仓库页面的 <code>Timeline</code> 选项卡中查看每次构建的状态。</p><h2 id="私有仓库"><a href="#私有仓库" class="headerlink" title="私有仓库"></a>私有仓库</h2><p>有时候使用 Docker Hub 这样的公共仓库可能不方便，用户可以创建一个本地仓库供私人使用。</p><p>本节介绍如何使用本地仓库。</p><p><a href="https://docs.docker.com/registry/"><code>docker-registry</code></a> 是官方提供的工具，可以用于构建私有的镜像仓库。本文内容基于 <a href="https://github.com/docker/distribution"><code>docker-registry</code></a> v2.x 版本。</p><h3 id="安装运行-docker-registry"><a href="#安装运行-docker-registry" class="headerlink" title="安装运行 docker-registry"></a>安装运行 docker-registry</h3><h4 id="容器运行"><a href="#容器运行" class="headerlink" title="容器运行"></a>容器运行</h4><p>你可以使用官方 <code>registry</code> 镜像来运行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d -p 5000:5000 --restart=always --name registry registry</span><br></pre></td></tr></table></figure><p>这将使用官方的 <code>registry</code> 镜像来启动私有仓库。默认情况下，仓库会被创建在容器的 <code>/var/lib/registry</code> 目录下。你可以通过 <code>-v</code> 参数来将镜像文件存放在本地的指定路径。例如下面的例子将上传的镜像放到本地的 <code>/opt/data/registry</code> 目录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d \</span><br><span class="line">    -p 5000:5000 \</span><br><span class="line">    -v /opt/data/registry:/var/lib/registry \</span><br><span class="line">    registry</span><br></pre></td></tr></table></figure><h3 id="在私有仓库上传、搜索、下载镜像"><a href="#在私有仓库上传、搜索、下载镜像" class="headerlink" title="在私有仓库上传、搜索、下载镜像"></a>在私有仓库上传、搜索、下载镜像</h3><p>创建好私有仓库之后，就可以使用 <code>docker tag</code> 来标记一个镜像，然后推送它到仓库。例如私有仓库地址为 <code>127.0.0.1:5000</code>。</p><p>先在本机查看已有的镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">ls</span></span><br><span class="line">REPOSITORY                        TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</span><br><span class="line">ubuntu                            latest              ba5877dc9bec        6 weeks ago         192.7 MB</span><br></pre></td></tr></table></figure><p>使用 <code>docker tag</code> 将 <code>ubuntu:latest</code> 这个镜像标记为 <code>127.0.0.1:5000/ubuntu:latest</code>。</p><p>格式为 <code>docker tag IMAGE[:TAG] [REGISTRY_HOST[:REGISTRY_PORT]/]REPOSITORY[:TAG]</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker tag ubuntu:latest 127.0.0.1:5000/ubuntu:latest</span><br><span class="line">$ docker image <span class="built_in">ls</span></span><br><span class="line">REPOSITORY                        TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</span><br><span class="line">ubuntu                            latest              ba5877dc9bec        6 weeks ago         192.7 MB</span><br><span class="line">127.0.0.1:5000/ubuntu:latest      latest              ba5877dc9bec        6 weeks ago         192.7 MB</span><br></pre></td></tr></table></figure><p>使用 <code>docker push</code> 上传标记的镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ docker push 127.0.0.1:5000/ubuntu:latest</span><br><span class="line">The push refers to repository [127.0.0.1:5000/ubuntu]</span><br><span class="line">373a30c24545: Pushed</span><br><span class="line">a9148f5200b0: Pushed</span><br><span class="line">cdd3de0940ab: Pushed</span><br><span class="line">fc56279bbb33: Pushed</span><br><span class="line">b38367233d37: Pushed</span><br><span class="line">2aebd096e0e2: Pushed</span><br><span class="line">latest: digest: sha256:fe4277621f10b5026266932ddf760f5a756d2facd505a94d2da12f4f52f71f5a size: 1568</span><br></pre></td></tr></table></figure><p>用 <code>curl</code> 查看仓库中的镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ curl 127.0.0.1:5000/v2/_catalog</span><br><span class="line">&#123;<span class="string">&quot;repositories&quot;</span>:[<span class="string">&quot;ubuntu&quot;</span>]&#125;</span><br></pre></td></tr></table></figure><p>这里可以看到 <code>&#123;&quot;repositories&quot;:[&quot;ubuntu&quot;]&#125;</code>，表明镜像已经被成功上传了。</p><p>先删除已有镜像，再尝试从私有仓库中下载这个镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ docker image <span class="built_in">rm</span> 127.0.0.1:5000/ubuntu:latest</span><br><span class="line">$ docker pull 127.0.0.1:5000/ubuntu:latest</span><br><span class="line">Pulling repository 127.0.0.1:5000/ubuntu:latest</span><br><span class="line">ba5877dc9bec: Download complete</span><br><span class="line">511136ea3c5a: Download complete</span><br><span class="line">9bad880da3d2: Download complete</span><br><span class="line">25f11f5fb0cb: Download complete</span><br><span class="line">ebc34468f71d: Download complete</span><br><span class="line">2318d26665ef: Download complete</span><br><span class="line">$ docker image <span class="built_in">ls</span></span><br><span class="line">REPOSITORY                         TAG                 IMAGE ID            CREATED             VIRTUAL SIZE</span><br><span class="line">127.0.0.1:5000/ubuntu:latest       latest              ba5877dc9bec        6 weeks ago         192.7 MB</span><br></pre></td></tr></table></figure><h3 id="配置非-https-仓库地址"><a href="#配置非-https-仓库地址" class="headerlink" title="配置非 https 仓库地址"></a>配置非 https 仓库地址</h3><p>如果你不想使用 <code>127.0.0.1:5000</code> 作为仓库地址，比如想让本网段的其他主机也能把镜像推送到私有仓库。你就得把例如 <code>192.168.199.100:5000</code> 这样的内网地址作为私有仓库地址，这时你会发现无法成功推送镜像。</p><p>这是因为 Docker 默认不允许非 <code>HTTPS</code> 方式推送镜像。我们可以通过 Docker 的配置选项来取消这个限制，或者查看下一节配置能够通过 <code>HTTPS</code> 访问的私有仓库。</p><h4 id="Ubuntu-16-04-Debian-8-centos-7"><a href="#Ubuntu-16-04-Debian-8-centos-7" class="headerlink" title="Ubuntu 16.04+, Debian 8+, centos 7"></a>Ubuntu 16.04+, Debian 8+, centos 7</h4><p>对于使用 <code>systemd</code> 的系统，请在 <code>/etc/docker/daemon.json</code> 中写入如下内容（如果文件不存在请新建该文件）</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;insecure-registries&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;192.168.199.100:5000&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：该文件必须符合 <code>json</code> 规范，否则 Docker 将不能启动。</p></blockquote><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><p>对于 Docker Desktop for Windows 、 Docker Desktop for Mac 在设置中的 <code>Docker Engine</code> 中进行编辑 ，增加和上边一样的字符串即可。</p><h1 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h1><p>Docker 允许通过外部访问容器或容器互联的方式来提供网络服务。</p><h2 id="外部访问容器"><a href="#外部访问容器" class="headerlink" title="外部访问容器"></a>外部访问容器</h2><p>容器中可以运行一些网络应用，要让外部也可以访问这些应用，可以通过 <code>-P</code> 或 <code>-p</code> 参数来指定端口映射。</p><p>当使用 <code>-P</code> 标记时，Docker 会随机映射一个端口到内部容器开放的网络端口。</p><p>使用 <code>docker container ls</code> 可以看到，本地主机的 32768 被映射到了容器的 80 端口。此时访问本机的 32768 端口即可访问容器内 NGINX 默认页面。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d -P nginx:alpine</span><br><span class="line">$ docker container <span class="built_in">ls</span> -l</span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                   NAMES</span><br><span class="line">fae320d08268        nginx:alpine        <span class="string">&quot;/docker-entrypoint.…&quot;</span>   24 seconds ago      Up 20 seconds       0.0.0.0:32768-&gt;80/tcp   bold_mcnulty</span><br></pre></td></tr></table></figure><p>同样的，可以通过 <code>docker logs</code> 命令来查看访问记录。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker logs fa</span><br><span class="line">172.17.0.1 - - [25/Aug/2020:08:34:04 +0000] <span class="string">&quot;GET / HTTP/1.1&quot;</span> 200 612 <span class="string">&quot;-&quot;</span> <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:80.0) Gecko/20100101 Firefox/80.0&quot;</span> <span class="string">&quot;-&quot;</span></span><br></pre></td></tr></table></figure><p><code>-p</code> 则可以指定要映射的端口，并且，在一个指定端口上只可以绑定一个容器。支持的格式有 <code>ip:hostPort:containerPort | ip::containerPort | hostPort:containerPort</code>。</p><h3 id="映射所有接口地址"><a href="#映射所有接口地址" class="headerlink" title="映射所有接口地址"></a>映射所有接口地址</h3><p>使用 <code>hostPort:containerPort</code> 格式本地的 80 端口映射到容器的 80 端口，可以执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d -p 80:80 nginx:alpine</span><br></pre></td></tr></table></figure><p>此时默认会绑定本地所有接口上的所有地址。</p><h3 id="映射到指定地址的指定端口"><a href="#映射到指定地址的指定端口" class="headerlink" title="映射到指定地址的指定端口"></a>映射到指定地址的指定端口</h3><p>可以使用 <code>ip:hostPort:containerPort</code> 格式指定映射使用一个特定地址，比如 localhost 地址 127.0.0.1</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d -p 127.0.0.1:80:80 nginx:alpine</span><br></pre></td></tr></table></figure><h3 id="映射到指定地址的任意端口"><a href="#映射到指定地址的任意端口" class="headerlink" title="映射到指定地址的任意端口"></a>映射到指定地址的任意端口</h3><p>使用 <code>ip::containerPort</code> 绑定 localhost 的任意端口到容器的 80 端口，本地主机会自动分配一个端口。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d -p 127.0.0.1::80 nginx:alpine</span><br></pre></td></tr></table></figure><p>还可以使用 <code>udp</code> 标记来指定 <code>udp</code> 端口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d -p 127.0.0.1:80:80/udp nginx:alpine</span><br></pre></td></tr></table></figure><h3 id="查看映射端口配置"><a href="#查看映射端口配置" class="headerlink" title="查看映射端口配置"></a>查看映射端口配置</h3><p>使用 <code>docker port</code> 来查看当前映射的端口配置，也可以查看到绑定的地址</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker port fa 80</span><br><span class="line">0.0.0.0:32768</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li><p>容器有自己的内部网络和 ip 地址（使用 <code>docker inspect</code> 查看，Docker 还可以有一个可变的网络配置。）</p></li><li><p><code>-p</code> 标记可以多次使用来绑定多个端口</p></li></ul><p>例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d \</span><br><span class="line">    -p 80:80 \</span><br><span class="line">    -p 443:443 \</span><br><span class="line">    nginx:alpine</span><br></pre></td></tr></table></figure><h2 id="容器互联"><a href="#容器互联" class="headerlink" title="容器互联"></a>容器互联</h2><p>如果你之前有 <code>Docker</code> 使用经验，你可能已经习惯了使用 <code>--link</code> 参数来使容器互联。</p><p>随着 Docker 网络的完善，强烈建议大家将容器加入自定义的 Docker 网络来连接多个容器，而不是使用 <code>--link</code> 参数。</p><h3 id="新建网络"><a href="#新建网络" class="headerlink" title="新建网络"></a>新建网络</h3><p>下面先创建一个新的 Docker 网络。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker network create -d bridge my-net</span><br></pre></td></tr></table></figure><p><code>-d</code> 参数指定 Docker 网络类型，有 <code>bridge</code> <code>overlay</code>。其中 <code>overlay</code> 网络类型用于 <a href="../swarm_mode/">Swarm mode</a>，在本小节中你可以忽略它。</p><h3 id="连接容器"><a href="#连接容器" class="headerlink" title="连接容器"></a>连接容器</h3><p>运行一个容器并连接到新建的 <code>my-net</code> 网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -it --<span class="built_in">rm</span> --name busybox1 --network my-net busybox sh</span><br></pre></td></tr></table></figure><p>打开新的终端，再运行一个容器并加入到 <code>my-net</code> 网络</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -it --<span class="built_in">rm</span> --name busybox2 --network my-net busybox sh</span><br></pre></td></tr></table></figure><p>再打开一个新的终端查看容器信息</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker container <span class="built_in">ls</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">b47060aca56b        busybox             <span class="string">&quot;sh&quot;</span>                11 minutes ago      Up 11 minutes                           busybox2</span><br><span class="line">8720575823ec        busybox             <span class="string">&quot;sh&quot;</span>                16 minutes ago      Up 16 minutes                           busybox1</span><br></pre></td></tr></table></figure><p>下面通过 <code>ping</code> 来证明 <code>busybox1</code> 容器和 <code>busybox2</code> 容器建立了互联关系。</p><p>在 <code>busybox1</code> 容器输入以下命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/ <span class="comment"># ping busybox2</span></span><br><span class="line">PING busybox2 (172.19.0.3): 56 data bytes</span><br><span class="line">64 bytes from 172.19.0.3: <span class="built_in">seq</span>=0 ttl=64 time=0.072 ms</span><br><span class="line">64 bytes from 172.19.0.3: <span class="built_in">seq</span>=1 ttl=64 time=0.118 ms</span><br></pre></td></tr></table></figure><p>用 ping 来测试连接 <code>busybox2</code> 容器，它会解析成 <code>172.19.0.3</code>。</p><p>同理在 <code>busybox2</code> 容器执行 <code>ping busybox1</code>，也会成功连接到。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/ <span class="comment"># ping busybox1</span></span><br><span class="line">PING busybox1 (172.19.0.2): 56 data bytes</span><br><span class="line">64 bytes from 172.19.0.2: <span class="built_in">seq</span>=0 ttl=64 time=0.064 ms</span><br><span class="line">64 bytes from 172.19.0.2: <span class="built_in">seq</span>=1 ttl=64 time=0.143 ms</span><br></pre></td></tr></table></figure><p>这样，<code>busybox1</code> 容器和 <code>busybox2</code> 容器建立了互联关系。</p><h3 id="Docker-Compose"><a href="#Docker-Compose" class="headerlink" title="Docker Compose"></a>Docker Compose</h3><p>如果你有多个容器之间需要互相连接，推荐使用 <a href="../compose">Docker Compose</a>。</p><h1 id="热门镜像介绍"><a href="#热门镜像介绍" class="headerlink" title="热门镜像介绍"></a>热门镜像介绍</h1><p>介绍一些热门镜像的功能，使用方法等。包括Ubuntu、CentOS、MySQL、Nginx、Wordpress、Node.js等。</p><h2 id="Ubuntu"><a href="#Ubuntu" class="headerlink" title="Ubuntu"></a><a href="https://hub.docker.com/_/ubuntu/">Ubuntu</a></h2><h3 id="基本信息"><a href="#基本信息" class="headerlink" title="基本信息"></a>基本信息</h3><p><strong>Ubuntu</strong> 是流行的 Linux 发行版，其自带软件版本往往较新一些。</p><p>该仓库位于 <code>https://hub.docker.com/_/ubuntu/</code> ，提供了 Ubuntu 从 12.04 ~ 20.04 各个版本的镜像。</p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>默认会启动一个最小化的 Ubuntu 环境。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name some-ubuntu -it ubuntu:20.04</span><br><span class="line">root@523c70904d54:/<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>请到 <a href="https://github.com/docker-library/docs/tree/master/ubuntu"> https://github.com/docker-library/docs/tree/master/ubuntu</a>查看</p><h2 id="CentOS"><a href="#CentOS" class="headerlink" title="CentOS"></a>CentOS</h2><h3 id="基本信息-1"><a href="#基本信息-1" class="headerlink" title="基本信息"></a>基本信息</h3><p><strong>CentOS</strong> 是流行的 Linux 发行版，其软件包大多跟 RedHat 系列保持一致。</p><p>该仓库位于 <a href="https://hub.docker.com/_/centos">https://hub.docker.com/_/centos</a> ，提供了 CentOS 从 5 ~ 8 各个版本的镜像。</p><h3 id="使用方法-1"><a href="#使用方法-1" class="headerlink" title="使用方法"></a>使用方法</h3><p>默认会启动一个最小化的 CentOS 环境。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name centos -it centos bash</span><br><span class="line">bash-4.2<span class="comment">#</span></span><br></pre></td></tr></table></figure><h3 id="Dockerfile-1"><a href="#Dockerfile-1" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>请到 <a href="https://github.com/docker-library/docs/tree/master/centos">https://github.com/docker-library/docs/tree/master/centos</a> 查看。</p><h2 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h2><h3 id="基本信息-2"><a href="#基本信息-2" class="headerlink" title="基本信息"></a>基本信息</h3><p><strong>Nginx</strong>是开源的高效的 Web 服务器实现，支持 HTTP、HTTPS、SMTP、POP3、IMAP 等协议。</p><p>该仓库位于 <a href="https://hub.docker.com/_/nginx/">https://hub.docker.com/_/nginx/</a> ，提供了 Nginx 1.0 ~ 1.19.x 各个版本的镜像。</p><h3 id="使用方法-2"><a href="#使用方法-2" class="headerlink" title="使用方法"></a>使用方法</h3><p>下面的命令将作为一个静态页面服务器启动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name some-nginx -v /some/content:/usr/share/nginx/html:ro -d nginx</span><br></pre></td></tr></table></figure><p>用户也可以不使用这种映射方式，通过利用 Dockerfile 来直接将静态页面内容放到镜像中，内容为</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> nginx</span><br><span class="line"><span class="keyword">COPY</span><span class="language-bash"> static-html-directory /usr/share/nginx/html</span></span><br></pre></td></tr></table></figure><p>之后生成新的镜像，并启动一个容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker build -t some-content-nginx .</span><br><span class="line">$ docker run --name some-nginx -d some-content-nginx</span><br></pre></td></tr></table></figure><p>开放端口，并映射到本地的 <code>8080</code> 端口。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name some-nginx -d -p 8080:80 some-content-nginx</span><br></pre></td></tr></table></figure><p>Nginx的默认配置文件路径为 <code>/etc/nginx/nginx.conf</code>，可以通过映射它来使用本地的配置文件，例如</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -d \</span><br><span class="line">    --name some-nginx \</span><br><span class="line">    -p 8080:80 \</span><br><span class="line">    -v /path/nginx.conf:/etc/nginx/nginx.conf:ro \</span><br><span class="line">    nginx</span><br></pre></td></tr></table></figure><h3 id="Dockerfile-2"><a href="#Dockerfile-2" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>请到 <a href="https://github.com/docker-library/docs/tree/master/nginx">https://github.com/docker-library/docs/tree/master/nginx</a> 查看。</p><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><h3 id="基本信息-3"><a href="#基本信息-3" class="headerlink" title="基本信息"></a>基本信息</h3><p><strong>PHP</strong>（Hypertext Preprocessor 超文本预处理器的字母缩写）是一种被广泛应用的开放源代码的多用途脚本语言，它可嵌入到 HTML 中，尤其适合 web 开发。</p><p>该仓库位于 <a href="https://hub.docker.com/_/php/">https://hub.docker.com/_/php/</a>，提供了 PHP 5.x ~ 8.x 各个版本的镜像。</p><h3 id="使用方法-3"><a href="#使用方法-3" class="headerlink" title="使用方法"></a>使用方法</h3><p>下面的命令将运行一个已有的 PHP 脚本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -it --<span class="built_in">rm</span> -v <span class="string">&quot;<span class="variable">$PWD</span>&quot;</span>:/app -w /app php:alpine php your-script.php</span><br></pre></td></tr></table></figure><h3 id="Dockerfile-3"><a href="#Dockerfile-3" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>请到 <a href="https://github.com/docker-library/docs/tree/master/php">https://github.com/docker-library/docs/tree/master/php</a> 查看。</p><h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><h3 id="基本信息-4"><a href="#基本信息-4" class="headerlink" title="基本信息"></a>基本信息</h3><p><strong>Node.js</strong> 是基于 JavaScript 的可扩展服务端和网络软件开发平台。</p><p>该仓库位于 <a href="https://hub.docker.com/_/node/">https://hub.docker.com/_/node/</a>，提供了 Node.js 0.10 ~ 14.x 各个版本的镜像。</p><h3 id="使用方法-4"><a href="#使用方法-4" class="headerlink" title="使用方法"></a>使用方法</h3><p>在项目中创建一个 Dockerfile。</p><figure class="highlight docker"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">FROM</span> node:<span class="number">12</span></span><br><span class="line"><span class="comment"># replace this with your application&#x27;s default port</span></span><br><span class="line"><span class="keyword">EXPOSE</span> <span class="number">8888</span></span><br></pre></td></tr></table></figure><p>然后创建镜像，并启动容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ docker build -t my-nodejs-app</span><br><span class="line">$ docker run -it --<span class="built_in">rm</span> --name my-running-app my-nodejs-app</span><br></pre></td></tr></table></figure><p>也可以直接运行一个简单容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -it --<span class="built_in">rm</span> \</span><br><span class="line">    --name my-running-script \</span><br><span class="line">    <span class="comment"># -v &quot;$(pwd)&quot;:/usr/src/myapp \</span></span><br><span class="line">    --mount <span class="built_in">type</span>=<span class="built_in">bind</span>,src=`$(<span class="built_in">pwd</span>)`,target=/usr/src/myapp \</span><br><span class="line">    -w /usr/src/myapp \</span><br><span class="line">    node:12-alpine \</span><br><span class="line">    node your-daemon-or-script.js</span><br></pre></td></tr></table></figure><h3 id="Dockerfile-4"><a href="#Dockerfile-4" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>请到 <a href="https://github.com/docker-library/docs/tree/master/node">https://github.com/docker-library/docs/tree/master/node</a> 查看。</p><h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><h3 id="基本信息-5"><a href="#基本信息-5" class="headerlink" title="基本信息"></a>基本信息</h3><p><strong>MySQL</strong> 是开源的关系数据库实现。</p><p>该仓库位于 <a href="https://hub.docker.com/_/mysql/">https://hub.docker.com/_/mysql/</a> ，提供了 MySQL 5.5 ~ 8.x 各个版本的镜像。</p><h3 id="使用方法-5"><a href="#使用方法-5" class="headerlink" title="使用方法"></a>使用方法</h3><p>默认会在 <code>3306</code> 端口启动数据库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name some-mysql -e MYSQL_ROOT_PASSWORD=mysecretpassword -d mysql</span><br></pre></td></tr></table></figure><p>之后就可以使用其它应用来连接到该容器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name some-app --<span class="built_in">link</span> some-mysql:mysql -d application-that-uses-mysql</span><br></pre></td></tr></table></figure><p>或者通过 <code>mysql</code> 命令行连接。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ docker run -it --<span class="built_in">rm</span> \</span><br><span class="line">    --<span class="built_in">link</span> some-mysql:mysql \</span><br><span class="line">    mysql \</span><br><span class="line">    sh -c <span class="string">&#x27;exec mysql -h&quot;$MYSQL_PORT_3306_TCP_ADDR&quot; -P&quot;$MYSQL_PORT_3306_TCP_PORT&quot; -uroot -p&quot;$MYSQL_ENV_MYSQL_ROOT_PASSWORD&quot;&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="Dockerfile-5"><a href="#Dockerfile-5" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>请到 <a href="https://github.com/docker-library/docs/tree/master/mysql">https://github.com/docker-library/docs/tree/master/mysql</a> 查看</p><h2 id="WordPress"><a href="#WordPress" class="headerlink" title="WordPress"></a>WordPress</h2><h3 id="基本信息-6"><a href="#基本信息-6" class="headerlink" title="基本信息"></a>基本信息</h3><p><strong>WordPress</strong> 是开源的 Blog 和内容管理系统框架，它基于 PHP 和 MySQL。</p><p>该仓库位于 <a href="https://hub.docker.com/_/wordpress/">https://hub.docker.com/_/wordpress/</a> ，提供了 WordPress 4.x ~ 5.x 版本的镜像。</p><h3 id="使用方法-6"><a href="#使用方法-6" class="headerlink" title="使用方法"></a>使用方法</h3><p>启动容器需要 MySQL 的支持，默认端口为 <code>80</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker run --name some-wordpress --<span class="built_in">link</span> some-mysql:mysql -d wordpress</span><br></pre></td></tr></table></figure><p>启动 WordPress 容器时可以指定的一些环境变量包括：</p><ul><li><code>WORDPRESS_DB_USER</code> 缺省为 <code>root</code></li><li><code>WORDPRESS_DB_PASSWORD</code> 缺省为连接 mysql 容器的环境变量 <code>MYSQL_ROOT_PASSWORD</code> 的值</li><li><code>WORDPRESS_DB_NAME</code> 缺省为 <code>wordpress</code></li></ul><h3 id="Dockerfile-6"><a href="#Dockerfile-6" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>请到 <a href="https://github.com/docker-library/docs/tree/master/wordpress">https://github.com/docker-library/docs/tree/master/wordpress</a> 查看。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker安装</title>
      <link href="/posts/2a40ac23.html"/>
      <url>/posts/2a40ac23.html</url>
      
        <content type="html"><![CDATA[<h1 id="Ubuntu-安装-Docker"><a href="#Ubuntu-安装-Docker" class="headerlink" title="Ubuntu 安装 Docker"></a>Ubuntu 安装 Docker</h1><div class="note danger flat"><p>警告：切勿在没有配置 Docker APT 源的情况下直接使用 apt 命令安装 Docker</p></div><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="系统要求"><a href="#系统要求" class="headerlink" title="系统要求"></a>系统要求</h3><p>Docker 支持以下版本的 <a href="https://ubuntu.com/server">Ubuntu</a>操作系统：</p><ul><li>Ubuntu Hirsute 21.04</li><li>Ubuntu Groovy 20.10</li><li>Ubuntu Focal 20.04 (LTS)</li><li>Ubuntu Bionic 18.04 (LTS)</li></ul><p>Docker 可以安装在 64 位的 x86 平台或 ARM 平台上。Ubuntu 发行版中，LTS（Long-Term-Support）长期支持版本，会获得 5 年的升级维护支持，这样的版本会更稳定，因此在生产环境中推荐使用 LTS 版本。</p><h3 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h3><p>旧版本的 Docker 称为 <code>docker</code> 或者 <code>docker-engine</code>，使用以下命令卸载旧版本：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get remove docker \</span><br><span class="line">              docker-engine \</span><br><span class="line">              docker.io</span><br></pre></td></tr></table></figure><h2 id="使用-APT-安装"><a href="#使用-APT-安装" class="headerlink" title="使用 APT 安装"></a>使用 APT 安装</h2><p>由于 <code>apt</code> 源使用 HTTPS 以确保软件下载过程中不被篡改。因此，我们首先需要添加使用 HTTPS 传输的软件包以及 CA 证书。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install \</span><br><span class="line">   apt-transport-https \</span><br><span class="line">   ca-certificates \</span><br><span class="line">   curl \</span><br><span class="line">   gnupg \</span><br><span class="line">   lsb-release</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。</p><p>为了确认所下载软件包的合法性，需要添加软件源的 <code>GPG</code> 密钥。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"> curl -fsSL https://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 官方源</span><br><span class="line">#  curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>然后，我们需要向 <code>sources.list</code> 中添加 Docker 软件源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> echo \</span><br><span class="line">  &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://mirrors.aliyun.com/docker-ce/linux/ubuntu \</span><br><span class="line">  $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># 官方源</span><br><span class="line">#  echo \</span><br><span class="line">#   &quot;deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \</span><br><span class="line">#   $(lsb_release -cs) stable&quot; | sudo tee /etc/apt/sources.list.d/docker.list &gt; /dev/null</span><br><span class="line"></span><br></pre></td></tr></table></figure><div class="note info modern"><p>以上命令会添加稳定版本的 Docker APT 镜像源，如果需要测试版本的 Docker 请将 stable 改为 test。</p></div><h3 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h3><p>更新 apt 软件包缓存，并安装 <code>docker-ce</code>：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line"></span><br><span class="line">sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="使用脚本自动安装"><a href="#使用脚本自动安装" class="headerlink" title="使用脚本自动安装"></a>使用脚本自动安装</h2><p>在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，Ubuntu 系统上可以使用这套脚本安装，另外可以通过 <code>--mirror</code> 选项使用国内源进行安装</p><div class="note info modern"><p>若你想安装测试版的 Docker, 请从 test.docker.com 获取脚本</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#  curl -fsSL test.docker.com -o get-docker.sh</span><br><span class="line"> curl -fsSL get.docker.com -o get-docker.sh</span><br><span class="line"> sudo sh get-docker.sh --mirror Aliyun</span><br><span class="line">#  sudo sh get-docker.sh --mirror AzureChinaCloud</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker 的稳定(stable)版本安装在系统中。</p><h2 id="启动-Docker"><a href="#启动-Docker" class="headerlink" title="启动 Docker"></a>启动 Docker</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl enable docker</span><br><span class="line">sudo systemctl start docker</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="建立-docker-用户组"><a href="#建立-docker-用户组" class="headerlink" title="建立 docker 用户组"></a>建立 docker 用户组</h2><p>默认情况下，<code>docker</code> 命令会使用 <a href="https://en.wikipedia.org/wiki/Unix_domain_socket">Unix socket </a>与 Docker 引擎通讯。而只有 <code>root</code> 用户和 <code>docker</code> 组的用户才可以访问 Docker 引擎的 Unix socket。出于安全考虑，一般 Linux 系统上不会直接使用 <code>root</code> 用户。因此，更好地做法是将需要使用 <code>docker</code> 的用户加入 <code>docker</code> 用户组。</p><p>建立 <code>docker</code> 组：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker</span><br></pre></td></tr></table></figure><p>将当前用户加入 <code>docker</code> 组：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker $USER</span><br></pre></td></tr></table></figure><p>退出当前终端并重新登录，进行如下测试。</p><h2 id="测试-Docker-是否安装正确"><a href="#测试-Docker-是否安装正确" class="headerlink" title="测试 Docker 是否安装正确"></a>测试 Docker 是否安装正确</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"> docker run --rm hello-world</span><br><span class="line"></span><br><span class="line">Unable to find image &#x27;hello-world:latest&#x27; locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">b8dfde127a29: Pull complete</span><br><span class="line">Digest: sha256:308866a43596e83578c7dfa15e27a73011bdd402185a84c5cd7f32a88b501a24</span><br><span class="line">Status: Downloaded newer image for hello-world:latest</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the &quot;hello-world&quot; image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image which runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, which sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>若能正常输出以上信息，则说明安装成功。</p><h1 id="CentOS-安装-Docker"><a href="#CentOS-安装-Docker" class="headerlink" title="CentOS 安装 Docker"></a>CentOS 安装 Docker</h1><h2 id="准备工作-1"><a href="#准备工作-1" class="headerlink" title="准备工作"></a>准备工作</h2><h3 id="系统要求-1"><a href="#系统要求-1" class="headerlink" title="系统要求"></a>系统要求</h3><p>Docker 支持 64 位版本 CentOS 7/8，并且要求内核版本不低于 3.10。 CentOS 7 满足最低内核的要求，但由于内核版本比较低，部分功能（如 <code>overlay2</code> 存储层驱动）无法使用，并且部分功能可能不太稳定。</p><h3 id="卸载旧版本-1"><a href="#卸载旧版本-1" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h3><p>旧版本的 Docker 称为 <code>docker</code> 或者 <code>docker-engine</code>，使用以下命令卸载旧版本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">sudo yum remove docker \</span><br><span class="line">                 docker-client \</span><br><span class="line">                 docker-client-latest \</span><br><span class="line">                 docker-common \</span><br><span class="line">                 docker-latest \</span><br><span class="line">                 docker-latest-logrotate \</span><br><span class="line">                 docker-logrotate \</span><br><span class="line">                 docker-selinux \</span><br><span class="line">                 docker-engine-selinux \</span><br><span class="line">                 docker-engine</span><br></pre></td></tr></table></figure><h2 id="使用-yum-安装"><a href="#使用-yum-安装" class="headerlink" title="使用 yum 安装"></a>使用 yum 安装</h2><p>执行以下命令安装依赖包：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y yum-utils</span><br></pre></td></tr></table></figure><p>鉴于国内网络问题，强烈建议使用国内源，官方源请在注释中查看。</p><p>执行下面的命令添加 <code>yum</code> 软件源：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"> sudo yum-config-manager \</span><br><span class="line">    --add-repo \</span><br><span class="line">    https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span><br><span class="line"></span><br><span class="line"> sudo sed -i <span class="string">&#x27;s/download.docker.com/mirrors.aliyun.com\/docker-ce/g&#x27;</span> /etc/yum.repos.d/docker-ce.repo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 官方源</span></span><br><span class="line"><span class="comment">#  sudo yum-config-manager \</span></span><br><span class="line"><span class="comment">#     --add-repo \</span></span><br><span class="line"><span class="comment">#  https://download.docker.com/linux/centos/docker-ce.repo</span></span><br></pre></td></tr></table></figure><p>如果需要测试版本的 Docker 请执行以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum-config-manager --<span class="built_in">enable</span> docker-ce-test</span><br></pre></td></tr></table></figure><h3 id="安装-Docker-1"><a href="#安装-Docker-1" class="headerlink" title="安装 Docker"></a>安装 Docker</h3><p>更新 <code>yum</code> 软件源缓存，并安装 <code>docker-ce</code>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install docker-ce docker-ce-cli containerd.io docker-compose-plugin</span><br></pre></td></tr></table></figure><h2 id="CentOS8-额外设置"><a href="#CentOS8-额外设置" class="headerlink" title="CentOS8 额外设置"></a>CentOS8 额外设置</h2><p>由于 CentOS8 防火墙使用了 <code>nftables</code>，但 Docker 尚未支持 <code>nftables</code>， 我们可以使用如下设置使用 <code>iptables</code>：</p><p>更改 <code>/etc/firewalld/firewalld.conf</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># FirewallBackend=nftables</span></span><br><span class="line">FirewallBackend=iptables</span><br></pre></td></tr></table></figure><p>或者执行如下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=trusted --add-interface=docker0</span><br><span class="line"></span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure><h2 id="使用脚本自动安装-1"><a href="#使用脚本自动安装-1" class="headerlink" title="使用脚本自动安装"></a>使用脚本自动安装</h2><p>在测试或开发环境中 Docker 官方为了简化安装流程，提供了一套便捷的安装脚本，CentOS 系统上可以使用这套脚本安装，另外可以通过 <code>--mirror</code> 选项使用国内源进行安装：</p><blockquote><p>若你想安装测试版的 Docker, 请从 test.docker.com 获取脚本</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  curl -fsSL test.docker.com -o get-docker.sh</span></span><br><span class="line"> curl -fsSL get.docker.com -o get-docker.sh</span><br><span class="line"> sudo sh get-docker.sh --mirror Aliyun</span><br><span class="line"><span class="comment">#  sudo sh get-docker.sh --mirror AzureChinaCloud</span></span><br></pre></td></tr></table></figure><p>执行这个命令后，脚本就会自动的将一切准备工作做好，并且把 Docker 的稳定(stable)版本安装在系统中。</p><h2 id="启动-Docker-1"><a href="#启动-Docker-1" class="headerlink" title="启动 Docker"></a>启动 Docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl <span class="built_in">enable</span> docker</span><br><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><h2 id="建立-docker-用户组-1"><a href="#建立-docker-用户组-1" class="headerlink" title="建立 docker 用户组"></a>建立 docker 用户组</h2><p>默认情况下，<code>docker</code> 命令会使用 <a href="https://en.wikipedia.org/wiki/Unix_domain_socket">Unix socket </a>与 Docker 引擎通讯。而只有 <code>root</code> 用户和 <code>docker</code> 组的用户才可以访问 Docker 引擎的 Unix socket。出于安全考虑，一般 Linux 系统上不会直接使用 <code>root</code> 用户。因此，更好地做法是将需要使用 <code>docker</code> 的用户加入 <code>docker</code> 用户组。</p><p>建立 <code>docker</code> 组：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker</span><br></pre></td></tr></table></figure><p>将当前用户加入 <code>docker</code> 组：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure><p>退出当前终端并重新登录，进行如下测试。</p><h2 id="测试-Docker-是否安装正确-1"><a href="#测试-Docker-是否安装正确-1" class="headerlink" title="测试 Docker 是否安装正确"></a>测试 Docker 是否安装正确</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"> docker run --<span class="built_in">rm</span> hello-world</span><br><span class="line"></span><br><span class="line">Unable to find image <span class="string">&#x27;hello-world:latest&#x27;</span> locally</span><br><span class="line">latest: Pulling from library/hello-world</span><br><span class="line">b8dfde127a29: Pull complete</span><br><span class="line">Digest: sha256:308866a43596e83578c7dfa15e27a73011bdd402185a84c5cd7f32a88b501a24</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> hello-world:latest</span><br><span class="line"></span><br><span class="line">Hello from Docker!</span><br><span class="line">This message shows that your installation appears to be working correctly.</span><br><span class="line"></span><br><span class="line">To generate this message, Docker took the following steps:</span><br><span class="line"> 1. The Docker client contacted the Docker daemon.</span><br><span class="line"> 2. The Docker daemon pulled the <span class="string">&quot;hello-world&quot;</span> image from the Docker Hub.</span><br><span class="line">    (amd64)</span><br><span class="line"> 3. The Docker daemon created a new container from that image <span class="built_in">which</span> runs the</span><br><span class="line">    executable that produces the output you are currently reading.</span><br><span class="line"> 4. The Docker daemon streamed that output to the Docker client, <span class="built_in">which</span> sent it</span><br><span class="line">    to your terminal.</span><br><span class="line"></span><br><span class="line">To try something more ambitious, you can run an Ubuntu container with:</span><br><span class="line"> $ docker run -it ubuntu bash</span><br><span class="line"></span><br><span class="line">Share images, automate workflows, and more with a free Docker ID:</span><br><span class="line"> https://hub.docker.com/</span><br><span class="line"></span><br><span class="line">For more examples and ideas, visit:</span><br><span class="line"> https://docs.docker.com/get-started/</span><br></pre></td></tr></table></figure><p>若能正常输出以上信息，则说明安装成功。</p><h2 id="添加内核参数"><a href="#添加内核参数" class="headerlink" title="添加内核参数"></a>添加内核参数</h2><p>如果在 CentOS 使用 Docker 看到下面的这些警告信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WARNING: bridge-nf-call-iptables is disabled</span><br><span class="line">WARNING: bridge-nf-call-ip6tables is disabled</span><br></pre></td></tr></table></figure><p>请添加内核配置参数以启用这些功能。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"> sudo <span class="built_in">tee</span> -a /etc/sysctl.conf &lt;&lt;-<span class="string">EOF</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-ip6tables = 1</span></span><br><span class="line"><span class="string">net.bridge.bridge-nf-call-iptables = 1</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure><p>然后重新加载 <code>sysctl.conf</code> 即可</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl -p</span><br></pre></td></tr></table></figure><h1 id="macOS-安装-Docker"><a href="#macOS-安装-Docker" class="headerlink" title="macOS 安装 Docker"></a>macOS 安装 Docker</h1><h2 id="系统要求-2"><a href="#系统要求-2" class="headerlink" title="系统要求"></a>系统要求</h2><p><a href="https://docs.docker.com/docker-for-mac/">Docker Desktop for Mac </a>要求系统最低为 macOS Mojave 10.14。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="使用-Homebrew-安装"><a href="#使用-Homebrew-安装" class="headerlink" title="使用 Homebrew 安装"></a>使用 Homebrew 安装</h3><p><a href="https://brew.sh/">Homebrew </a>的 <a href="https://github.com/Homebrew/homebrew-cask">Cask</a>已经支持 Docker Desktop for Mac，因此可以很方便的使用 Homebrew Cask 来进行安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">brew install --cask docker</span><br></pre></td></tr></table></figure><h3 id="手动下载安装"><a href="#手动下载安装" class="headerlink" title="手动下载安装"></a>手动下载安装</h3><p>如果需要手动下载，请点击以下 <a href="https://desktop.docker.com/mac/main/amd64/Docker.dmg">链接</a>下载 Docker Desktop for Mac。</p><blockquote><p>如果你的电脑搭载的是 M1 芯片（<code>arm64</code> 架构），请点击以下 <a href="https://desktop.docker.com/mac/main/arm64/Docker.dmg">链接</a>下载 Docker Desktop for Mac。你可以在 <a href="https://docs.docker.com/docker-for-mac/apple-silicon/">官方文档 </a>查阅已知的问题。</p></blockquote><p>如同 macOS 其它软件一样，安装也非常简单，双击下载的 <code>.dmg</code> 文件，然后将那只叫 <a href="https://www.docker.com/blog/call-me-moby-dock/">Moby</a>的鲸鱼图标拖拽到 <code>Application</code> 文件夹即可（其间需要输入用户密码）。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301241601823.png" alt="img"></p><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>从应用中找到 Docker 图标并点击运行。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301241601874.png" alt="img"></p><p>运行之后，会在右上角菜单栏看到多了一个鲸鱼图标，这个图标表明了 Docker 的运行状态。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301241601560.png" alt="img"></p><p>每次点击鲸鱼图标会弹出操作菜单。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301241602433.png" alt="img"></p><p>之后，你可以在终端通过命令检查安装后的 Docker 版本。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> docker --version</span><br><span class="line">Docker version 20.10.0, build 7287ab3</span><br></pre></td></tr></table></figure><p>如果 <code>docker version</code>、<code>docker info</code> 都正常的话，可以尝试运行一个 <a href="https://hub.docker.com/_/nginx/">Nginx 服务器 </a>：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -p 80:80 --name webserver nginx</span><br></pre></td></tr></table></figure><p>服务运行后，可以访问 <a href="http://localhost/">http://localhost</a>，如果看到了 “Welcome to nginx!”，就说明 Docker Desktop for Mac 安装成功了。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301241848957.png" alt="img"></p><p>要停止 Nginx 服务器并删除执行下面的命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker stop webserver</span><br><span class="line">docker <span class="built_in">rm</span> webserver</span><br></pre></td></tr></table></figure><h1 id="Windows-10-安装-Docker"><a href="#Windows-10-安装-Docker" class="headerlink" title="Windows 10 安装 Docker"></a>Windows 10 安装 Docker</h1><h2 id="系统要求-3"><a href="#系统要求-3" class="headerlink" title="系统要求"></a>系统要求</h2><p><a href="https://docs.docker.com/docker-for-windows/install/">Docker Desktop for Windows </a>支持 64 位版本的 Windows 10 Pro，且必须开启 Hyper-V（若版本为 v1903 及以上则无需开启 Hyper-V），或者 64 位版本的 Windows 10 Home v1903 及以上版本。</p><h2 id="安装-1"><a href="#安装-1" class="headerlink" title="安装"></a>安装</h2><p><strong>手动下载安装</strong></p><p>点击以下 <a href="https://desktop.docker.com/win/main/amd64/Docker Desktop Installer.exe">链接</a>下载 Docker Desktop for Windows。</p><p>下载好之后双击 <code>Docker Desktop Installer.exe</code> 开始安装。</p><p><strong>使用 <a href="https://docs.microsoft.com/zh-cn/windows/package-manager/">winget </a>安装</strong></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">winget install Docker.DockerDesktop</span><br></pre></td></tr></table></figure><h2 id="在-WSL2-运行-Docker"><a href="#在-WSL2-运行-Docker" class="headerlink" title="在 WSL2 运行 Docker"></a>在 WSL2 运行 Docker</h2><p>若你的 Windows 版本为 Windows 10 专业版或家庭版 v1903 及以上版本可以使用 WSL2 运行 Docker，具体请查看 <a href="https://docs.docker.com/docker-for-windows/wsl/">Docker Desktop WSL 2 backend</a>。</p><h2 id="运行-1"><a href="#运行-1" class="headerlink" title="运行"></a>运行</h2><p>在 Windows 搜索栏输入 <strong>Docker</strong> 点击 <strong>Docker Desktop</strong> 开始运行。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301241605305.png" alt="image-20230124160551375"></p><p>Docker 启动之后会在 Windows 任务栏出现鲸鱼图标。</p><p>等待片刻，当鲸鱼图标静止时，说明 Docker 启动成功，之后你可以打开 PowerShell 使用 Docker。</p><blockquote><p>推荐使用 <a href="https://docs.microsoft.com/zh-cn/windows/terminal/get-started">Windows Terminal </a>在终端使用 Docker。</p></blockquote><h1 id="镜像加速器"><a href="#镜像加速器" class="headerlink" title="镜像加速器"></a>镜像加速器</h1><p>国内从 Docker Hub 拉取镜像有时会遇到困难，此时可以配置镜像加速器。国内很多云服务商都提供了国内加速器服务，例如</p><ul><li><a href="https://www.aliyun.com/product/acr?source=5176.11533457&amp;userCode=8lx5zmtu">阿里云加速器(点击管理控制台 -&gt; 登录账号(淘宝账号) -&gt; 右侧镜像工具 -&gt; 镜像加速器 -&gt; 复制加速器地址)</a></li><li><a href="https://www.163yun.com/help/documents/56918246390157312">网易云加速器 <code>https://hub-mirror.c.163.com</code></a></li><li><a href="https://cloud.baidu.com/doc/CCE/s/Yjxppt74z#使用dockerhub加速器">百度云加速器 <code>https://mirror.baidubce.com</code></a></li></ul><p><strong>由于镜像服务可能出现宕机，建议同时配置多个镜像。各个镜像站测试结果请到 <a href="https://github.com/docker-practice/docker-registry-cn-mirror-test/actions">docker-practice/docker-registry-cn-mirror-test </a>查看。</strong></p><blockquote><p>国内各大云服务商（腾讯云、阿里云、百度云）均提供了 Docker 镜像加速服务，建议根据运行 Docker 的云平台选择对应的镜像加速服务，具体请参考本页最后一小节。</p></blockquote><p>本节我们以 <a href="https://www.163yun.com/">网易云 </a>镜像服务 <code>https://hub-mirror.c.163.com</code> 为例进行介绍。</p><h2 id="Ubuntu-16-04-、Debian-8-、CentOS-7"><a href="#Ubuntu-16-04-、Debian-8-、CentOS-7" class="headerlink" title="Ubuntu 16.04+、Debian 8+、CentOS 7+"></a>Ubuntu 16.04+、Debian 8+、CentOS 7+</h2><p>目前主流 Linux 发行版均已使用 <a href="https://systemd.io/">systemd</a>进行服务管理，这里介绍如何在使用 systemd 的 Linux 发行版中配置镜像加速器。</p><p>请首先执行以下命令，查看是否在 <code>docker.service</code> 文件中配置过镜像地址。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="built_in">cat</span> docker | grep <span class="string">&#x27;\-\-registry\-mirror&#x27;</span></span><br></pre></td></tr></table></figure><p>如果该命令有输出，那么请执行 <code>$ systemctl cat docker</code> 查看 <code>ExecStart=</code> 出现的位置，修改对应的文件内容去掉 <code>--registry-mirror</code> 参数及其值，并按接下来的步骤进行配置。</p><p>如果以上命令没有任何输出，那么就可以在 <code>/etc/docker/daemon.json</code> 中写入如下内容（如果文件不存在请新建该文件）：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><blockquote><p>注意，一定要保证该文件符合 json 规范，否则 Docker 将不能启动。</p></blockquote><p>之后重新启动服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl daemon-reload</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><h2 id="Windows-10"><a href="#Windows-10" class="headerlink" title="Windows 10"></a>Windows 10</h2><p>对于使用 <code>Windows 10</code> 的用户，在任务栏托盘 Docker 图标内右键菜单选择 <code>Settings</code>，打开配置窗口后在左侧导航菜单选择 <code>Docker Engine</code>，在右侧像下边一样编辑 json 文件，之后点击 <code>Apply &amp; Restart</code> 保存后 Docker 就会重启并应用配置的镜像地址了。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h2><p>对于使用 macOS 的用户，在任务栏点击 Docker Desktop 应用图标 -&gt; <code>Perferences</code>，在左侧导航菜单选择 <code>Docker Engine</code>，在右侧像下边一样编辑 json 文件。修改完成之后，点击 <code>Apply &amp; Restart</code> 按钮，Docker 就会重启并应用配置的镜像地址了。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;registry-mirrors&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="string">&quot;https://hub-mirror.c.163.com&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;https://mirror.baidubce.com&quot;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h2 id="检查加速器是否生效"><a href="#检查加速器是否生效" class="headerlink" title="检查加速器是否生效"></a>检查加速器是否生效</h2><p>执行 <code>$ docker info</code>，如果从结果中看到了如下内容，说明配置成功。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Registry Mirrors:</span><br><span class="line"> https://hub-mirror.c.163.com/</span><br></pre></td></tr></table></figure><h2 id="k8s-gcr-io-镜像"><a href="#k8s-gcr-io-镜像" class="headerlink" title="k8s.gcr.io 镜像"></a><code>k8s.gcr.io</code> 镜像</h2><p>可以登录 <a href="https://www.aliyun.com/product/acr?source=5176.11533457&amp;userCode=8lx5zmtu&amp;type=copy">阿里云 容器镜像服务 </a><strong>镜像中心</strong> -&gt; <strong>镜像搜索</strong> 查找。</p><p>例如 <code>k8s.gcr.io/coredns:1.6.7</code> 镜像可以用 <code>registry.cn-hangzhou.aliyuncs.com/google_containers/coredns:1.6.7</code> 代替。</p><p>一般情况下有如下对应关系：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  docker pull k8s.gcr.io/xxx</span></span><br><span class="line"></span><br><span class="line"> docker pull registry.cn-hangzhou.aliyuncs.com/google_containers/xxx</span><br></pre></td></tr></table></figure><h2 id="不再提供服务的镜像"><a href="#不再提供服务的镜像" class="headerlink" title="不再提供服务的镜像"></a>不再提供服务的镜像</h2><p>某些镜像不再提供服务，添加无用的镜像加速器，会拖慢镜像拉取速度，你可以从镜像配置列表中删除它们。</p><ul><li><a href="https://dockerhub.azk8s.cn">https://dockerhub.azk8s.cn</a> <strong>已转为私有</strong></li><li><a href="https://reg-mirror.qiniu.com">https://reg-mirror.qiniu.com</a></li><li><a href="https://registry.docker-cn.com">https://registry.docker-cn.com</a></li></ul><p>建议  <a href="https://github.com/docker-practice/docker-registry-cn-mirror-test">镜像测试</a>这个 GitHub 仓库，更新各个镜像地址的状态。</p><h2 id="云服务商"><a href="#云服务商" class="headerlink" title="云服务商"></a>云服务商</h2><p>某些云服务商提供了 <strong>仅供内部</strong> 访问的镜像服务，当您的 Docker 运行在云平台时可以选择它们。</p><ul><li><a href="https://github.com/Azure/container-service-for-azure-china/blob/master/aks/README.md#22-container-registry-proxy">Azure 中国镜像 <code>https://dockerhub.azk8s.cn</code></a></li><li><a href="https://cloud.tencent.com/act/cps/redirect?redirect=10058&amp;cps_key=3a5255852d5db99dcd5da4c72f05df61">腾讯云 <code>https://mirror.ccs.tencentyun.com</code></a></li></ul><hr><p>参考 :</p><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/yeasy-GitHub-orange?logo=GitHub&color=orange&link=https://github.com/yeasy/docker_practice&"></object>]]></content>
      
      
      <categories>
          
          <category> 环境安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker青龙面板</title>
      <link href="/posts/f5f9fa9b.html"/>
      <url>/posts/f5f9fa9b.html</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=" "></a> </h2><h1 id="青龙面板"><a href="#青龙面板" class="headerlink" title="青龙面板"></a>青龙面板</h1><p>创建青龙面板容器，容器名qinglong文件夹名ql 端口5700</p><div class="note info modern"><p>注意: 这里需要在你服务商那边的安全组放行5700端口，或者在防火墙设置里放行5700端口，否则安装好无法访问。！</p></div><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">docker run -dit \</span><br><span class="line">   -v $PWD/ql/config:/ql/config \</span><br><span class="line">   -v $PWD/ql/log:/ql/log \</span><br><span class="line">   -v $PWD/ql/db:/ql/db \</span><br><span class="line">   -v $PWD/ql/repo:/ql/repo \</span><br><span class="line">   -v $PWD/ql/raw:/ql/raw \</span><br><span class="line">   -v $PWD/ql/scripts:/ql/scripts \</span><br><span class="line">   -v $PWD/ql/jbot:/ql/jbot \</span><br><span class="line">   -p 5700:5700 \</span><br><span class="line">   --name qinglong \</span><br><span class="line">   --hostname qinglong \</span><br><span class="line">   --restart unless-stopped \</span><br><span class="line">   whyour/qinglong:latest</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>访问 ip:5700，如果没有进入配置向导，请在SSH终端下执行如下命令查看账号及密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> -it qinglong <span class="built_in">cat</span> /ql/config/auth.json</span><br></pre></td></tr></table></figure><h2 id="青龙面板基础命令"><a href="#青龙面板基础命令" class="headerlink" title="青龙面板基础命令"></a>青龙面板基础命令</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#重启青龙容器</span><br><span class="line">docker restart 你的容器名</span><br><span class="line"> </span><br><span class="line">#更新青龙</span><br><span class="line">docker exec -it qinglong ql update</span><br><span class="line"> </span><br><span class="line">#更新青龙并编译</span><br><span class="line">docker exec -it qinglong ql restart</span><br><span class="line"> </span><br><span class="line">#拉取自定义仓库</span><br><span class="line">docker exec -it qinglong ql repo https://ghproxy.com/https://github.com/whyour/hundun.git &quot;quanx&quot; &quot;tokens|caiyun|didi|donate|fold|Env&quot;</span><br><span class="line"> </span><br><span class="line">#拉取单个脚本</span><br><span class="line">docker exec -it qinglong ql raw https://ghproxy.com/https://raw.githubusercontent.com/moposmall/Script/main/Me/jx_cfd.js</span><br><span class="line"> </span><br><span class="line">#删除7天前的所有日志</span><br><span class="line">docker exec -it qinglong ql rmlog 7</span><br><span class="line"> </span><br><span class="line">#启动bot</span><br><span class="line">docker exec -it qinglong ql bot</span><br><span class="line"> </span><br><span class="line">#导出互助码</span><br><span class="line">docker exec -it qinglong ql code</span><br><span class="line"> </span><br><span class="line">#通知测试</span><br><span class="line">docker exec -it qinglong notify test test</span><br><span class="line"> </span><br><span class="line">#立即执行脚本</span><br><span class="line">docker exec -it qinglong task test.js now</span><br><span class="line"> </span><br><span class="line">#并行执行脚本</span><br><span class="line">docker exec -it qinglong task test.js conc</span><br></pre></td></tr></table></figure><h2 id="配置bilibilitools"><a href="#配置bilibilitools" class="headerlink" title="配置bilibilitools"></a>配置bilibilitools</h2><p>安装依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker exec -it qinglong bash</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -sSL https://ghproxy.com/https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/qinglong/ray-dotnet-install.sh | bash /dev/stdin --no-official</span><br></pre></td></tr></table></figure><p>编辑青龙的 <code>extra.sh</code> 文件，添加如下指令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 安装 dotnet 环境</span><br><span class="line">curl -sSL https://ghproxy.com/https://raw.githubusercontent.com/RayWangQvQ/BiliBiliToolPro/main/qinglong/ray-dotnet-install.sh | bash /dev/stdin --no-official</span><br></pre></td></tr></table></figure><p>重启</p><p><code>docker restart qinglong</code></p><p> <strong>登录青龙面板并修改配置</strong></p><p>青龙面板，<code>配置文件</code>页。</p><p>修改 <code>RepoFileExtensions=&quot;js py&quot;</code> 为 <code>RepoFileExtensions=&quot;js py sh&quot;</code></p><p>保存配置。</p><p> <strong>在青龙面板中添加拉库定时任务</strong></p><p>两种方式：</p><p><strong>订阅管理</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">名称：Bilibili</span><br><span class="line">类型：公开仓库</span><br><span class="line">链接：https://github.com/RayWangQvQ/BiliBiliToolPro.git</span><br><span class="line">定时类型：crontab</span><br><span class="line">定时规则：2 2 28 * *</span><br><span class="line">白名单：bili_task_.+\.sh</span><br><span class="line">文件后缀：sh</span><br></pre></td></tr></table></figure><p>没提到的不要动。</p><p>保存后，点击运行按钮，运行拉库。</p><p><strong>定时任务拉库</strong></p><p>青龙面板，<code>定时任务</code>页，右上角<code>添加任务</code>，填入以下信息：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">名称：拉取Bili库</span><br><span class="line">命令：ql repo https://github.com/RayWangQvQ/BiliBiliToolPro.git &quot;bili_task_&quot;</span><br><span class="line">定时规则：2 2 28 * *</span><br></pre></td></tr></table></figure><p>点击确定。</p><p>保存成功后，找到该定时任务，点击运行按钮，运行拉库。</p><p>如果正常，拉库成功后，同时也会自动添加bilibili相关的task任务。</p><h1 id="docker-从入门到精通书籍"><a href="#docker-从入门到精通书籍" class="headerlink" title="docker 从入门到精通书籍"></a>docker 从入门到精通书籍</h1><p> <strong>GitBook 格式</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull ccr.ccs.tencentyun.com/dockerpracticesig/docker_practice</span><br><span class="line"></span><br><span class="line"># 国内仓库</span><br><span class="line">$ docker run -it --rm -p 4000:80 ccr.ccs.tencentyun.com/dockerpracticesig/docker_practice</span><br><span class="line"></span><br><span class="line"># docker hub</span><br><span class="line"># $ docker run -it --rm -p 4000:80 dockerpracticesig/docker_practice</span><br></pre></td></tr></table></figure><p> <strong>Vuepress 格式</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull ccr.ccs.tencentyun.com/dockerpracticesig/docker_practice:vuepress</span><br><span class="line"></span><br><span class="line"># 国内仓库</span><br><span class="line">$ docker run -it --rm -p 4000:80 ccr.ccs.tencentyun.com/dockerpracticesig/docker_practice:vuepress</span><br><span class="line"></span><br><span class="line"># docker hub</span><br><span class="line"># $ docker run -it --rm -p 4000:80 dockerpracticesig/docker_practice:vuepress</span><br></pre></td></tr></table></figure><p> <strong>打开浏览器阅读</strong></p><p>打开浏览器，在地址栏输入 <code>ip:4000</code> 即可开始阅读。</p><p> <strong>停止</strong></p><p>在终端按 <code>Ctrl + c</code></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker应用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用PS中堆栈功能完成星轨的后期</title>
      <link href="/posts/198fd2bd.html"/>
      <url>/posts/198fd2bd.html</url>
      
        <content type="html"><![CDATA[<p>堆栈模式里面有很多种，常用的有<strong>平均值、中间值、最大值。</strong></p><p><strong>平均值</strong>：所有非透明像素的平均通道值渲染，简单来说就是模拟长曝光，譬如上图说的用的就是平均值堆栈，堆栈后可以有效降低噪点，提升画质，另外还能带来长爆的效果，多用于拍摄有水面、流动的云彩这样的照片。</p><p><strong>中间值</strong>：所有非透明像素的中间通道值，对减少杂色和从图像中移去不需要的内容很有效果。多用来降噪，或者“广场去人”这种照片。</p><p><strong>最大值</strong>：所有非透明像素的最大通道值。一般用于星轨的后期，将最亮的点进行叠加。今天我们就来讲讲星轨的拍摄和后期流程。</p><p>星轨是什么，众所周知，星星是移动的，那么我们如果进行长时间曝光，或者通过一些后期的技巧，把星星移动的这个过程拍下来，那么星星就不在是一个个亮点，而是变成了一条线，那么这个明亮的线条就是星轨。</p><p>进行星轨的拍摄，首先你要找到一个比较空旷、光污染比较少的地方，最好是远离城市。当然，一定要晴天，或者云彩比较少的夜晚，你首先要肉眼看到星星，然后我们就可以准备拍摄了。</p><p>拍摄前先要准备好你的拍摄器材：相机、广角镜头、三脚架、快门线（个别机型不需要）。这些就足够了，我们说，拍星星，其实不需要太多的设备或者配件。</p><p>拍摄的参数根据你的器材不同，都是不一样的。我推荐几个比较常用参数供大家参考：ISO3200 F2.8 16MM 20S、ISO3200 F4 16MM 20S。简单来说就是高ISO，最大光圈，曝光20秒到30秒之间。</p><p>堆栈手法合成星轨，要求你“机位不变，持续不断的拍摄多张照片”，至少拍摄10分钟才能看到效果，最好拍摄一小时以上，所以三脚架一定要稳定，拍摄期间一定不要碰三脚架。记得关闭“高ISO降噪”和“长时间曝光降噪”这两个功能，如果你开启了，最后合成出来的星轨可能就是断裂的。</p><h1 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h1><p>进入PS，将文件载入堆栈</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301222103684.png" alt="image-20230122210315122"></p><p>之后选取我们拍到这些照片。点击确定</p><p>然后会得到这样一个界面，注意右下角，选取所有图片。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301222105155.png" alt="image-20230122210520256"></p><p>将这些照片转化为智能对象。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301222106251.png" alt="image-20230122210558095"></p><p>会在右下角看到这个图层</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301222107083.png" alt="image-20230122210743104"></p><p>然后选择图层-智能对象-堆栈模式-最大值</p><p>等待渲染完成你就会得到一张星轨的照片了  </p><hr><p>第一张星轨还删了一部分乱入东西的图片导致星轨不连贯</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301222117224.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 摄影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 摄影 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Google</title>
      <link href="/posts/39072102.html"/>
      <url>/posts/39072102.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="9e2cf1f421ca87166850029546bf60305172d066dbd373f48fd8f0f790f5a62d">d9944a27ea6469c90725ded423b0f2bd22ee0531b858848ca941a61937a7c2f40378d52f96db4bea4d2bf92a3ffae0604638573a1d68864002a83ed58f1248248d6df59b5ecc0048d1279e5c2793b7baf5f209391dc44f51d5ffe1c9820b542eed286ecd7876292dd14dbb74643902c6961e2a3278337c3850087e4024a3297d8c54ab58dc1eb7470a8260e6dd166105b2f997527119b6b962b6e461134c80b9db293be387c44ffcfd8034704288385155fe7b0dec9d4d2a70e13b5ab96690210ec5dd1936995d5f861dba8ee034824bfcf7899c8b09522dcb48052a2d1ec17e5823dd6e287338b140e9fb2f45815f2a4ddb0b6cb418c58044c47eead5c9db94da930fe44ddea60ccc965199379c7d1888b82094351e684cdbe70d77b7735b15c427aa1db42ae432e9e622828a667fed794a899f7f9976377cff221304f1e39c67ead8ea599162a095d2b400a29c73c3009d9317f5431f4607f6417c954aa89bfbd6660f818a2b5173f2b186a954fd686213bb2fad715ccc4ca650914e1ddb54a02404915a27665aa2043569c4bfe5fcc3357461c2955f95eca6d7578e431eda044445f699a3d18dccfe67f96b89e72541e121b56753f9c2a4881d7fe3bb6fac29f79e206db2c7d138864fe37a2a27afd39d488e1b9ae21c893b8f554d963dce5b5d1805015dd34e6cb87bd935028bfb69957e22848ef995de47ce2ce8bb6bcfef3c505de367fe2a08c61c28583d4685a7b0670c13f5f3a4e6411559806956ba7105c040be44c6a16bd5c014d383f620acfea8700c3f6985f4469ccb5c684ed239a7ac45131c44818b3011b4ae99e348f7ede817e8e4afde93502034d0bc3becee035079b0773b0f3011233eb063b4de09e40a8c0f1389db5a4b936baf4a838e78e09714a36199f694e776ebff2f616e64ac14d34a73038adef40959755470d4fd4f3c7ef3ede337e0f821f65c503fa5bed2172cf7225201ff8e178d21463042280ff7a8d2da13cfdc0ffca2d529e12eb9b34a1d4249c9e8f4f79aeccbd2ddeba4ef485bc0927a5e8df4c48dad5f35f887efc7b19dec71b67ec3da30b9a56c81abcbfc54a20062450b99d498fb0d4256c335f6b0723ae66791148b1929803eefc5d4a6307d5cc5e93797f8734f4bb91b063821081f812f5d8b359153106d10866fc958cb3a31a700379fa411d2c830cbb9d967e3eb169e0abfee6e1570c7115aa5a8cfdd2017cac3dc9348e62a7d8bfc9494ac2aa3723f0101630e6e4ccaacc9de3edb3959553b96f22e14e356e41040e8da6d1037af03b5889d08830ec8bdf5fedf92009326955d8ae282e1330f0e252ad3769f7fddec80413f889d33046beec89475bbb038e837e0a5b2eea0fc43ba4628ec1ad321091b447b1230570cb24e9710a6c29e9ba0fa0ee123dee396d010dc4e1c78db08c00302499c6461558708ce087f7be6b256ef8519f64734ca5c447d6c2504e51c8c4caccafbda77cc2c7a81816756e5181953d5be8ffed4ffcfc88afd0fd348c43d9fa09692795f541b5e7605def52bc58f2abad94b0c401ad9456cb7372099bd1ce08e69c09168da031bb3a00a098b93c959ec76f8de7c6055054e36a2f8cc3284722c27901a0af76be48921c3ef3261a4203b6f598f648f44512136f45107de68c69c1dda8fb409e61b789364fcaec59b4a6cf518b216cc86b57005355c98d4d3f1f6e1734a55f0482bcbef0537ee19ef05cc8df7b4aba165236ae4265fdc03dc73b90ff168417265a655c8ff3d06748423b5eaf024ab1d3dd67033c4dcc9ebcbb4727c0b230d6248bd59b6d45cf2fd1081dd71c6d9ae910b80d9ef7e9ad3d9a851a9d0cca98d7e4c064200debf7e00dcf8e66295e262bb8eec338b352dfce6e3c8d2d667b956f0dafd98a091b4e47883212576921226b4cd7978e36ec596d5110f04b55275854b2cf61ca16279baacd070f22d83f5af514910530cc99d004839f267690715a79494243d27f829925cbb539573cb104fb5bd65bc47d0dad035fb261e029f9be58a749ba33edd49f8c4b7df377f941cedbd6d85d50642e62ab29a646c5afd722a1daec0dc85e09b8b16bdc3662342faaf41216632df60fef985e78315e94070c157a23f81e0220a9a2e3d40e79d2bef20765fa8cf72fa91907494eff201672b8e19660e971cc253ceb20e8d1397688ef88ef64996d1dba07e8c2dd243f74afbaf34a04dd324ff9e28a786fd2f07990c14aa1bde7e0fdcbbbce62bbfc8ecf31c7f4bdc93afa3b80e7becc87a29382076f8650e4ce1fc3d3f2119849340752a2cb88db9a0d1c9b34d1f89c1bee6d33c23cd74b1887e32202aad7c00236aa4482f6a005007f3fe4dbd7ae07628aa9537785d968232d6efd9f05fa32efbbca21312394edb6b3c40ee7fc43ed45766184c94a4af1ab06bc4ee35809442bcf03e88c2545248083ae8b3e389558c47edcefafdc5f458a75fd7390bf8fb0359858a3a0709c295e4128b8ffd0bf7af5d2910e1a33c146dc021754d1bd2399fe4ef65f01929d7f7cf91886e5152150884927bbda5514eb4a31f553d63ace7d711d79a723afcbd01191969e763ddaf6b78e4725515bd4e0df831eac8453ce34d7728c8683138e1db3f4447bb89c88c326bb4057e4325e64475fa94351fe5cbaa38e98e48f44bbf3f5780b233f5c265230b4bd93c91a898567b4ac000ba050ffe319228b06686b814709262450f414f33bfe2b3f878d936aec450bd349bceb83f93d6ca6142937ba22f6368a7e84e69a2f9bb610265dc21a271f5a315cee24f54c4273462a75b1ec4b041f60a8e322679c9d2158c619439bd91d5ddb124d06131f425ae46212f67114036626b7e99f9b1d8916479d19382c972c5c550424596f45f54253720085f74aa1096ac3a617f09e0156da92abcc1d3bbe7b8b5abc766ad740f0f5948d7c31887</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="您好, 这里需要密码.">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计算机命令</title>
      <link href="/posts/6b0cd445.html"/>
      <url>/posts/6b0cd445.html</url>
      
        <content type="html"><![CDATA[<div class="note info modern"><p>记录一些常用的计算机命令</p></div><h2 id="cookie获取"><a href="#cookie获取" class="headerlink" title="cookie获取"></a>cookie获取</h2><p>控制台输入<code>document.cookie</code></p><h2 id="刷新DNS"><a href="#刷新DNS" class="headerlink" title="刷新DNS"></a>刷新DNS</h2><p>cmd输入<code>ipconfig/flushdns</code></p><h2 id="步骤记录器"><a href="#步骤记录器" class="headerlink" title="步骤记录器"></a>步骤记录器</h2><p>cmd 输入<code>psr</code></p><h2 id="scoop包管理器"><a href="#scoop包管理器" class="headerlink" title="scoop包管理器"></a>scoop包管理器</h2><p><code>neofetch</code>  查看系统信息</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>一些MySQL命令</title>
      <link href="/posts/c24675b4.html"/>
      <url>/posts/c24675b4.html</url>
      
        <content type="html"><![CDATA[<h2 id="登录sql"><a href="#登录sql" class="headerlink" title="登录sql"></a>登录sql</h2><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql -h <span class="number">127.0</span>.<span class="number">0.1</span> -u &lt;用户名&gt; -p &lt;密码&gt;. <span class="comment">#默认用户名&lt;root&gt;,-p 是密码，参数后边不需要空格</span></span><br><span class="line">mysql -D 所选择的数据库名 -h 主机名 -u 用户名 -p</span><br><span class="line">mysql&gt; <span class="keyword">exit</span> <span class="comment">#退出 使用 &quot;quit;&quot; 或 &quot;\q;&quot;一样的效果</span></span><br><span class="line">mysql&gt; status; <span class="comment">#显示当前mysql的version的各种信息</span></span><br><span class="line">mysql&gt; select version();<span class="comment">#显示当前mysql的version信息</span></span><br><span class="line">mysql&gt; show global variables like <span class="string">&#x27;port&#x27;</span>;<span class="comment">#查看mysql端口号 </span></span><br></pre></td></tr></table></figure><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="type">name</span> <span class="type">character</span> <span class="keyword">set</span> gbk</span><br><span class="line"><span class="comment">--创建一个名为name的数据库，数据库字符编码指定为gbk</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="type">name</span>;  <span class="comment">--创建名为neme的数据库</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> db1; <span class="comment">--判断db1是否存在若不存在创建数据库</span></span><br><span class="line"><span class="keyword">drop</span> <span class="keyword">database</span> <span class="type">name</span>; <span class="comment">--删除库名为name的库</span></span><br><span class="line">dorp <span class="keyword">database</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> <span class="type">name</span>;判断<span class="type">name</span>数据库是否存在若存在删除数据库</span><br><span class="line"><span class="keyword">show</span> databases; <span class="comment">--显示数据库列表查询数据库个数</span></span><br><span class="line">use <span class="type">name</span>; <span class="comment">--选择创建的数据库 name</span></span><br><span class="line"><span class="keyword">show</span> <span class="keyword">tables</span>; <span class="comment">--显示name下面所有的表的名字</span></span><br><span class="line">describe 表名; <span class="comment">--显示数据表中结构</span></span><br><span class="line"><span class="keyword">delete</span> form 表明; <span class="comment">--清空表中记录</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">database</span>();<span class="comment">--查看当前正在使用的数据库</span></span><br></pre></td></tr></table></figure><h2 id="创建数据库表"><a href="#创建数据库表" class="headerlink" title="创建数据库表"></a>创建数据库表</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> TABBLE 语法 语句用于从表中选取数据</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> name(</span><br><span class="line">列名称<span class="number">1</span> 数据类型，</span><br><span class="line">列名称<span class="number">2</span> 数据类型，</span><br><span class="line">...</span><br><span class="line">);</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> IF EXISTX <span class="string">&#x27;name&#x27;</span>;如果存在表name就把它从数据库<span class="keyword">drop</span>掉</span><br><span class="line"><span class="keyword">Create</span> <span class="keyword">table</span>  name（  ， ）;创建表name</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">&#x27;NAME&#x27;</span>(</span><br><span class="line">`id`             <span class="type">int</span>(<span class="number">100</span>) unsigned <span class="keyword">NOT</span> <span class="keyword">NULL</span> AUTO_INCREMENT <span class="keyword">primary</span> key,</span><br><span class="line">  `password`       <span class="type">varchar</span>(<span class="number">32</span>)       <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;用户密码&#x27;</span>,</span><br><span class="line">  `reset_password` tinyint(<span class="number">32</span>)       <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="number">0</span> COMMENT <span class="string">&#x27;用户类型：0－不需要重置密码；1-需要重置密码&#x27;</span>,</span><br><span class="line">  `mobile`         <span class="type">varchar</span>(<span class="number">20</span>)       <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="string">&#x27;&#x27;</span> COMMENT <span class="string">&#x27;手机&#x27;</span>,</span><br><span class="line">  `create_at`      <span class="type">timestamp</span>(<span class="number">6</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">6</span>),</span><br><span class="line">  `update_at`      <span class="type">timestamp</span>(<span class="number">6</span>)      <span class="keyword">NOT</span> <span class="keyword">NULL</span> <span class="keyword">DEFAULT</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">6</span>) <span class="keyword">ON</span> <span class="keyword">UPDATE</span> <span class="built_in">CURRENT_TIMESTAMP</span>(<span class="number">6</span>),</span><br><span class="line">  <span class="comment">-- 创建唯一索引，不允许重复</span></span><br><span class="line">  <span class="keyword">UNIQUE</span> INDEX idx_user_mobile(`mobile`)</span><br><span class="line">)</span><br><span class="line">ENGINE<span class="operator">=</span>InnoDB <span class="keyword">DEFAULT</span> CHARSET<span class="operator">=</span>utf8</span><br><span class="line">COMMENT<span class="operator">=</span><span class="string">&#x27;用户表信息&#x27;</span>;</span><br><span class="line"> </span><br><span class="line">数据类型的属性解释</span><br><span class="line"> </span><br><span class="line"><span class="keyword">NULL</span>：数据列可包含<span class="keyword">NULL</span>值；</span><br><span class="line"><span class="keyword">NOT</span> <span class="keyword">NULL</span>：数据列不允许包含<span class="keyword">NULL</span>值；</span><br><span class="line"><span class="keyword">DEFAULT</span>：默认值；</span><br><span class="line"><span class="keyword">PRIMARY</span> KEY：主键；</span><br><span class="line">AUTO_INCREMENT：自动递增，适用于整数类型；</span><br><span class="line">UNSIGNED：是指数值类型只能为正数；</span><br><span class="line"><span class="type">CHARACTER</span> <span class="keyword">SET</span> name：指定一个字符集；</span><br><span class="line">COMMENT：对表或者字段说明</span><br></pre></td></tr></table></figure><h2 id="删除数据库表"><a href="#删除数据库表" class="headerlink" title="删除数据库表"></a>删除数据库表</h2><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> 表名称;     <span class="comment">-- 用于删除数据库中的现有表。</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> 表名称; <span class="comment">-- 用于删除表内的数据，但不删除表本身。</span></span><br><span class="line"><span class="comment">-- 删除现有表 NAME：</span></span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">TABLE</span> <span class="type">NAME</span>;</span><br><span class="line"><span class="comment">-- 删除现有表 NAME 表内的数据，不删除表：</span></span><br><span class="line"><span class="keyword">TRUNCATE</span> <span class="keyword">TABLE</span> <span class="type">NAME</span>;</span><br></pre></td></tr></table></figure><h2 id="增删改查"><a href="#增删改查" class="headerlink" title="增删改查"></a>增删改查</h2><h3 id="SELECT"><a href="#SELECT" class="headerlink" title="SELECT"></a>SELECT</h3><p><code>SELECT 语法</code> 语句用于从表中选取数据。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名称<span class="number">1</span>, 列名称<span class="number">2</span>, ... <span class="keyword">FROM</span> 表名称;</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> 表名称;</span><br><span class="line">-- 从 Customers 表中选择 CustomerName 和 City 列：</span><br><span class="line"><span class="keyword">SELECT</span> CustomerName, City <span class="keyword">FROM</span> Customers;</span><br><span class="line">-- 从 Customers 表中选择所有列：</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Customers;</span><br><span class="line">-- 表 station 取个别名叫 s，表 station 中不包含 字段 id=13 或者 14 的，并且 id 不等于 4 的 查询出来，只显示 id</span><br><span class="line"><span class="keyword">SELECT</span> s.id <span class="keyword">from</span> station s <span class="keyword">WHERE</span> id <span class="keyword">in</span> (<span class="number">13</span>,<span class="number">14</span>) <span class="keyword">and</span> id <span class="keyword">not</span> <span class="keyword">in</span> (<span class="number">4</span>);</span><br><span class="line">-- 从表 users 选取 id=3 的数据，并只拉一条数据(据说能优化性能)</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> users <span class="keyword">where</span> id=<span class="number">3</span> <span class="keyword">limit</span> <span class="number">1</span></span><br><span class="line">-- 结果集中会自动去重复数据</span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> Company <span class="keyword">FROM</span> Orders </span><br><span class="line">-- 表 Persons 字段 Id_P 等于 Orders 字段 Id_P 的值，</span><br><span class="line">-- 结果集显示 Persons表的 LastName、FirstName字段，Orders表的OrderNo字段</span><br><span class="line"><span class="keyword">SELECT</span> p.LastName, p.FirstName, o.OrderNo <span class="keyword">FROM</span> Persons p, Orders o <span class="keyword">WHERE</span> p.Id_P = o.Id_P</span><br><span class="line"> </span><br><span class="line">-- gbk 和 utf8 中英文混合排序最简单的办法 </span><br><span class="line">-- ci是 <span class="keyword">case</span> insensitive, 即 “大小写不敏感”</span><br><span class="line"><span class="keyword">SELECT</span> tag, <span class="built_in">COUNT</span>(tag) <span class="keyword">from</span> news <span class="keyword">GROUP</span> <span class="keyword">BY</span> tag <span class="keyword">order</span> <span class="keyword">by</span> convert(tag <span class="keyword">using</span> gbk) <span class="keyword">collate</span> gbk_chinese_ci;</span><br><span class="line"><span class="keyword">SELECT</span> tag, <span class="built_in">COUNT</span>(tag) <span class="keyword">from</span> news <span class="keyword">GROUP</span> <span class="keyword">BY</span> tag <span class="keyword">order</span> <span class="keyword">by</span> convert(tag <span class="keyword">using</span> utf8) <span class="keyword">collate</span> utf8_unicode_ci;</span><br></pre></td></tr></table></figure><h3 id="UPDATE"><a href="#UPDATE" class="headerlink" title="UPDATE"></a>UPDATE</h3><p><code>Update 语法</code> 语句用于修改表中的数据。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">UPDATE</span> 表名称 SET 列名称<span class="number">1</span> = 值<span class="number">1</span>, 列名称<span class="number">2</span> = 值<span class="number">2</span>, ... WHERE 条件;</span><br><span class="line">-- <span class="attribute">update</span>语句设置字段值为另一个结果取出来的字段</span><br><span class="line"><span class="attribute">UPDATE</span> user set name = (SELECT name from user1 WHERE user1 .id = <span class="number">1</span> )</span><br><span class="line"><span class="attribute">WHERE</span> id = (SELECT id from user2 WHERE user2 .name=&#x27;小苏&#x27;);</span><br><span class="line">-- 更新表 <span class="attribute">orders</span> 中 id=<span class="number">1</span> 的那一行数据更新它的 title 字段</span><br><span class="line"><span class="attribute">UPDATE</span> `orders` set title=&#x27;这里是标题&#x27; WHERE id=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><h3 id="INSERT"><a href="#INSERT" class="headerlink" title="INSERT"></a>INSERT</h3><p><code>INSERT 语法</code> 用于向表格中插入新的行。</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">INSERT</span> INTO 表名称 (列名称<span class="number">1</span>, 列名称<span class="number">2</span>, 列名称<span class="number">3</span>, ...) VALUES (值<span class="number">1</span>, 值<span class="number">2</span>, 值<span class="number">3</span>, ...);</span><br><span class="line"><span class="attribute">INSERT</span> INTO 表名称 VALUES (值<span class="number">1</span>, 值<span class="number">2</span>, 值<span class="number">3</span>, ...);</span><br><span class="line">-- 向表 <span class="attribute">Persons</span> 插入一条字段 LastName = JSLite 字段 Address = shanghai</span><br><span class="line"><span class="attribute">INSERT</span> INTO Persons (LastName, Address) VALUES (&#x27;JSLite&#x27;, &#x27;shanghai&#x27;);</span><br><span class="line">-- 向表 <span class="attribute">meeting</span> 插入 字段 a=<span class="number">1</span> 和字段 b=<span class="number">2</span></span><br><span class="line"><span class="attribute">INSERT</span> INTO meeting SET a=<span class="number">1</span>,b=<span class="number">2</span>;</span><br><span class="line">-- </span><br><span class="line">-- <span class="attribute">SQL</span>实现将一个表的数据插入到另外一个表的代码</span><br><span class="line">-- 如果只希望导入指定字段，可以用这种方法：</span><br><span class="line">-- <span class="attribute">INSERT</span> INTO 目标表 (字段<span class="number">1</span>, 字段<span class="number">2</span>, ...) SELECT 字段<span class="number">1</span>, 字段<span class="number">2</span>, ... FROM 来源表;</span><br><span class="line"><span class="attribute">INSERT</span> INTO orders (user_account_id, title) SELECT m.user_id, m.title FROM meeting m where m.id=<span class="number">1</span>;</span><br><span class="line"> </span><br><span class="line">-- 向表 <span class="attribute">charger</span> 插入一条数据，已存在就对表 charger 更新 `type`,`update_at` 字段；</span><br><span class="line"><span class="attribute">INSERT</span> INTO `charger` (`id`,`type`,`create_at`,`update_at`) VALUES (<span class="number">3</span>,<span class="number">2</span>,&#x27;<span class="number">2017</span>-<span class="number">05</span>-<span class="number">18</span> <span class="number">11</span>:<span class="number">06</span>:<span class="number">17</span>&#x27;,&#x27;<span class="number">2017</span>-<span class="number">05</span>-<span class="number">18</span> <span class="number">11</span>:<span class="number">06</span>:<span class="number">17</span>&#x27;) <span class="literal">ON</span> DUPLICATE KEY UPDATE `id`=VALUES(`id`), `type`=VALUES(`type`), `update_at`=VALUES(`update_at`);</span><br></pre></td></tr></table></figure><h3 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h3><p><code>DELETE 语法</code> 语句用于删除表中的现有记录。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> 表名称 <span class="keyword">WHERE</span> 条件;</span><br><span class="line">-- 在不删除table_name表的情况下删除所有的行，清空表。</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> table_name</span><br><span class="line">-- 或者</span><br><span class="line"><span class="keyword">DELETE</span> * <span class="keyword">FROM</span> table_name</span><br><span class="line">-- 删除 Person 表字段 LastName = <span class="string">&#x27;JSLite&#x27;</span> </span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> Person <span class="keyword">WHERE</span> LastName = <span class="string">&#x27;JSLite&#x27;</span> </span><br><span class="line">-- 删除 表meeting id 为<span class="number">2</span>和<span class="number">3</span>的两条数据</span><br><span class="line"><span class="keyword">DELETE</span> <span class="keyword">from</span> meeting <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="number">2</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure><h2 id="WHERE"><a href="#WHERE" class="headerlink" title="WHERE"></a>WHERE</h2><p><code>WHERE 语法</code> 用于仅提取满足指定条件的记录</p><figure class="highlight lasso"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名称, 列名称, <span class="params">...</span> FROM 表名称 <span class="keyword">WHERE</span> 条件<span class="number">1</span>;</span><br><span class="line">-- 从表 Persons 中选出 Year 字段大于 <span class="number">1965</span> 的数据</span><br><span class="line"><span class="keyword">SELECT</span> * FROM Persons <span class="keyword">WHERE</span> Year&gt;<span class="number">1965</span></span><br><span class="line">-- 从 Customers 表中选择 Country = Mexico 的所有数据：</span><br><span class="line"><span class="keyword">SELECT</span> * FROM Customers <span class="keyword">WHERE</span> Country=<span class="string">&#x27;Mexico&#x27;</span>;</span><br><span class="line">-- 从 Customers 表中选择 CustomerID = <span class="number">1</span> 的所有数据：</span><br><span class="line"><span class="keyword">SELECT</span> * FROM Customers <span class="keyword">WHERE</span> CustomerID=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><h2 id="AND-OR-和-NOT"><a href="#AND-OR-和-NOT" class="headerlink" title="AND, OR 和 NOT"></a>AND, OR 和 NOT</h2><p><code>WHERE</code> 子句可以与 <code>AND</code>、<code>OR</code> 和 <code>NOT</code> 运算符组合使用。</p><p><code>AND</code> 和 <code>OR</code> 运算符用于根据多个条件过滤记录：</p><ul><li>如果由 <code>AND</code> 分隔的所有条件都为 <code>TRUE</code>，则 <code>AND</code> 运算符将显示一条记录。</li><li>如果由 <code>OR</code> 分隔的任何条件为 <code>TRUE</code>，则 <code>OR</code> 运算符将显示一条记录。</li></ul><p>如果条件不为真，<code>NOT</code> 运算符将显示一条记录。</p><h3 id="AND"><a href="#AND" class="headerlink" title="AND"></a>AND</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">AND 语法</span><br><span class="line">SELECT 列名称, 列名称, ... FROM 表名称 WHERE 条件1 AND 条件2 AND 条件3 ...;</span><br><span class="line">-- 删除 meeting 表字段 </span><br><span class="line">-- id=2 并且 user_id=5 的数据  和id=3 并且 user_id=6 的数据 </span><br><span class="line">DELETE from meeting where id in (2,3) and user_id in (5,6);</span><br><span class="line"> </span><br><span class="line">-- 使用 AND 来显示所有姓为 &quot;Carter&quot; 并且名为 &quot;Thomas&quot; 的人：</span><br><span class="line">SELECT * FROM Persons WHERE FirstName=&#x27;Thomas&#x27; AND LastName=&#x27;Carter&#x27;;</span><br></pre></td></tr></table></figure><h3 id="OR"><a href="#OR" class="headerlink" title="OR"></a>OR</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">OR 语法</span><br><span class="line">SELECT 列名称1, 列名称2, ... FROM 表名称 WHERE 条件1 OR 条件2 OR 条件3 ...;</span><br><span class="line">-- 使用 OR 来显示所有姓为 &quot;Carter&quot; 或者名为 &quot;Thomas&quot; 的人：</span><br><span class="line">SELECT * FROM Persons WHERE firstname=&#x27;Thomas&#x27; OR lastname=&#x27;Carter&#x27;</span><br></pre></td></tr></table></figure><h3 id="NOT"><a href="#NOT" class="headerlink" title="NOT"></a>NOT</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">NOT 语法</span><br><span class="line">SELECT 列名称1, 列名称2, ... FROM 表名称 WHERE NOT 条件2;</span><br><span class="line">-- 从 Customers 表中选择 Country 不是 Germany 的所有字段：</span><br><span class="line">SELECT * FROM Customers WHERE NOT Country=&#x27;Germany&#x27;;</span><br></pre></td></tr></table></figure><h3 id="AND-amp-OR-amp-NOT"><a href="#AND-amp-OR-amp-NOT" class="headerlink" title="AND &amp; OR &amp; NOT"></a>AND &amp; OR &amp; NOT</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 从 Customers 表中选择所有字段，其中 Country 为 Germany 且城市必须为 Berlin 或 München（使用括号构成复杂表达式）：</span><br><span class="line">SELECT * <span class="keyword">FROM</span> Customers WHERE <span class="attribute">Country</span>=<span class="string">&#x27;Germany&#x27;</span> <span class="keyword">AND</span> (<span class="attribute">City</span>=<span class="string">&#x27;Berlin&#x27;</span> <span class="keyword">OR</span> <span class="attribute">City</span>=<span class="string">&#x27;München&#x27;</span>);</span><br><span class="line">-- 从 Customers 表中选择 Country 不是 Germany 和 <span class="keyword">NOT</span> <span class="string">&quot;USA&quot;</span> 的所有字段：</span><br><span class="line">SELECT * <span class="keyword">FROM</span> Customers WHERE <span class="keyword">NOT</span> <span class="attribute">Country</span>=<span class="string">&#x27;Germany&#x27;</span> <span class="keyword">AND</span> <span class="keyword">NOT</span> <span class="attribute">Country</span>=<span class="string">&#x27;USA&#x27;</span>;</span><br></pre></td></tr></table></figure><h2 id="ORDER-BY"><a href="#ORDER-BY" class="headerlink" title="ORDER BY"></a>ORDER BY</h2><p><code>ORDER BY 语法</code> 用于按升序或降序对结果集进行排序。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名称<span class="number">1</span>, 列名称<span class="number">2</span>, ... <span class="keyword">FROM</span> 表名称 <span class="keyword">ORDER</span> <span class="keyword">BY</span> 列名称<span class="number">1</span>, 列名称<span class="number">2</span>, ... <span class="keyword">ASC</span>|<span class="keyword">DESC</span>;</span><br></pre></td></tr></table></figure><p>默认按 <code>ASC</code> 升序对记录进行排序。要按降序对记录进行排序，请使用 <code>DESC</code> 关键字。</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 从 Customers 表中选择所有字段，按 Country 列排序：</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Customers <span class="keyword">ORDER</span> <span class="keyword">BY</span> Country;</span><br><span class="line"><span class="comment">-- 从 Orders 表中选择 Company, OrderNumber 字段，按 Company 列排序：</span></span><br><span class="line"><span class="keyword">SELECT</span> Company, OrderNumber <span class="keyword">FROM</span> Orders <span class="keyword">ORDER</span> <span class="keyword">BY</span> Company</span><br><span class="line"><span class="comment">-- 从 Orders 表中选择 Company, OrderNumber 字段，按 Company 列降序排序：</span></span><br><span class="line"><span class="keyword">SELECT</span> Company, OrderNumber <span class="keyword">FROM</span> Orders <span class="keyword">ORDER</span> <span class="keyword">BY</span> Company <span class="keyword">DESC</span></span><br><span class="line"><span class="comment">-- 从 Orders 表中选择 Company, OrderNumber 字段，按 Company 列降序排序，并 OrderNumber 以顺序显示：</span></span><br><span class="line"><span class="keyword">SELECT</span> Company, OrderNumber <span class="keyword">FROM</span> Orders <span class="keyword">ORDER</span> <span class="keyword">BY</span> Company <span class="keyword">DESC</span>, OrderNumber <span class="keyword">ASC</span></span><br></pre></td></tr></table></figure><h2 id="GROUP-BY"><a href="#GROUP-BY" class="headerlink" title="GROUP BY"></a>GROUP BY</h2><p><code>GROUP BY 语法</code> 将具有相同值的行分组到汇总行中</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名称(s)</span><br><span class="line"><span class="keyword">FROM</span> 表名称</span><br><span class="line"><span class="keyword">WHERE</span> 条件</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> 列名称(s)</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> 列名称(s);</span><br><span class="line">-- 列出了 Orders 每个发货人 Shippers 发送的订单 Orders 数量</span><br><span class="line"><span class="keyword">SELECT</span> Shippers.ShipperName, <span class="built_in">COUNT</span>(Orders.OrderID) <span class="keyword">AS</span> NumberOfOrders <span class="keyword">FROM</span> Orders</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> Shippers <span class="keyword">ON</span> Orders.ShipperID = Shippers.ShipperID</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> ShipperName;</span><br></pre></td></tr></table></figure><h2 id="IN"><a href="#IN" class="headerlink" title="IN"></a>IN</h2><p><code>IN 语法</code> 运算符允许您在 WHERE 子句中指定多个值。运算符是多个 OR 条件的简写。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名称(s) <span class="keyword">FROM</span> 表名称 <span class="keyword">WHERE</span> 列名称 <span class="keyword">IN</span> (值<span class="number">1</span>, 值<span class="number">2</span>, ...);</span><br><span class="line"><span class="keyword">SELECT</span> 列名称(s) <span class="keyword">FROM</span> 表名称 <span class="keyword">WHERE</span> 列名称 <span class="keyword">IN</span> (<span class="keyword">SELECT</span> STATEMENT);</span><br><span class="line">-- 从表 Persons 选取 字段 LastName 等于 Adams、Carter</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Persons <span class="keyword">WHERE</span> LastName <span class="keyword">IN</span> (<span class="string">&#x27;Adams&#x27;</span>,<span class="string">&#x27;Carter&#x27;</span>)</span><br><span class="line">-- 从表 Customers 选取 Country 值为 <span class="string">&#x27;Germany&#x27;</span>, <span class="string">&#x27;France&#x27;</span>, <span class="string">&#x27;UK&#x27;</span> 的所有数据</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Customers <span class="keyword">WHERE</span> Country <span class="keyword">IN</span> (<span class="string">&#x27;Germany&#x27;</span>, <span class="string">&#x27;France&#x27;</span>, <span class="string">&#x27;UK&#x27;</span>);</span><br><span class="line">-- 从表 Customers 选取 Country 值不为 &#x27;Germany&#x27;, &#x27;France&#x27;, &#x27;UK&#x27; 的所有数据</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Customers <span class="keyword">WHERE</span> Country <span class="keyword">NOT</span> <span class="keyword">IN</span> (<span class="string">&#x27;Germany&#x27;</span>, <span class="string">&#x27;France&#x27;</span>, <span class="string">&#x27;UK&#x27;</span>);</span><br><span class="line">-- 从表 Customers 选取与 Suppliers 表 Country 字段相同的所有数据：</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Customers <span class="keyword">WHERE</span> Country <span class="keyword">IN</span> (<span class="keyword">SELECT</span> Country <span class="keyword">FROM</span> Suppliers);</span><br></pre></td></tr></table></figure><h2 id="UNION"><a href="#UNION" class="headerlink" title="UNION"></a>UNION</h2><p><code>UNION 语法</code> 操作符用于合并两个或多个 SELECT 语句的结果集</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名称(s) <span class="keyword">FROM</span> 表名称<span class="number">1</span></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> 列名称(s) <span class="keyword">FROM</span> 表名称<span class="number">2</span>;</span><br><span class="line">-- 列出所有在中国表（Employees_China）和美国（Employees_USA）的不同的雇员名</span><br><span class="line"><span class="keyword">SELECT</span> E_Name <span class="keyword">FROM</span> Employees_China <span class="keyword">UNION</span> <span class="keyword">SELECT</span> E_Name <span class="keyword">FROM</span> Employees_USA</span><br><span class="line"> </span><br><span class="line">-- 列出 meeting 表中的 pic_url，</span><br><span class="line">-- station 表中的 number_station 别名设置成 pic_url 避免字段不一样报错</span><br><span class="line">-- 按更新时间排序</span><br><span class="line"><span class="keyword">SELECT</span> id,pic_url <span class="keyword">FROM</span> meeting <span class="keyword">UNION</span> <span class="keyword">ALL</span> <span class="keyword">SELECT</span> id,number_station <span class="keyword">AS</span> pic_url <span class="keyword">FROM</span> station  <span class="keyword">ORDER</span> <span class="keyword">BY</span> update_at;</span><br><span class="line">-- 通过 UNION 语法同时查询了 products 表 和 comments 表的总记录数，并且按照 count 排序</span><br><span class="line"><span class="keyword">SELECT</span> <span class="string">&#x27;product&#x27;</span> <span class="keyword">AS</span> <span class="built_in">type</span>, <span class="built_in">count</span>(*) <span class="keyword">as</span> <span class="built_in">count</span> <span class="keyword">FROM</span> <span class="symbol">`products`</span> <span class="keyword">union</span> <span class="keyword">select</span> <span class="string">&#x27;comment&#x27;</span> <span class="keyword">as</span> <span class="built_in">type</span>, <span class="built_in">count</span>(*) <span class="keyword">as</span> <span class="built_in">count</span> <span class="keyword">FROM</span> <span class="symbol">`comments`</span> <span class="keyword">order</span> <span class="keyword">by</span> <span class="built_in">count</span>;</span><br></pre></td></tr></table></figure><h2 id="BETWEEN"><a href="#BETWEEN" class="headerlink" title="BETWEEN"></a>BETWEEN</h2><p><code>BETWEEN 语法</code> 运算符选择给定范围内的值</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名称(s) <span class="keyword">FROM</span> 表名称 <span class="keyword">WHERE</span> 列名称 <span class="keyword">BETWEEN</span> 值<span class="number">1</span> <span class="keyword">AND</span> 值<span class="number">2</span>;</span><br><span class="line">-- 选择 Products 表中 Price 字段在 10 到 <span class="number">20</span> 之间的所有：</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Products <span class="keyword">WHERE</span> Price <span class="keyword">BETWEEN</span> <span class="number">10</span> <span class="keyword">AND</span> <span class="number">20</span>;</span><br></pre></td></tr></table></figure><h2 id="AS"><a href="#AS" class="headerlink" title="AS"></a>AS</h2><p><code>AS 语法</code> 用于为表或表中的列(字段)提供临时名称(别名)。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名称 <span class="keyword">AS</span> 别名 <span class="keyword">FROM</span> 表名称;</span><br><span class="line"><span class="keyword">SELECT</span> 列名称(s) <span class="keyword">FROM</span> 表名称 <span class="keyword">AS</span> 别名;</span><br><span class="line">-- 创建两个别名，一个用于 CustomerID 的 ID 别名列，一个用于 CustomerName  的 Customer 别名列：</span><br><span class="line"><span class="keyword">SELECT</span> CustomerID <span class="keyword">AS</span> ID, CustomerName <span class="keyword">AS</span> Customer <span class="keyword">FROM</span> Customers;</span><br><span class="line"> </span><br><span class="line">-- 这句意思是查找所有 Employee 表里面的数据，并把 Employee 表格命名为 emp。</span><br><span class="line">-- 当你命名一个表之后，你可以在下面用 emp 代替 Employee.</span><br><span class="line">-- 例如 <span class="keyword">SELECT</span> * <span class="keyword">FROM</span> emp.</span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> Employee <span class="keyword">AS</span> emp</span><br><span class="line"> </span><br><span class="line">-- 列出表 Orders 字段 OrderPrice 列最大值，</span><br><span class="line">-- 结果集列不显示 OrderPrice 显示 LargestOrderPrice</span><br><span class="line"><span class="keyword">SELECT</span> <span class="built_in">MAX</span>(OrderPrice) <span class="keyword">AS</span> LargestOrderPrice <span class="keyword">FROM</span> Orders</span><br><span class="line"> </span><br><span class="line">-- 显示表 users_profile 中的 name 列</span><br><span class="line"><span class="keyword">SELECT</span> t.name <span class="keyword">from</span> (<span class="keyword">SELECT</span> * <span class="keyword">from</span> users_profile a) <span class="keyword">AS</span> t;</span><br><span class="line"> </span><br><span class="line">-- 表 user_accounts 命名别名 ua，表 users_profile 命名别名 up</span><br><span class="line">-- 满足条件 表 user_accounts 字段 id 等于 表 users_profile 字段 user_id</span><br><span class="line">-- 结果集只显示mobile、name两列</span><br><span class="line"><span class="keyword">SELECT</span> ua.mobile,up.name <span class="keyword">FROM</span> user_accounts <span class="keyword">as</span> ua <span class="keyword">INNER</span> <span class="keyword">JOIN</span> users_profile <span class="keyword">as</span> up <span class="keyword">ON</span> ua.id = up.user_id;</span><br></pre></td></tr></table></figure><h2 id="JOIN"><a href="#JOIN" class="headerlink" title="JOIN"></a>JOIN</h2><p>JOIN 子句用于根据两个或多个表之间的相关列组合来自两个或多个表的行。</p><ul><li><code>JOIN</code>: 如果表中有至少一个匹配，则返回行</li><li><code>INNER JOIN</code>:在表中存在至少一个匹配时，INNER JOIN 关键字返回行。</li><li><code>LEFT JOIN</code>: 即使右表中没有匹配，也从左表返回所有的行</li><li><code>RIGHT JOIN</code>: 即使左表中没有匹配，也从右表返回所有的行</li><li><code>FULL JOIN</code>: 只要其中一个表中存在匹配，就返回行(MySQL 是不支持的，通过 <code>LEFT JOIN + UNION + RIGHT JOIN</code> 的方式 来实现)</li></ul><h3 id="INNER-JOIN"><a href="#INNER-JOIN" class="headerlink" title="INNER JOIN"></a>INNER JOIN</h3><p><code>INNER JOIN 语法</code> 选择在两个表中具有匹配值的记录。</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名称(s)</span><br><span class="line"><span class="keyword">FROM</span> 表<span class="number">1</span></span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> 表<span class="number">2</span></span><br><span class="line"><span class="keyword">ON</span> 表<span class="number">1.</span>列名称 = 表<span class="number">2.</span>列名称;</span><br><span class="line">-- 选择包含 Customers 的所有 Orders：</span><br><span class="line"><span class="keyword">SELECT</span> Orders.OrderID, Customers.CustomerName <span class="keyword">FROM</span> Orders <span class="keyword">INNER</span> <span class="keyword">JOIN</span> Customers <span class="keyword">ON</span> Orders.CustomerID = Customers.CustomerID;</span><br><span class="line"> </span><br><span class="line">-- [JOIN 三张表] 选择包含 Customers 和 Shippers 的所有 Orders：</span><br><span class="line"><span class="keyword">SELECT</span> Orders.OrderID, Customers.CustomerName, Shippers.ShipperName</span><br><span class="line"><span class="keyword">FROM</span> ((Orders</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> Customers <span class="keyword">ON</span> Orders.CustomerID = Customers.CustomerID)</span><br><span class="line"><span class="keyword">INNER</span> <span class="keyword">JOIN</span> Shippers <span class="keyword">ON</span> Orders.ShipperID = Shippers.ShipperID);</span><br></pre></td></tr></table></figure><h3 id="LEFT-JOIN"><a href="#LEFT-JOIN" class="headerlink" title="LEFT JOIN"></a>LEFT JOIN</h3><p><code>LEFT JOIN 语法</code> 返回左表 (表1) 中的所有记录，以及右表 (表2) 中的匹配记录</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名称(s)</span><br><span class="line"><span class="keyword">FROM</span> 表<span class="number">1</span></span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> 表<span class="number">2</span></span><br><span class="line"><span class="keyword">ON</span> 表<span class="number">1.</span>列名称 = 表<span class="number">2.</span>列名称;</span><br><span class="line">-- 将选择所有 Customers 以及他们可能拥有的任何 Orders：</span><br><span class="line"><span class="keyword">SELECT</span> Customers.CustomerName, Orders.OrderID <span class="keyword">FROM</span> Customers</span><br><span class="line"><span class="keyword">LEFT</span> <span class="keyword">JOIN</span> Orders <span class="keyword">ON</span> Customers.CustomerID = Orders.CustomerID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> Customers.CustomerName;</span><br></pre></td></tr></table></figure><h3 id="RIGHT-JOIN"><a href="#RIGHT-JOIN" class="headerlink" title="RIGHT JOIN"></a>RIGHT JOIN</h3><p><code>RIGHT JOIN 语法</code> 返回右表 (表2) 中的所有记录，以及左表 (表1) 中的匹配记录</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名称(s)</span><br><span class="line"><span class="keyword">FROM</span> 表<span class="number">1</span></span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> 表<span class="number">2</span></span><br><span class="line"><span class="keyword">ON</span> 表<span class="number">1.</span>列名称 = 表<span class="number">2.</span>列名称;</span><br><span class="line">-- 返回所有 Employees 以及他们可能下的任何 Orders：</span><br><span class="line"><span class="keyword">SELECT</span> Orders.OrderID, Employees.LastName, Employees.FirstName <span class="keyword">FROM</span> Orders</span><br><span class="line"><span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> Employees <span class="keyword">ON</span> Orders.EmployeeID = Employees.EmployeeID</span><br><span class="line"><span class="keyword">ORDER</span> <span class="keyword">BY</span> Orders.OrderID;</span><br></pre></td></tr></table></figure><h3 id="FULL-OUTER-JOIN"><a href="#FULL-OUTER-JOIN" class="headerlink" title="FULL OUTER JOIN"></a>FULL OUTER JOIN</h3><p><code>FULL OUTER JOIN 语法</code> 当左（表1）或右（表2）表记录中存在匹配时，关键字返回所有记录</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> 列名称(s)</span><br><span class="line"><span class="keyword">FROM</span> 表<span class="number">1</span></span><br><span class="line"><span class="keyword">FULL</span> <span class="keyword">OUTER</span> <span class="keyword">JOIN</span> 表<span class="number">2</span></span><br><span class="line"><span class="keyword">ON</span> 表<span class="number">1.</span>列名称 = 表<span class="number">2.</span>列名称</span><br><span class="line"><span class="keyword">WHERE</span> 条件;</span><br></pre></td></tr></table></figure><h2 id="SQL-函数"><a href="#SQL-函数" class="headerlink" title="SQL 函数"></a>SQL 函数</h2><h3 id="COUNT"><a href="#COUNT" class="headerlink" title="COUNT"></a>COUNT</h3><blockquote><p><code>COUNT 语法</code> 返回与指定条件匹配的行数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT COUNT(列名称) FROM 表名称 WHERE 条件;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">-- 表 Store_Information 有几笔 store_name 栏不是空白的资料。</span><br><span class="line">-- &quot;IS NOT NULL&quot; 是 &quot;这个栏位不是空白&quot; 的意思。</span><br><span class="line">SELECT COUNT (Store_Name) FROM Store_Information WHERE Store_Name IS NOT NULL; </span><br><span class="line">-- 获取 Persons 表的总数</span><br><span class="line">SELECT COUNT(1) AS totals FROM Persons;</span><br><span class="line">-- 获取表 station 字段 user_id 相同的总数</span><br><span class="line">select user_id, count(*) as totals from station group by user_id;</span><br></pre></td></tr></table></figure><h3 id="AVG"><a href="#AVG" class="headerlink" title="AVG"></a>AVG</h3><blockquote><p><code>AVG 语法</code> 返回数值列的平均值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT AVG(列名称) FROM 表名称 WHERE 条件;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 查找 Products 表中所的 Price 平均值：</span><br><span class="line">SELECT AVG(Price) FROM Products;</span><br></pre></td></tr></table></figure><h3 id="SUM"><a href="#SUM" class="headerlink" title="SUM"></a>SUM</h3><blockquote><p><code>SUM 语法</code> 返回数值列的总和</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT SUM(列名称) FROM 表名称 WHERE 条件;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 查找 OrderDetails 表中 Quantity 字段的总和：</span><br><span class="line">SELECT SUM(Quantity) FROM OrderDetails;</span><br></pre></td></tr></table></figure><h3 id="MAX"><a href="#MAX" class="headerlink" title="MAX"></a>MAX</h3><blockquote><p><code>MAX 语法</code> 返回所选列的最大值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT MIN(列名称) FROM 表名称 WHERE 条件;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-- 列出表 Orders 字段 OrderPrice 列最大值，</span><br><span class="line">-- 结果集列不显示 OrderPrice 显示 LargestOrderPrice</span><br><span class="line">SELECT MAX(OrderPrice) AS LargestOrderPrice FROM Orders</span><br></pre></td></tr></table></figure><h3 id="MIN"><a href="#MIN" class="headerlink" title="MIN"></a>MIN</h3><blockquote><p><code>MIN 语法</code> 返回所选列的最小值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT MIN(列名称) FROM 表名称 WHERE 条件;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 查找 Products 表中 Price 字段最小值，并命名 SmallestPrice 别名：</span><br><span class="line">SELECT MIN(Price) AS SmallestPrice FROM Products;</span><br></pre></td></tr></table></figure><h2 id="触发器"><a href="#触发器" class="headerlink" title="触发器"></a>触发器</h2><blockquote><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create trigger &lt;触发器名称&gt;  </span><br><span class="line">&#123; before | after&#125;         -- 之前或者之后出发  </span><br><span class="line">insert | update | delete  -- 指明了激活触发程序的语句的类型  </span><br><span class="line">on &lt;表名&gt;                  -- 操作哪张表  </span><br><span class="line">for each row              -- 触发器的执行间隔，for each row 通知触发器每隔一行执行一次动作，而不是对整个表执行一次。  </span><br><span class="line">&lt;触发器SQL语句&gt;</span><br></pre></td></tr></table></figure></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">delimiter $</span><br><span class="line">CREATE TRIGGER set_userdate BEFORE INSERT </span><br><span class="line">on `message`</span><br><span class="line">for EACH ROW</span><br><span class="line">BEGIN</span><br><span class="line">  set @statu = new.status; -- 声明复制变量 statu</span><br><span class="line">  if @statu = 0 then       -- 判断 statu 是否等于 0</span><br><span class="line">    UPDATE `user_accounts` SET status=1 WHERE openid=NEW.openid;</span><br><span class="line">  end if;</span><br><span class="line">END</span><br><span class="line">$</span><br><span class="line">DELIMITER ; -- 恢复结束符号</span><br></pre></td></tr></table></figure><p>OLD和NEW不区分大小写</p><ul><li>NEW 用NEW.col_name，没有旧行。在DELETE触发程序中，仅能使用OLD.col_name，没有新行。</li><li>OLD 用OLD.col_name来引用更新前的某一行的列</li></ul><h2 id="添加索引"><a href="#添加索引" class="headerlink" title="添加索引"></a>添加索引</h2><h3 id="普通索引-INDEX"><a href="#普通索引-INDEX" class="headerlink" title="普通索引(INDEX)"></a>普通索引(INDEX)</h3><blockquote><p>语法：ALTER TABLE <code>表名字</code> ADD INDEX 索引名字 ( <code>字段名字</code> )</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">-- –直接创建索引</span><br><span class="line">CREATE INDEX index_user ON user(title)</span><br><span class="line">-- –修改表结构的方式添加索引</span><br><span class="line">ALTER TABLE table_name ADD INDEX index_name ON (column(length))</span><br><span class="line">-- 给 user 表中的 name 字段 添加普通索引(INDEX)</span><br><span class="line">ALTER TABLE `user` ADD INDEX index_name (name)</span><br><span class="line">-- –创建表的时候同时创建索引</span><br><span class="line">CREATE TABLE `user` (</span><br><span class="line">    `id` int(11) NOT NULL AUTO_INCREMENT ,</span><br><span class="line">    `title` char(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL ,</span><br><span class="line">    `content` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL ,</span><br><span class="line">    `time` int(10) NULL DEFAULT NULL ,</span><br><span class="line">    PRIMARY KEY (`id`),</span><br><span class="line">    INDEX index_name (title(length))</span><br><span class="line">)</span><br><span class="line">-- –删除索引</span><br><span class="line">DROP INDEX index_name ON table</span><br></pre></td></tr></table></figure><h3 id="主键索引-PRIMARY-key"><a href="#主键索引-PRIMARY-key" class="headerlink" title="主键索引(PRIMARY key)"></a>主键索引(PRIMARY key)</h3><blockquote><p>语法：ALTER TABLE <code>表名字</code> ADD PRIMARY KEY ( <code>字段名字</code> )</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 给 user 表中的 id字段 添加主键索引(PRIMARY key)</span><br><span class="line">ALTER TABLE `user` ADD PRIMARY key (id);</span><br></pre></td></tr></table></figure><h3 id="唯一索引-UNIQUE"><a href="#唯一索引-UNIQUE" class="headerlink" title="唯一索引(UNIQUE)"></a>唯一索引(UNIQUE)</h3><blockquote><p>语法：ALTER TABLE <code>表名字</code> ADD UNIQUE (<code>字段名字</code>)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 给 user 表中的 creattime 字段添加唯一索引(UNIQUE)</span><br><span class="line">ALTER TABLE `user` ADD UNIQUE (creattime);</span><br></pre></td></tr></table></figure><h3 id="全文索引-FULLTEXT"><a href="#全文索引-FULLTEXT" class="headerlink" title="全文索引(FULLTEXT)"></a>全文索引(FULLTEXT)</h3><blockquote><p>语法：ALTER TABLE <code>表名字</code> ADD FULLTEXT (<code>字段名字</code>)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 给 user 表中的 description 字段添加全文索引(FULLTEXT)</span><br><span class="line">ALTER TABLE `user` ADD FULLTEXT (description);</span><br></pre></td></tr></table></figure><h3 id="添加多列索引"><a href="#添加多列索引" class="headerlink" title="添加多列索引"></a>添加多列索引</h3><blockquote><p>语法： ALTER TABLE <code>table_name</code> ADD INDEX index_name ( <code>column1</code>, <code>column2</code>, <code>column3</code>)</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 给 user 表中的 name、city、age 字段添加名字为name_city_age的普通索引(INDEX)</span><br><span class="line">ALTER TABLE user ADD INDEX name_city_age (name(10),city,age); </span><br></pre></td></tr></table></figure><h3 id="建立索引的时机"><a href="#建立索引的时机" class="headerlink" title="建立索引的时机"></a>建立索引的时机</h3><p>在 <code>WHERE</code>和 <code>JOIN</code>中出现的列需要建立索引，但也不完全如此：</p><ul><li>MySQL只对 <code>&lt;</code>，<code>&lt;=</code>，<code>=</code>，<code>&gt;</code>，<code>&gt;=</code>，<code>BETWEEN</code>，<code>IN</code>使用索引</li><li>某些时候的 <code>LIKE</code>也会使用索引。</li><li>在 <code>LIKE</code>以通配符%和_开头作查询时，MySQL不会使用索引。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-- 此时就需要对city和age建立索引，</span><br><span class="line">-- 由于mytable表的userame也出现在了JOIN子句中，也有对它建立索引的必要。</span><br><span class="line">SELECT t.Name  </span><br><span class="line">FROM mytable t LEFT JOIN mytable m ON t.Name=m.username </span><br><span class="line">WHERE m.age=20 AND m.city=&#x27;上海&#x27;;</span><br><span class="line"></span><br><span class="line">SELECT * FROM mytable WHERE username like&#x27;admin%&#x27;; -- 而下句就不会使用：</span><br><span class="line">SELECT * FROM mytable WHERE Name like&#x27;%admin&#x27;; -- 因此，在使用LIKE时应注意以上的区别。</span><br></pre></td></tr></table></figure><p>索引的注意事项</p><ul><li>索引不会包含有NULL值的列</li><li>使用短索引</li><li>不要在列上进行运算 索引会失效</li></ul><h2 id="创建后表的修改"><a href="#创建后表的修改" class="headerlink" title="创建后表的修改"></a>创建后表的修改</h2><h3 id="添加列"><a href="#添加列" class="headerlink" title="添加列"></a>添加列</h3><blockquote><p>语法：<code>alter table 表名 add 列名 列数据类型 [after 插入位置];</code></p></blockquote><p>示例:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">-- 在表students的最后追加列 address: </span><br><span class="line">alter table students add address char(60);</span><br><span class="line">-- 在名为 age 的列后插入列 birthday: </span><br><span class="line">alter table students add birthday date after age;</span><br><span class="line">-- 在名为 number_people 的列后插入列 weeks: </span><br><span class="line">alter table students add column `weeks` varchar(5) not null default &quot;&quot; after `number_people`;</span><br></pre></td></tr></table></figure><h3 id="修改列"><a href="#修改列" class="headerlink" title="修改列"></a>修改列</h3><blockquote><p>语法：<code>alter table 表名 change 列名称 列新名称 新数据类型;</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">-- 将表 tel 列改名为 telphone: </span><br><span class="line">alter table students change tel telphone char(13) default &quot;-&quot;;</span><br><span class="line">-- 将 name 列的数据类型改为 char(16): </span><br><span class="line">alter table students change name name char(16) not null;</span><br><span class="line">-- 修改 COMMENT 前面必须得有类型属性</span><br><span class="line">alter table students change name name char(16) COMMENT &#x27;这里是名字&#x27;;</span><br><span class="line">-- 修改列属性的时候 建议使用modify,不需要重建表</span><br><span class="line">-- change用于修改列名字，这个需要重建表</span><br><span class="line">alter table meeting modify `weeks` varchar(20) NOT NULL DEFAULT &#x27;&#x27; COMMENT &#x27;开放日期 周一到周日：0~6，间隔用英文逗号隔开&#x27;;</span><br><span class="line">-- `user`表的`id`列，修改成字符串类型长度50，不能为空，`FIRST`放在第一列的位置</span><br><span class="line">alter table `user` modify COLUMN `id` varchar(50) NOT NULL FIRST ;</span><br></pre></td></tr></table></figure><h3 id="删除列"><a href="#删除列" class="headerlink" title="删除列"></a>删除列</h3><blockquote><p>语法：<code>alter table 表名 drop 列名称;</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 删除表students中的 birthday 列: </span><br><span class="line">alter table students drop birthday;</span><br></pre></td></tr></table></figure><h3 id="重命名表"><a href="#重命名表" class="headerlink" title="重命名表"></a>重命名表</h3><blockquote><p>语法：<code>alter table 表名 rename 新表名;</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 重命名 students 表为 workmates: </span><br><span class="line">alter table students rename workmates;</span><br></pre></td></tr></table></figure><h3 id="清空表数据"><a href="#清空表数据" class="headerlink" title="清空表数据"></a>清空表数据</h3><blockquote><p>方法一：<code>delete from 表名;</code> 方法二：<code>truncate table &quot;表名&quot;;</code></p></blockquote><ul><li><code>DELETE:</code>1. DML语言;2. 可以回退;3. 可以有条件的删除;</li><li><code>TRUNCATE:</code>1. DDL语言;2. 无法回退;3. 默认所有的表内容都删除;4. 删除速度比delete快。</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">-- 清空表为 workmates 里面的数据，不删除表。 </span><br><span class="line">delete from workmates;</span><br><span class="line">-- 删除workmates表中的所有数据，且无法恢复</span><br><span class="line">truncate table workmates;</span><br></pre></td></tr></table></figure><h3 id="删除整张表"><a href="#删除整张表" class="headerlink" title="删除整张表"></a>删除整张表</h3><blockquote><p>语法：<code>drop table 表名;</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 删除 workmates 表: </span><br><span class="line">drop table workmates;</span><br></pre></td></tr></table></figure><h3 id="删除整个数据库"><a href="#删除整个数据库" class="headerlink" title="删除整个数据库"></a>删除整个数据库</h3><blockquote><p>语法：<code>drop database 数据库名;</code></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-- 删除 samp_db 数据库: </span><br><span class="line">drop database samp_db;</span><br></pre></td></tr></table></figure><h2 id="其它实例"><a href="#其它实例" class="headerlink" title="其它实例"></a>其它实例</h2><h3 id="SQL删除重复记录"><a href="#SQL删除重复记录" class="headerlink" title="SQL删除重复记录"></a>SQL删除重复记录</h3><p><a href="http://www.xiangguo.li/sql_and_nosql/2015/01/01/sql">转载</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">-- 查找表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断</span><br><span class="line">select * from people where peopleId in (select peopleId from people group by peopleId having count(peopleId) &gt; 1)</span><br><span class="line">-- 删除表中多余的重复记录，重复记录是根据单个字段（peopleId）来判断，只留有rowid最小的记录</span><br><span class="line">delete from people </span><br><span class="line">where peopleId in (select peopleId from people group by peopleId having count(peopleId) &gt; 1)</span><br><span class="line">and rowid not in (select min(rowid) from people group by peopleId having count(peopleId )&gt;1)</span><br><span class="line">-- 查找表中多余的重复记录（多个字段）</span><br><span class="line">select * from vitae a</span><br><span class="line">where (a.peopleId,a.seq) in (select peopleId,seq from vitae group by peopleId,seq having count(*) &gt; 1)</span><br><span class="line">-- 删除表中多余的重复记录（多个字段），只留有rowid最小的记录</span><br><span class="line">delete from vitae a</span><br><span class="line">where (a.peopleId,a.seq) in (select peopleId,seq from vitae group by peopleId,seq having count(*) &gt; 1) and rowid not in (select min(rowid) from vitae group by peopleId,seq having count(*)&gt;1)</span><br><span class="line">-- 查找表中多余的重复记录（多个字段），不包含rowid最小的记录</span><br><span class="line">select * from vitae a</span><br><span class="line">where (a.peopleId,a.seq) in (select peopleId,seq from vitae group by peopleId,seq having count(*) &gt; 1) and rowid not in (select min(rowid) from vitae group b</span><br></pre></td></tr></table></figure><p>参考：<strong><a href="https://github.com/jaywcjlove/mysql-tutorial">mysql-tutorial</a></strong></p>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>钉钉直播回放视频抓包</title>
      <link href="/posts/e62d332.html"/>
      <url>/posts/e62d332.html</url>
      
        <content type="html"><![CDATA[<p>本教程仅供学习研究使用！！！</p><p>适用于2021.6月之后的直播视频</p><h2 id="1：安装Fiddler和下载m3u8下载器"><a href="#1：安装Fiddler和下载m3u8下载器" class="headerlink" title="1：安装Fiddler和下载m3u8下载器"></a>1：安装Fiddler和下载m3u8下载器</h2><p>Fiddler官网链接：<a href="https://www.telerik.com/fiddler">https://www.telerik.com/fiddler</a></p><p>m3u8下载地址：<a href="https://github.com/nilaoda/N_m3u8DL-CLI/releases/download/3.0.2/N_m3u8DL-CLI_v3.0.2_with_ffmpeg_and_SimpleG.zip">下载链接</a></p><h2 id="2：设置Fiddler捕捉HTTPS流量"><a href="#2：设置Fiddler捕捉HTTPS流量" class="headerlink" title="2：设置Fiddler捕捉HTTPS流量"></a>2：设置Fiddler捕捉HTTPS流量</h2><p>点击Tools，选择Options…</p><p><img src="https://s1.ax1x.com/2022/08/14/vUbdzQ.png" alt="img"></p><p><img src="https://s1.ax1x.com/2022/08/14/vUb6oV.png" alt="img">会安装证书点击同意</p><h2 id="3：中间人注入"><a href="#3：中间人注入" class="headerlink" title="3：中间人注入"></a>3：中间人注入</h2><p><img src="https://s1.ax1x.com/2022/08/14/vUbWz4.png" alt="img">选中 Fiddler Script。</p><p><img src="https://s1.ax1x.com/2022/08/14/vUbTdx.png" alt="img">选择 OnBeforeResponse，会自动定位。</p><p><img src="https://s1.ax1x.com/2022/08/14/vUbqJO.png" alt="img">粘贴到这个大括号后边</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">var sToInsert = &quot;<span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&#x27;https://cdn.jsdelivr.net/gh/Tencent/vConsole@3.8.1/dist/vconsole.min.js&#x27;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"><span class="keyword">var</span> vConsole = <span class="keyword">new</span> <span class="title class_">VConsole</span>();</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span>&quot;</span><br><span class="line">oSession.utilDecodeResponse();</span><br><span class="line">oSession.utilReplaceOnceInResponse(&#x27;<span class="tag">&lt;/<span class="name">head</span>&gt;</span>&#x27;, sToInsert + &#x27;<span class="tag">&lt;/<span class="name">head</span>&gt;</span>&#x27;, 0);</span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/08/14/vUbLWD.png" alt="img">保存更改</p><h2 id="4、监测流量"><a href="#4、监测流量" class="headerlink" title="4、监测流量"></a>4、监测流量</h2><p>打开钉钉回放页面，发现右下角多了 vConsole，一个绿色的按钮。点击这个按钮，在首页command处填入以下代码：</p><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vConsole.showTab(<span class="string">&quot;network&quot;</span>)<span class="comment">;</span></span><br></pre></td></tr></table></figure><p><img src="https://s1.ax1x.com/2022/08/14/vUbXSe.png" alt="img"></p><p>找到带有m3u8的那一条点击</p><p><img src="https://s1.ax1x.com/2022/08/14/vUbvyd.png" alt="img">找到带有m3u8的栏目</p><p>复制URL内的所有内容</p><p><img src="https://s1.ax1x.com/2022/08/14/vUq9TP.png" alt="img">复制</p><h2 id="5-下载视频"><a href="#5-下载视频" class="headerlink" title="5:下载视频"></a>5:下载视频</h2><p>把此链接放在m3u8下载器中</p><p><img src="https://s1.ax1x.com/2022/08/14/vUqFfS.png" alt="img"></p><p>此文章参考自<a href="https://yzxoi.top/">https://yzxoi.top/</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 网络抓包 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python</title>
      <link href="/posts/a4d4b8b8.html"/>
      <url>/posts/a4d4b8b8.html</url>
      
        <content type="html"><![CDATA[<h2 id="变量以及类型"><a href="#变量以及类型" class="headerlink" title="变量以及类型"></a>变量以及类型</h2><p>Python中的数据类型很多，而且也允许我们自定义新的数据类型，先介绍几种常用的数据类型</p><p>整型：Python中可以处理任意大小的整数（Python 2.x中有int和long两种类型的整数，但这种区分对Python来说意义不大，因此在Python 3.x中整数只有int这一种了），而且支持二进制（如0b100，换算成十进制是4）、八进制（如0o100，换算成十进制是64）、十进制（100）和十六进制（0x100，换算成十进制是256）的表示法。</p><p>浮点型：浮点数也就是小数，之所以称为浮点数，是因为按照科学记数法表示时，一个浮点数的小数点位置是可变的，浮点数除了数学写法（如<code>123.456</code>）之外还支持科学计数法（如<code>1.23456e2</code>）。</p><p>字符串型：字符串是以单引号或双引号括起来的任意文本，比如’hello’和”hello”,字符串还有原始字符串表示法、字节字符串表示法、Unicode字符串表示法，而且可以书写成多行的形式（用三个单引号或三个双引号开头，三个单引号或三个双引号结尾）。</p><p>布尔型：布尔值只有True、False两种值，要么是True，要么是False，在Python中，可以直接用True、False表示布尔值（请注意大小写），也可以通过布尔运算计算出来（例如3 &lt; 5会产生布尔值True，而2 == 1会产生布尔值False）。</p><p>复数型：形如3+5j，跟数学上的复数表示一样，唯一不同的是虚部的i换成了j。实际上，这个类型并不常用，了解一下就可以了。</p><h2 id="变量命名"><a href="#变量命名" class="headerlink" title="变量命名"></a>变量命名</h2><ul><li>硬性规则：<ul><li>变量名由字母（广义的Unicode字符，不包括特殊字符）、数字和下划线构成，数字不能开头。</li><li>大小写敏感（大写的<code>a</code>和小写的<code>A</code>是两个不同的变量）。</li><li>不要跟关键字（有特殊含义的单词，后面会讲到）和系统保留字（如函数、模块等的名字）冲突。</li></ul></li><li>PEP 8要求：<ul><li>用小写字母拼写，多个单词用下划线连接。</li><li>受保护的实例属性用单个下划线开头。</li><li>私有的实例属性用两个下划线开头。</li></ul></li></ul><h2 id="变量的使用"><a href="#变量的使用" class="headerlink" title="变量的使用"></a>变量的使用</h2><p>在Python中可以使用<code>type()</code>函数对变量的类型进行检查</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">100</span></span><br><span class="line">b = <span class="number">12.3</span></span><br><span class="line">c = <span class="string">&#x27;hello&#x27;</span></span><br><span class="line">d = <span class="literal">False</span></span><br><span class="line">e = <span class="number">1</span>+<span class="number">2j</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(a))<span class="comment">#&lt;class &#x27;int&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(b))<span class="comment">#&lt;class &#x27;float&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(c))<span class="comment">#&lt;class &#x27;str&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(d))<span class="comment">#&lt;class &#x27;bool&#x27;&gt;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">type</span>(e))<span class="comment">#&lt;class &#x27;complex&#x27;&gt;</span></span><br></pre></td></tr></table></figure><p>可以使用Python中内置的函数对变量类型进行转换。</p><ul><li><code>int()</code>：将一个数值或字符串转换成整数，可以指定进制。</li><li><code>float()</code>：将一个字符串转换成浮点数。</li><li><code>str()</code>：将指定的对象转换成字符串形式，可以指定编码。</li><li><code>chr()</code>：将整数转换成该编码对应的字符串（一个字符）。</li><li><code>ord()</code>：将字符串（一个字符）转换成对应的编码（整数）。</li></ul><p>使用<code>input()</code>函数获取键盘输入<code>(字符串类型)</code></p><p>通过键盘输入两个整数来实现对两个整数的算术运算。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">使用int()函数将输入的字符串转换成整数</span></span><br><span class="line"><span class="string">使用print()函数输出带占位符的字符串</span></span><br><span class="line"><span class="string"> @author: zy</span></span><br><span class="line"><span class="string"> @data: 2022/9/1 13:20</span></span><br><span class="line"><span class="string"> &quot;&quot;&quot;</span></span><br><span class="line">f = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;a = &#x27;</span>))<span class="comment">#a = 仅作显示不运算</span></span><br><span class="line">g = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&#x27;b = &#x27;</span>))<span class="comment">#b = 仅作显示不运算</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d + %d = %d&#x27;</span> % (f, g, f + g))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d - %d = %d&#x27;</span> % (f, g, f - g))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d * %d = %d&#x27;</span> % (f, g, f * g))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d / %d = %f&#x27;</span> % (f, g, f / g))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d // %d = %d&#x27;</span> % (f, g, f // g))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d %% %d = %d&#x27;</span> % (f, g, f % g))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;%d ** %d = %d&#x27;</span> % (f, g, f ** g))</span><br></pre></td></tr></table></figure><p>上面的print函数中输出的字符串使用了占位符语法，其中<code>%d</code>是整数的占位符，<code>%f</code>是小数的占位符，<code>%.1f</code>表示保留一位小数,<code>%%</code>表示百分号（因为百分号代表了占位符，所以带占位符的字符串中要表示百分号必须写成<code>%%</code>），字符串之后的<code>%</code>后面跟的变量值会替换掉占位符然后输出到终端中，运行上面的程序，看看程序执行结果就明白啦。</p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>Python支持多种运算符，下表大致按照优先级从高到低的顺序列出了所有的运算符，运算符的优先级指的是多个运算符同时出现时，先做什么运算然后再做什么运算。</p><div class="table-container"><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>[] [:]</td><td>下标，切片</td></tr><tr><td>**</td><td>指数</td></tr><tr><td>~ + -</td><td>按位取反, 正负号</td></tr><tr><td>* / % //</td><td>乘，除，模，整除</td></tr><tr><td>+ -</td><td>加，减</td></tr><tr><td>&gt;&gt; &lt;&lt;</td><td>右移，左移</td></tr><tr><td>&amp;</td><td>按位与</td></tr><tr><td>^ \</td><td></td><td>按位异或，按位或</td></tr><tr><td>&lt;= &lt; &gt; &gt;=</td><td>小于等于，小于，大于，大于等于</td></tr><tr><td>== !=</td><td>等于，不等于</td></tr><tr><td>is is not</td><td>身份运算符</td></tr><tr><td>in not in</td><td>成员运算符</td></tr><tr><td>not or and</td><td>逻辑运算符</td></tr><tr><td>= += -=  <em>=  /= %= //= *</em>= &amp;= `</td><td>= ^= &gt;&gt;= &lt;&lt;=`</td></tr></tbody></table></div><p>在实际开发中，如果搞不清楚运算符的优先级，可以使用括号来确保运算的执行顺序。</p><p>赋值运算符=应该是最为常见的运算符，它的作用是将右边的值赋给左边的变量。</p><p>比较运算符有的地方也称为关系运算符，包括==、!=、&lt;、&gt;、&lt;=、&gt;=，我相信没有什么好解释的，大家一看就能懂，唯一需要提醒的是比较相等用的是==，请注意这个地方是两个等号，因为=是赋值运算符，我们在上面刚刚讲到过，==才是比较相等的比较运算符。比较运算符会产生布尔值，要么是True要么是False。</p><p>逻辑运算符有三个，分别是and、or和not。and字面意思是“而且”，所以and运算符会连接两个布尔值，如果两个布尔值都是True，那么运算的结果就是True；左右两边的布尔值有一个是False，最终的运算结果就是False。相信大家已经想到了，如果and左边的布尔值是False，不管右边的布尔值是什么，最终的结果都是False，所以在做运算的时候右边的值会被跳过（短路处理），这也就意味着在and运算符左边为False的情况下，右边的表达式根本不会执行。or字面意思是“或者”，所以or运算符也会连接两个布尔值，如果两个布尔值有任意一个是True，那么最终的结果就是True。当然，or运算符也是有短路功能的，在它左边的布尔值为True的情况下，右边的表达式根本不会执行。not运算符的后面会跟上一个布尔值，它的作用是得到与该布尔值相反的值，也就是说，后面的布尔值如果是True运算结果就是False，而后面的布尔值如果是False则运算结果就是True。</p><h2 id="分支结构"><a href="#分支结构" class="headerlink" title="分支结构"></a>分支结构</h2><h3 id="if语句的使用"><a href="#if语句的使用" class="headerlink" title="if语句的使用"></a>if语句的使用</h3><p>在Python中，要构造分支结构可以使用if、elif和else关键字。。所谓关键字就是有特殊含义的单词，像if和else就是专门用于构造分支结构的关键字，很显然你不能够使用它作为变量名（事实上，用作其他的标识符也是不可以）。</p><p>需要说明的是和C/C++、Java等语言不同，Python中没有用花括号来构造代码块而是使用了缩进的方式来表示代码的层次结构，如果if条件成立的情况下需要执行多条语句，只要保持多条语句具有相同的缩进就可以了。换句话说连续的代码如果又保持了相同的缩进那么它们属于同一个代码块，相当于是一个执行的整体。缩进可以使用任意数量的空格，但通常使用4个空格，建议大家不要使用制表键或者设置你的代码编辑工具自动将制表键变成4个空格。</p><p>当然如果要构造出更多的分支，可以使用if…elif…else…结构或者嵌套的if…else…结构。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">        分支</span></span><br><span class="line"><span class="string">        x+1,x&gt;0</span></span><br><span class="line"><span class="string">    f(x)&#123; x,  x=0</span></span><br><span class="line"><span class="string">        x-1,x&lt;0</span></span><br><span class="line"><span class="string">    </span></span><br><span class="line"><span class="string"> @author: zy</span></span><br><span class="line"><span class="string"> @data: 2022/9/1 13:41</span></span><br><span class="line"><span class="string"> &quot;&quot;&quot;</span></span><br><span class="line">a = <span class="built_in">float</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> a&gt;<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(a+<span class="number">1</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">if</span> a==<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(a)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(a-<span class="number">1</span>)</span><br><span class="line"><span class="comment">#------------------------</span></span><br><span class="line"><span class="keyword">if</span> a&gt;<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(a+<span class="number">1</span>)</span><br><span class="line"><span class="keyword">elif</span> a==<span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(a)</span><br><span class="line"><span class="keyword">else</span>:<span class="built_in">print</span>(a-<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h2 id="循环结构"><a href="#循环结构" class="headerlink" title="循环结构"></a>循环结构</h2><h3 id="for-in循环"><a href="#for-in循环" class="headerlink" title="for-in循环"></a>for-in循环</h3><p>如果明确的知道循环执行的次数或者要对一个容器进行迭代（后面会讲到），那么我们推荐使用<code>for-in</code>循环</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    使用for...in实现1-100求和</span></span><br><span class="line"><span class="string"> @author: zy</span></span><br><span class="line"><span class="string"> @data: 2022/9/1 14:32</span></span><br><span class="line"><span class="string"> &quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">101</span>):</span><br><span class="line">    <span class="built_in">sum</span> += i</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><p>需要说明的是上面代码中的<code>range(1, 101)</code>可以用来构造一个从1到100的范围，当我们把这样一个范围放到<code>for-in</code>循环中，就可以通过前面的循环变量<code>x</code>依次取出从1到100的整数。当然，<code>range</code>的用法非常灵活。</p><ul><li><code>range(101)</code>：可以用来产生0到100范围的整数，需要注意的是取不到101。</li><li><code>range(1, 101)</code>：可以用来产生1到100范围的整数，相当于前面是闭区间后面是开区间。</li><li><code>range(1, 101, 2)</code>：可以用来产生1到100的奇数，其中2是步长，即每次数值递增的值。</li><li><code>range(100, 0, -2)</code>：可以用来产生100到1的偶数，其中-2是步长，即每次数字递减的值。</li></ul><p>知道了这一点，我们可以用下面的代码来实现1~100之间的偶数求和。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    使用for...in实现1-100求和</span></span><br><span class="line"><span class="string"> @author: zy</span></span><br><span class="line"><span class="string"> @data: 2022/9/1 14:32</span></span><br><span class="line"><span class="string"> &quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>,<span class="number">2</span>):</span><br><span class="line">    <span class="built_in">sum</span> += i</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><p>当然，也可以通过在循环中使用分支结构的方式来实现相同的功能，</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    使用for...in实现1-100求和</span></span><br><span class="line"><span class="string"> @author: zy</span></span><br><span class="line"><span class="string"> @data: 2022/9/1 14:32</span></span><br><span class="line"><span class="string"> &quot;&quot;&quot;</span></span><br><span class="line"><span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">101</span>):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">2</span>==<span class="number">0</span>:</span><br><span class="line">        <span class="built_in">sum</span> += i</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">sum</span>)</span><br></pre></td></tr></table></figure><p>说明：相较于上面直接跳过奇数的做法，下面这种做法很明显并不是很好的选择。</p><h3 id="while循环"><a href="#while循环" class="headerlink" title="while循环"></a>while循环</h3><p>如果要构造不知道具体循环次数的循环结构，我们推荐使用<code>while</code>循环。<code>while</code>循环通过一个能够产生或转换出<code>bool</code>值的表达式来控制循环，表达式的值为<code>True</code>则继续循环；表达式的值为<code>False</code>则结束循环。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> random<span class="comment">#导入产生随机数的包</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    猜大小</span></span><br><span class="line"><span class="string"> @author: zy</span></span><br><span class="line"><span class="string"> @data: 2022/9/1 14:44</span></span><br><span class="line"><span class="string"> &quot;&quot;&quot;</span></span><br><span class="line">ans = random.randint(<span class="number">1</span>,<span class="number">100</span>)</span><br><span class="line">counter = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    counter +=<span class="number">1</span></span><br><span class="line">    number = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    <span class="keyword">if</span> number &lt; ans:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;dayidian&quot;</span>)</span><br><span class="line">    <span class="keyword">elif</span> number &gt; ans:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;xiaoydiann&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;good&quot;</span>)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;一共猜了%d次&#x27;</span>%counter)</span><br></pre></td></tr></table></figure><p>上面的代码中使用了<code>break</code>关键字来提前终止循环，需要注意的是<code>break</code>只能终止它所在的那个循环，这一点在使用嵌套的循环结构（下面会讲到）需要引起注意。除了<code>break</code>之外，还有另一个关键字是<code>continue</code>，它可以用来放弃本次循环后续的代码直接让循环进入下一轮。</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>要写出高质量的代码首先要解决的就是重复代码的问题对于重复的问题我们可以把代码封装在一个函数中当使用的时候调用这个函数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Python中可以在函数内部再定义函数</span><br></pre></td></tr></table></figure><h4 id="定义函数"><a href="#定义函数" class="headerlink" title="定义函数"></a>定义函数</h4><p>在Python中可以使用<code>def</code>关键字来定义函数，命名规则跟变量的命名规则是一致的。</p><p>定义一个求阶乘的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#求阶乘</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">jie</span>(<span class="params">num</span>):</span><br><span class="line">    res = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,num+<span class="number">1</span>):</span><br><span class="line">        res *= i</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;n=&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(jie(n))</span><br></pre></td></tr></table></figure><p><strong>说明：</strong> Python的<code>math</code>模块中其实已经有一个名为<code>factorial</code>函数实现了阶乘运算，事实上求阶乘并不用自己定义函数。实际开发中并不建议做这种低级的重复劳动</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="comment">#求阶乘</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">jie</span>(<span class="params">num</span>):</span><br><span class="line">    res = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,num+<span class="number">1</span>):</span><br><span class="line">        res *= i</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>(<span class="string">&quot;n=&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(jie(n))</span><br><span class="line"><span class="built_in">print</span>(math.factorial(n))</span><br></pre></td></tr></table></figure><h4 id="函数的参数"><a href="#函数的参数" class="headerlink" title="函数的参数"></a>函数的参数</h4><p>在Python中，函数的参数可以有默认值，也支持使用可变参数，所以Python并不需要像其他语言一样支持函数的重载，因为我们在定义一个函数的时候可以让它有多种不同的使用方式</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">如果没有指定参数那么使用默认值</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">roll</span>(<span class="params">x=<span class="number">2</span></span>):</span><br><span class="line">    <span class="built_in">sum</span>=<span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(x+<span class="number">1</span>):</span><br><span class="line">         <span class="built_in">sum</span> = <span class="built_in">sum</span>+i</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line"><span class="built_in">print</span>(roll())</span><br><span class="line"><span class="built_in">print</span>(roll(<span class="number">2</span>))</span><br><span class="line"><span class="built_in">print</span>(roll(<span class="number">5</span>))</span><br></pre></td></tr></table></figure><p>我们给上面两个函数的参数都设定了默认值，这也就意味着如果在调用函数的时候如果没有传入对应参数的值时将使用该参数的默认值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">add</span>(<span class="params">*s</span>):<span class="comment">#在参数名前面的*表示s是一个可变参数</span></span><br><span class="line">    <span class="built_in">sum</span> = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        <span class="built_in">sum</span>+=i</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">sum</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在调用add函数时可以传入0个或多个参数</span></span><br><span class="line"><span class="built_in">print</span>(add())</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">1</span>))</span><br><span class="line"><span class="built_in">print</span>(add(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>))</span><br></pre></td></tr></table></figure><h4 id="用模块管理函数"><a href="#用模块管理函数" class="headerlink" title="用模块管理函数"></a>用模块管理函数</h4><p>同一个.py文件中定义了两个同名函数，由于Python没有函数重载的概念，那么后面的定义会覆盖之前的定义，也就意味着两个函数同名函数实际上只有一个是存在的。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;hello,&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;world!&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">foo()<span class="comment">#world!</span></span><br></pre></td></tr></table></figure><p>Python中每个文件就代表了一个模块（module），我们在不同的模块中可以有同名的函数，在使用函数的时候我们通过<code>import</code>关键字导入指定的模块就可以区分到底要使用的是哪个模块中的<code>foo</code>函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">demo1.py</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;hello,&quot;</span>)</span><br><span class="line">demo2.py</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;world!&quot;</span>)</span><br><span class="line">demo3.py</span><br><span class="line"><span class="keyword">from</span> demo1 <span class="keyword">import</span> foo</span><br><span class="line">foo()<span class="comment">#hello,</span></span><br><span class="line"><span class="keyword">from</span>  demo2 <span class="keyword">import</span> foo</span><br><span class="line">foo()<span class="comment">#world!</span></span><br></pre></td></tr></table></figure><p>也可以按照如下所示的方式来区分到底要使用哪一个foo函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> demo1 <span class="keyword">as</span> d1</span><br><span class="line"><span class="keyword">import</span> demo2 <span class="keyword">as</span> d2</span><br><span class="line">d1.foo()</span><br><span class="line">d2.foo()</span><br></pre></td></tr></table></figure><p>但如果是这样的话，下边导入的会覆盖上边</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> demo1 <span class="keyword">import</span> foo</span><br><span class="line"><span class="keyword">from</span> demo2 <span class="keyword">import</span> foo</span><br><span class="line"></span><br><span class="line">foo()<span class="comment">#world!</span></span><br></pre></td></tr></table></figure><p>需要说明的是，如果我们导入的模块除了定义函数之外还有可以执行代码，那么Python解释器在导入这个模块时就会执行这些代码，事实上我们可能并不希望如此，因此如果我们在模块中编写了执行代码，最好是将这些执行代码放入如下所示的条件中，这样的话除非直接运行该模块，if条件下的这些代码是不会执行的，因为只有直接执行的模块的名字才是”<strong>main</strong>“。可以参考下方连接</p><p><a href="https://blog.csdn.net/heqiang525/article/details/89879056">Python中if <strong>name</strong> == ‘<strong>main</strong>‘：的作用和原理</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">demo3.py</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;1&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">bar</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;2&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># __name__是Python中一个隐含的变量它代表了模块的名字</span></span><br><span class="line"><span class="comment"># 只有被Python解释器直接执行的模块的名字才是__main__</span></span><br><span class="line">foo()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;call bar()&#x27;</span>)</span><br><span class="line">    bar()</span><br></pre></td></tr></table></figure><p>当直接运行时</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301172011705.png" alt="img"></p><p>当导入demo4中运行时</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301172011274.png" alt="img"></p><h4 id="变量的作用域"><a href="#变量的作用域" class="headerlink" title="变量的作用域"></a>变量的作用域</h4><p>函数内部的赋值会覆盖全局的赋值</p><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">def foo():</span><br><span class="line">    <span class="keyword">a</span> = <span class="number">200</span></span><br><span class="line">    print(<span class="keyword">a</span>)  <span class="comment"># 200</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">a</span> = <span class="number">100</span></span><br><span class="line">    foo()</span><br><span class="line">    print(<span class="keyword">a</span>)  <span class="comment"># 100</span></span><br><span class="line">在调用foo函数后，我们发现<span class="keyword">a</span>的值仍然是<span class="number">100</span>，这是因为当我们在函数foo中写<span class="keyword">a</span> = <span class="number">200</span>的时候，是重新定义了一个名字为<span class="keyword">a</span>的局部变量，它跟全局作用域的<span class="keyword">a</span>并不是同一个变量，因为局部作用域中有了自己的变量<span class="keyword">a</span>，因此foo函数不再搜索全局作用域中的<span class="keyword">a</span>。如果我们希望在foo函数中修改全局作用域中的<span class="keyword">a</span></span><br><span class="line">def foo():</span><br><span class="line">    <span class="built_in">global</span> <span class="keyword">a</span></span><br><span class="line">    <span class="keyword">a</span> = <span class="number">200</span></span><br><span class="line">    print(<span class="keyword">a</span>)  <span class="comment"># 200</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">a</span> = <span class="number">100</span></span><br><span class="line">    foo()</span><br><span class="line">    print(<span class="keyword">a</span>)  <span class="comment"># 200</span></span><br></pre></td></tr></table></figure><p>我们可以使用<code>global</code>关键字来指示<code>foo</code>函数中的变量<code>a</code>来自于全局作用域，如果全局作用域中没有<code>a</code>，就会定义变量<code>a</code>并将其置于全局作用域。同理，如果我们希望函数内部的函数能够修改嵌套作用域中的变量，可以使用<code>nonlocal</code>关键字来指示变量来自于嵌套作用域</p><p>在实际开发中，我们应该尽量减少对全局变量的使用，因为全局变量的作用域和影响过于广泛，可能会发生意料之外的修改和使用，除此之外全局变量比局部变量拥有更长的生命周期，可能导致对象占用的内存长时间无法被垃圾回收。事实上，减少对全局变量的使用，也是降低代码之间耦合度的一个重要举措。</p><h2 id="list"><a href="#list" class="headerlink" title="list"></a>list</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line">name=[<span class="string">&#x27;1&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;3&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"><span class="comment">#插入</span></span><br><span class="line">name.append(<span class="string">&#x27;4&#x27;</span>)#插入末尾</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">name.append(4)</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">name.insert(2,<span class="string">&#x27;0&#x27;</span>)#插入指定项</span><br><span class="line"><span class="comment">#将0插入到第2项</span></span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line"><span class="comment">#删除</span></span><br><span class="line">del name[len(name)-1]</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">name.append(<span class="string">&#x27;4&#x27;</span>);</span><br><span class="line">name.pop();#删除末尾元素</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">del name[2]</span><br><span class="line">del name[3]</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">a = <span class="string">&#x27;2&#x27;</span> <span class="keyword">in</span> name</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line">a = <span class="string">&#x27;4&#x27;</span> <span class="keyword">in</span> name</span><br><span class="line"><span class="built_in">print</span>(a)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> [1,2,3]:<span class="built_in">print</span>(i)</span><br><span class="line"><span class="built_in">print</span>(max(name))</span><br><span class="line"><span class="built_in">print</span>(min(name))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;------------------&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> name:<span class="built_in">print</span>(i)</span><br><span class="line">name.append(<span class="string">&#x27;4&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;--------&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> name:<span class="built_in">print</span>(i)</span><br><span class="line">name.pop(2)#删除2处元素</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;--------------&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> name:<span class="built_in">print</span>(i)</span><br><span class="line">name[2]=<span class="string">&#x27;3&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;----------------&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> name:<span class="built_in">print</span>(i)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;-----------&#x27;</span>)</span><br><span class="line"><span class="comment">#list 里面的元素的数据类型是可以不同的,并且list里边还可以是list</span></span><br><span class="line">newname= [[<span class="string">&#x27;VIP用户&#x27;</span>,11111],[<span class="string">&#x27;twowater&#x27;</span>,22222],[<span class="string">&#x27;三点水&#x27;</span>,33333]]</span><br><span class="line"><span class="built_in">print</span>(newname)</span><br><span class="line">newname=[[<span class="string">&#x27;1a&#x27;</span>,<span class="string">&#x27;1&#x27;</span>],[<span class="string">&#x27;2a&#x27;</span>,<span class="string">&#x27;2&#x27;</span>],[<span class="string">&#x27;3a&#x27;</span>,<span class="string">&#x27;3&#x27;</span>]]</span><br><span class="line"><span class="built_in">print</span>(newname[1][0])#第一个表示第一个括号第几个第二个参数表示里边的第几个</span><br><span class="line">name.extend(newname)</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">name.append(<span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">name.<span class="built_in">remove</span>(<span class="string">&#x27;1&#x27;</span>)#移除列表中的某个元素第一个匹配结果</span><br><span class="line"><span class="built_in">print</span>(newname)</span><br><span class="line">newname.clear()</span><br><span class="line"><span class="built_in">print</span>(newname)</span><br><span class="line"><span class="built_in">print</span>(name.count(<span class="string">&#x27;2&#x27;</span>))#查询字符出现次数</span><br><span class="line"><span class="built_in">print</span>(name)</span><br><span class="line">name.reverse()</span><br><span class="line"><span class="built_in">print</span>(name)# 将列表中的元素倒叙，在原列表进行操作，不返回新的列表</span><br><span class="line"></span><br><span class="line"><span class="comment"># List （列表）函数&amp;方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># len(list)列表元素个数</span></span><br><span class="line"><span class="comment"># max(list)返回列表元素最大值</span></span><br><span class="line"><span class="comment"># min(list)返回列表元素最小值</span></span><br><span class="line"><span class="comment"># list(seq)将元组转换为列表</span></span><br><span class="line"><span class="comment"># list.append(obj)在列表末尾添加新的对象</span></span><br><span class="line"><span class="comment"># list.count(obj)统计某个元素在列表中出现的次数</span></span><br><span class="line"><span class="comment"># list.extend(seq)在列表末尾一次性追加另一个序列中的多个值（用新列表扩展原来的列表）</span></span><br><span class="line"><span class="comment"># list.index(obj)从列表中找出某个值第一个匹配项的索引位置</span></span><br><span class="line"><span class="comment"># list.insert(index, obj)将对象插入列表</span></span><br><span class="line"><span class="comment"># list.pop(obj=list[-1])移除列表中的一个元素（默认最后一个元素），并且返回该元素的值</span></span><br><span class="line"><span class="comment"># list.remove(obj)移除列表中的一个元素（参数是列表中元素），并且不返回任何值</span></span><br><span class="line"><span class="comment"># list.reverse()反向列表中元素</span></span><br><span class="line"><span class="comment"># list.sort([func])对原列表进行排序</span></span><br><span class="line"><span class="comment"># List（列表）运算符</span></span><br><span class="line"><span class="comment"># 列表对 + 和 * 的操作符与字符串相似。+ 号用于组合列表，* 号用于重复列表。</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Python 表达式                     结果                        描述</span></span><br><span class="line"><span class="comment"># len([1, 2, 3])                   3                      计算元素个数</span></span><br><span class="line"><span class="comment"># [1, 2, 3] + [4, 5, 6]            [1, 2, 3, 4, 5, 6]            组合</span></span><br><span class="line"><span class="comment"># [&#x27;Hi!&#x27;] * 4                [&#x27;Hi!&#x27;, &#x27;Hi!&#x27;, &#x27;Hi!&#x27;, &#x27;Hi!&#x27;]    复制</span></span><br><span class="line"><span class="comment"># 3 in [1, 2, 3]                  True                        元素是否存在于列表中</span></span><br><span class="line"><span class="comment"># for x in [1, 2, 3]: print x,       1 2 3                   迭代</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机编程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown外挂标签语法</title>
      <link href="/posts/6ff0b396.html"/>
      <url>/posts/6ff0b396.html</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown语法自带格式"><a href="#Markdown语法自带格式" class="headerlink" title="Markdown语法自带格式"></a>Markdown语法自带格式</h1><div class="note info modern"><p>参考: <a href="[Markdown 基本语法 | Markdown 官方教程](https://markdown.com.cn/basic-syntax/">Markdwon 语法官方教程</a>)</p></div><div class="note info modern"><p>注意: 此页面偶尔会出现css冲突！</p></div><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">实例源码</button></li><li class="tab"><button type="button" data-href="#test4-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">`VSCode终端`</span><br><span class="line"></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"></span><br><span class="line">`Cmder终端`</span><br><span class="line"></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="多级标题"><a href="#多级标题" class="headerlink" title="多级标题"></a>多级标题</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;u&gt;下划线演示&lt;/u&gt;</span><br><span class="line"></span><br><span class="line">文字**加粗**演示</span><br><span class="line"></span><br><span class="line">文字*斜体*演示</span><br><span class="line"></span><br><span class="line">文本`高亮`演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line">&lt;font size = 5&gt;5号字&lt;/font&gt;</span><br><span class="line">&lt;font face=&quot;黑体&quot;&gt;黑体&lt;/font&gt;</span><br><span class="line">&lt;font color=blue&gt;蓝色&lt;/font&gt;</span><br><span class="line"></span><br><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=MistyRose&gt;这里的背景色是：MistyRosen，此处输入任意想输入的内容&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<del>删除</del>线演示</p><font size = 5>5号字</font><font face="黑体">黑体</font><font color=blue>蓝色</font><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="引入"><a href="#引入" class="headerlink" title="引入"></a>引入</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;  Java</span><br><span class="line">&gt; 二级引用演示</span><br><span class="line">&gt; MySQL</span><br><span class="line">&gt; &gt;外键</span><br><span class="line">&gt; &gt;</span><br><span class="line">&gt; &gt;事务</span><br><span class="line">&gt; &gt;</span><br><span class="line">&gt; &gt;**行级锁**(引用内部一样可以用格式)</span><br><span class="line">&gt; </span><br><span class="line">&gt; ....</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><blockquote><p> Java</p></blockquote><p>二级引用演示</p><blockquote><p>MySQL</p><blockquote><p>外键</p><p>事务</p><p><strong>行级锁</strong>(引用内部一样可以用格式)</p></blockquote><p>…</p></blockquote><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">***</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><hr><hr><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="无序列表-跟空格都可以"><a href="#无序列表-跟空格都可以" class="headerlink" title="无序列表(*,+,-跟空格都可以)"></a>无序列表(*,+,-跟空格都可以)</h3><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">* Java</span><br><span class="line">* Python</span><br><span class="line">* ...</span><br><span class="line"></span><br><span class="line">+ Java</span><br><span class="line">+ Python</span><br><span class="line">+ ...</span><br><span class="line"></span><br><span class="line">- Java</span><br><span class="line">- Python</span><br><span class="line">- ...</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><ul><li>Java</li><li>Python</li><li>…</li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h3><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 注意后面有空格</span><br><span class="line">1. </span><br><span class="line">2. </span><br><span class="line">3. </span><br><span class="line">4. </span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li></li><li></li><li></li><li></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 本地图片</span><br><span class="line">&lt;img src=&quot;/img/keai.png&quot; alt=&quot;示例图片&quot; style=&quot;zoom:50%;&quot; /&gt;</span><br><span class="line"># 在线图片</span><br><span class="line">![photo](https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091559854.png)</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><code>本地图片</code></p><p><img src="/img/keai.png" alt="示例图片" style="zoom:50%;" /></p><p><code>在线图片</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png" alt="photo"></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">| 项目标号 | 资金     | 备注 |</span><br><span class="line">| -------- | -------- | ---- |</span><br><span class="line">| 1        | 100，000 | 无   |</span><br><span class="line">| 2        | 200，000 | 无   |</span><br><span class="line">| 3        | 300,600  | 重要 |</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><div class="table-container"><table><thead><tr><th>项目标号</th><th>资金</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>100，000</td><td>无</td></tr><tr><td>2</td><td>200，000</td><td>无</td></tr><tr><td>3</td><td>300,600</td><td>重要</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="公式"><a href="#公式" class="headerlink" title="公式"></a>公式</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-2">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$$</span><br><span class="line">\Gamma(z)=\int_0^\infty t^&#123;z-1&#125;e^&#123;-t&#125;dt.</span><br><span class="line">$$</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><script type="math/tex; mode=display">\Gamma(z)=\int_0^\infty t^{z-1}e^{-t}dt.</script><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h1 id="Butter外挂标签"><a href="#Butter外挂标签" class="headerlink" title="Butter外挂标签"></a>Butter外挂标签</h1><p>这部分参考安知鱼:<a href="https://anzhiy.cn/posts/7d58.html">基于Butterfly的外挂标签引入</a></p><h2 id="行内文本样式-text"><a href="#行内文本样式-text" class="headerlink" title="行内文本样式 text"></a>行内文本样式 text</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;% u 文本内容 %&#125;</span><br><span class="line">&#123;% emp 文本内容 %&#125;</span><br><span class="line">&#123;% wavy 文本内容 %&#125;</span><br><span class="line">&#123;% del 文本内容 %&#125;</span><br><span class="line">&#123;% kbd 文本内容 %&#125;</span><br><span class="line">&#123;% psw 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">1. 带 &#123;% u 下划线 %&#125; 的文本</span><br><span class="line">2. 带 &#123;% emp 着重号 %&#125; 的文本</span><br><span class="line">3. 带 &#123;% wavy 波浪线 %&#125; 的文本</span><br><span class="line">4. 带 &#123;% del 删除线 %&#125; 的文本</span><br><span class="line">5. 键盘样式的文本 &#123;% kbd command %&#125; + &#123;% kbd D %&#125;</span><br><span class="line">6. 密码样式的文本：&#123;% psw 这里没有验证码 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><ol><li>带 <u>下划线</u> 的文本</li><li>带 <emp>着重号</emp> 的文本</li><li>带 <wavy>波浪线</wavy> 的文本</li><li>带 <del>删除线</del> 的文本</li><li>键盘样式的文本 <kbd>command</kbd> + <kbd>D</kbd></li><li>密码样式的文本：<psw>这里没有验证码</psw></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="行内文本-span"><a href="#行内文本-span" class="headerlink" title="行内文本 span"></a>行内文本 span</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% span red, 红色 %&#125;、&#123;% span yellow, 黄色 %&#125;、&#123;% span green, 绿色 %&#125;、&#123;% span cyan, 青色 %&#125;、&#123;% span blue, 蓝色 %&#125;、&#123;% span gray, 灰色 %&#125;。</span><br><span class="line">- 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% span center logo large, Volantis %&#125;</span><br><span class="line">&#123;% span center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<span class='p red'>红色</span>、<span class='p yellow'>黄色</span>、<span class='p green'>绿色</span>、<span class='p cyan'>青色</span>、<span class='p blue'>蓝色</span>、<span class='p gray'>灰色</span>。</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<br><span class='p center logo large'>Volantis</span><br><span class='p center small'>A Wonderful Theme for Hexo</span></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="段落文本-p"><a href="#段落文本-p" class="headerlink" title="段落文本 p"></a>段落文本 p</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p 样式参数(参数以空格划分), 文本内容 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li><code>字体</code>: logo, code</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>大小</code>: small, h4, h3, h2, h1, large, huge, ultra</li><li><code>对齐方向</code>: left, center, right</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">- 彩色文字</span><br><span class="line">在一段话中方便插入各种颜色的标签，包括：&#123;% p red, 红色 %&#125;、&#123;% p yellow, 黄色 %&#125;、&#123;% p green, 绿色 %&#125;、&#123;% p cyan, 青色 %&#125;、&#123;% p blue, 蓝色 %&#125;、&#123;% p gray, 灰色 %&#125;。</span><br><span class="line">- 超大号文字</span><br><span class="line">文档「开始」页面中的标题部分就是超大号文字。</span><br><span class="line">&#123;% p center logo large, Volantis %&#125;</span><br><span class="line">&#123;% p center small, A Wonderful Theme for Hexo %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><ul><li>彩色文字<br>在一段话中方便插入各种颜色的标签，包括：<p class='p red'>红色</p>,<p class='p yellow'>黄色</p>,<p class='p green'>绿色</p>,<p class='p cyan'>青色</p>,<p class='p blue'>蓝色</p>,<p class='p gray'>灰色</p>.</li><li>超大号文字<br>文档「开始」页面中的标题部分就是超大号文字。<p class='p center logo large'>Volantis</p><p class='p center small'>A Wonderful Theme for Hexo</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="引用-note"><a href="#引用-note" class="headerlink" title="引用 note"></a>引用 note</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">通用配置</button></li><li class="tab"><button type="button" data-href="#test4-2">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-3">参数配置</button></li><li class="tab"><button type="button" data-href="#test4-4">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-5">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border_radius: 3</span><br><span class="line">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span><br><span class="line">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span><br><span class="line">  light_bg_offset: 0</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">note:</span><br><span class="line">  # Note tag style values:</span><br><span class="line">  #  - simple    bs-callout old alert style. Default.</span><br><span class="line">  #  - modern    bs-callout new (v2-v3) alert style.</span><br><span class="line">  #  - flat      flat callout style with background, like on Mozilla or StackOverflow.</span><br><span class="line">  #  - disabled  disable all CSS styles import of note tag.</span><br><span class="line">  style: simple</span><br><span class="line">  icons: false</span><br><span class="line">  border_radius: 3</span><br><span class="line">  # Offset lighter of background in % for modern and flat styles (modern: -12 | 12; flat: -18 | 6).</span><br><span class="line">  # Offset also applied to label tag variables. This option can work with disabled note tag.</span><br><span class="line">  light_bg_offset: 0</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p>1.自带icon</p><div class="table-container"><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / primary / success / info / warning / danger ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】不显示 icon</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table></div><p>2.外部icon</p><div class="table-container"><table><thead><tr><th>参数</th><th style="text-align:center">用法</th></tr></thead><tbody><tr><td>class</td><td style="text-align:center">【可选】标识，不同的标识有不同的配色 （ default / blue / pink / red / purple / orange / green ）</td></tr><tr><td>no-icon</td><td style="text-align:center">【可选】可配置自定义 icon (只支持 fontawesome 图标, 也可以配置 no-icon )</td></tr><tr><td>style</td><td style="text-align:center">【可选】可以覆盖配置中的 style （simple/modern/flat/disabled）</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><details class="folding-tag" green><summary> 自带icon </summary>              <div class='content'>              <ol><li><p><code>simple</code>样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note simple %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default simple %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary simple %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success simple %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info simple %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning simple %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger simple %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>modern</code>样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note modern %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default modern %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary modern %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success modern %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info modern %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning modern %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger modern %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>flat</code>样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note flat %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default flat %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary flat %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success flat %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info flat %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning flat %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger flat %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>disabled</code>样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note disabled %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default disabled %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary disabled %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success disabled %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info disabled %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning disabled %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger disabled %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li><li><p><code>no-icon</code>样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;默认 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note default no-icon %&#125;default 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary no-icon %&#125;primary 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success no-icon %&#125;success 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info no-icon %&#125;info 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning no-icon %&#125;warning 提示块标签&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger no-icon %&#125;danger 提示块标签&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></li></ol>              </div>            </details><details class="folding-tag" green><summary> 外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; simple %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; simple %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; simple%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; simple %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; simple %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; simple %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>2.<code>modern</code>样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; modern %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; modern %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; modern%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; modern %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; modern %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; modern %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>3.<code>flat</code>样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; flat %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; flat %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; flat%&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; flat %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; flat %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; flat %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>4.<code>disabled</code>样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;fab fa-cc-visa&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue &#x27;fas fa-bullhorn&#x27; disabled %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink &#x27;fas fa-car-crash&#x27; disabled %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red &#x27;fas fa-fan&#x27; disabled %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange &#x27;fas fa-battery-half&#x27; disabled %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple &#x27;far fa-hand-scissors&#x27; disabled %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green &#x27;fab fa-internet-explorer&#x27; disabled %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p>5.<code>no-icon</code>样式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note blue no-icon %&#125;2021年快到了....&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note pink no-icon %&#125;小心开车 安全至上&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note red no-icon %&#125;这是三片呢？还是四片？&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note orange no-icon %&#125;你是刷 Visa 还是 UnionPay&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note purple no-icon %&#125;剪刀石头布&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note green no-icon %&#125;前端最讨厌的浏览器&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-5"><details class="folding-tag" green><summary> 自带icon </summary>              <div class='content'>              <ol><li><code>simple</code>样式</li></ol>   <div class="note simple"><p>默认 提示块标签</p></div>   <div class="note default simple"><p>default 提示块标签</p></div>   <div class="note primary simple"><p>primary 提示块标签</p></div>   <div class="note success simple"><p>success 提示块标签</p></div>   <div class="note info simple"><p>info 提示块标签</p></div>   <div class="note warning simple"><p>warning 提示块标签</p></div>   <div class="note danger simple"><p>danger 提示块标签</p></div> 2. `modern`样式   <div class="note modern"><p>默认 提示块标签</p></div>   <div class="note default modern"><p>default 提示块标签</p></div>   <div class="note primary modern"><p>primary 提示块标签</p></div>   <div class="note success modern"><p>success 提示块标签</p></div>   <div class="note info modern"><p>info 提示块标签</p></div>   <div class="note warning modern"><p>warning 提示块标签</p></div>   <div class="note danger modern"><p>danger 提示块标签</p></div>  3. `flat`样式   <div class="note flat"><p>默认 提示块标签</p></div>   <div class="note default flat"><p>default 提示块标签</p></div>   <div class="note primary flat"><p>primary 提示块标签</p></div>   <div class="note success flat"><p>success 提示块标签</p></div>   <div class="note info flat"><p>info 提示块标签</p></div>   <div class="note warning flat"><p>warning 提示块标签</p></div>   <div class="note danger flat"><p>danger 提示块标签</p></div>4. `disabled`样式   <div class="note disabled"><p>默认 提示块标签</p></div>   <div class="note default disabled"><p>default 提示块标签</p></div>   <div class="note primary disabled"><p>primary 提示块标签</p></div>   <div class="note success disabled"><p>success 提示块标签</p></div>   <div class="note info disabled"><p>info 提示块标签</p></div>   <div class="note warning disabled"><p>warning 提示块标签</p></div>   <div class="note danger disabled"><p>danger 提示块标签</p></div>  5. `no-icon`样式   <div class="note no-icon flat"><p>默认 提示块标签</p></div>   <div class="note default no-icon flat"><p>default 提示块标签</p></div>   <div class="note primary no-icon flat"><p>primary 提示块标签</p></div>   <div class="note success no-icon flat"><p>success 提示块标签</p></div>   <div class="note info no-icon flat"><p>info 提示块标签</p></div>   <div class="note warning no-icon flat"><p>warning 提示块标签</p></div>   <div class="note danger no-icon flat"><p>danger 提示块标签</p></div>              </div>            </details><details class="folding-tag" green><summary> 外部icon </summary>              <div class='content'>              <p>1.<code>simple</code>样式</p><div class="note icon-padding simple"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding simple"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding simple"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding simple"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding simple"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding simple"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding simple"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>2.<code>modern</code>样式</p><div class="note icon-padding modern"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding modern"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding modern"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding modern"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding modern"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding modern"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding modern"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>3.<code>flat</code>样式</p><div class="note icon-padding flat"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding flat"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding flat"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding flat"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding flat"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding flat"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding flat"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>4.<code>disabled</code>样式</p><div class="note icon-padding disabled"><i class="note-icon fab fa-cc-visa"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue icon-padding disabled"><i class="note-icon fas fa-bullhorn"></i><p>2021年快到了….</p></div><div class="note pink icon-padding disabled"><i class="note-icon fas fa-car-crash"></i><p>小心开车 安全至上</p></div><div class="note red icon-padding disabled"><i class="note-icon fas fa-fan"></i><p>这是三片呢？还是四片？</p></div><div class="note orange icon-padding disabled"><i class="note-icon fas fa-battery-half"></i><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple icon-padding disabled"><i class="note-icon far fa-hand-scissors"></i><p>剪刀石头布</p></div><div class="note green icon-padding disabled"><i class="note-icon fab fa-internet-explorer"></i><p>前端最讨厌的浏览器</p></div><p>5.<code>no-icon</code>样式</p><div class="note no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note blue no-icon flat"><p>2021年快到了….</p></div><div class="note pink no-icon flat"><p>小心开车 安全至上</p></div><div class="note red no-icon flat"><p>这是三片呢？还是四片？</p></div><div class="note orange no-icon flat"><p>你是刷 Visa 还是 UnionPay</p></div><div class="note purple no-icon flat"><p>剪刀石头布</p></div><div class="note green no-icon flat"><p>前端最讨厌的浏览器</p></div>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="上标标签"><a href="#上标标签" class="headerlink" title="上标标签"></a>上标标签</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li><code>样式</code>: success,error,warning,bolt,ban,home,sync,cogs,key,bell</li><li><code>自定义图标</code>: 支持fontawesome。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip %&#125;default&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip info %&#125;info&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip success %&#125;success&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip error %&#125;error&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip warning %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bolt %&#125;bolt&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban %&#125;ban&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip home %&#125;home&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip sync %&#125;sync&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip cogs %&#125;cogs&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip key %&#125;key&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip bell %&#125;bell&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip fa-atom %&#125;自定义font awesome图标&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><div class="tip "><p>default</p></div><div class="tip info"><p>info</p></div><div class="tip success"><p>success</p></div><div class="tip error"><p>error</p></div><div class="tip warning"><p>warning</p></div><div class="tip bolt"><p>bolt</p></div><div class="tip ban"><p>ban</p></div><div class="tip home"><p>home</p></div><div class="tip sync"><p>sync</p></div><div class="tip cogs"><p>cogs</p></div><div class="tip key"><p>key</p></div><div class="tip bell"><p>bell</p></div><div class="tip fa-atom"><p>自定义font awesome图标</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="动态标签-anima"><a href="#动态标签-anima" class="headerlink" title="动态标签 anima"></a>动态标签 anima</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip [参数，可选] %&#125;文本内容&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li>将所需的CSS类添加到图标（或DOM中的任何元素）。</li><li>对于父级悬停样式，需要给目标元素添加指定CSS类，同时还要给目标元素的父级元素添加CSS类<code>faa-parent animated-hover</code>。（详情见示例及示例源码）<br>You can regulate the speed of the animation by adding the CSS class or . faa-fastfaa-slow</li><li>可以通过给目标元素添加CSS类<code>faa-fast</code>或<code>faa-slow</code>来控制动画快慢。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p>1.On DOM load（当页面加载时显示动画）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>2.调整动画速度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated faa-fast %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated faa-slow %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>3.On hover（当鼠标悬停时显示动画）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-horizontal animated-hover %&#125;warning&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-flash animated-hover %&#125;ban&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><p>4.On parent hover（当鼠标悬停在父级元素时显示动画）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tip warning faa-parent animated-hover %&#125;&lt;p class=&quot;faa-horizontal&quot;&gt;warning&lt;/p&gt;&#123;% endtip %&#125;</span><br><span class="line">&#123;% tip ban faa-parent animated-hover %&#125;&lt;p class=&quot;faa-flash&quot;&gt;ban&lt;/p&gt;&#123;% endtip %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><p>1.On DOM load（当页面加载时显示动画）</p><div class="tip warning faa-horizontal animated"><p>warning</p></div><div class="tip ban faa-flash animated"><p>ban</p></div><p>2.调整动画速度</p><div class="tip warning faa-horizontal animated faa-fast"><p>warning</p></div><div class="tip ban faa-flash animated faa-slow"><p>ban</p></div><p>3.On hover（当鼠标悬停时显示动画）</p><div class="tip warning faa-horizontal animated-hover"><p>warning</p></div><div class="tip ban faa-flash animated-hover"><p>ban</p></div><p>4.On parent hover（当鼠标悬停在父级元素时显示动画）</p><div class="tip warning faa-parent animated-hover"><p class="faa-horizontal">warning</p></div><div class="tip ban faa-parent animated-hover"><p class="faa-flash">ban</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="复选列表-checkbox"><a href="#复选列表-checkbox" class="headerlink" title="复选列表 checkbox"></a>复选列表 checkbox</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li><code>样式</code>: plus, minus, times</li><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123;% checkbox 纯文本测试 %&#125;</span><br><span class="line">&#123;% checkbox checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %&#125;</span><br><span class="line">&#123;% checkbox red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% checkbox green checked, 绿色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox yellow checked, 黄色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox cyan checked, 青色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox blue checked, 蓝色 + 默认选中 %&#125;</span><br><span class="line">&#123;% checkbox plus green checked, 增加 %&#125;</span><br><span class="line">&#123;% checkbox minus yellow checked, 减少 %&#125;</span><br><span class="line">&#123;% checkbox times red checked, 叉 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><div class='checkbox'><input type="checkbox" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="checkbox" />            <p>支持自定义颜色</p>            </div><div class='checkbox green checked'><input type="checkbox" checked="checked"/>            <p>绿色 + 默认选中</p>            </div><div class='checkbox yellow checked'><input type="checkbox" checked="checked"/>            <p>黄色 + 默认选中</p>            </div><div class='checkbox cyan checked'><input type="checkbox" checked="checked"/>            <p>青色 + 默认选中</p>            </div><div class='checkbox blue checked'><input type="checkbox" checked="checked"/>            <p>蓝色 + 默认选中</p>            </div><div class='checkbox plus green checked'><input type="checkbox" checked="checked"/>            <p>增加</p>            </div><div class='checkbox minus yellow checked'><input type="checkbox" checked="checked"/>            <p>减少</p>            </div><div class='checkbox times red checked'><input type="checkbox" checked="checked"/>            <p>叉</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="单选列表-radio"><a href="#单选列表-radio" class="headerlink" title="单选列表 radio"></a>单选列表 radio</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 样式参数（可选）, 文本（支持简单md） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li><code>颜色</code>: red,yellow,green,cyan,blue,gray</li><li><code>选中状态</code>: checked</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% radio 纯文本测试 %&#125;</span><br><span class="line">&#123;% radio checked, 支持简单的 [markdown](https://guides.github.com/features/mastering-markdown/) 语法 %&#125;</span><br><span class="line">&#123;% radio red, 支持自定义颜色 %&#125;</span><br><span class="line">&#123;% radio green, 绿色 %&#125;</span><br><span class="line">&#123;% radio yellow, 黄色 %&#125;</span><br><span class="line">&#123;% radio cyan, 青色 %&#125;</span><br><span class="line">&#123;% radio blue, 蓝色 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><div class='checkbox'><input type="radio" />            <p>纯文本测试</p>            </div><div class='checkbox checked'><input type="radio" checked="checked"/>            <p>支持简单的 <a href="https://guides.github.com/features/mastering-markdown/">markdown</a> 语法</p>            </div><div class='checkbox red'><input type="radio" />            <p>支持自定义颜色</p>            </div><div class='checkbox green'><input type="radio" />            <p>绿色</p>            </div><div class='checkbox yellow'><input type="radio" />            <p>黄色</p>            </div><div class='checkbox cyan'><input type="radio" />            <p>青色</p>            </div><div class='checkbox blue'><input type="radio" />            <p>蓝色</p>            </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="时间轴-timeline"><a href="#时间轴-timeline" class="headerlink" title="时间轴 timeline"></a>时间轴 timeline</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间线标题（可选）[,color] %&#125;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&lt;!-- timeline 时间节点（标题） --&gt;</span><br><span class="line">正文内容</span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li><code>title</code>:标题/时间线</li><li><code>color</code>:<code>timeline</code>颜色:default(留空) / blue / pink / red / purple / orange / green</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&#123;% timeline 时间轴样式,blue %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-07-24 [2.6.6 -&gt; 3.0](https://github.com/volantis-x/hexo-theme-volantis/releases) --&gt;</span><br><span class="line"></span><br><span class="line">1. 如果有 `hexo-lazyload-image` 插件，需要删除并重新安装最新版本，设置 `lazyload.isSPA: true`。</span><br><span class="line">2. 2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 `use_cdn: true` 则需要删除。</span><br><span class="line">3. 2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</span><br><span class="line">4. 2.x 版本的置顶 `top: true` 改为了 `pin: true`，并且同样适用于 `layout: page` 的页面。</span><br><span class="line">5. 如果使用了 `hexo-offline` 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-05-15 [2.6.3 -&gt; 2.6.6](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6) --&gt;</span><br><span class="line"></span><br><span class="line">不需要额外处理。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- timeline 2020-04-20 [2.6.2 -&gt; 2.6.3](https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3) --&gt;</span><br><span class="line"></span><br><span class="line">1. 全局搜索 `seotitle` 并替换为 `seo_title`。</span><br><span class="line">2. group 组件的索引规则有变，使用 group 组件的文章内，`group: group_name` 对应的组件名必须是 `group_name`。</span><br><span class="line">2. group 组件的列表名优先显示文章的 `short_title` 其次是 `title`。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtimeline --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtimeline %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><div class="timeline blue"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>时间轴样式</p></div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-07-24 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases">2.6.6 -&gt; 3.0</a></p></div></div><div class='timeline-item-content'><ol><li>如果有 <code>hexo-lazyload-image</code> 插件，需要删除并重新安装最新版本，设置 <code>lazyload.isSPA: true</code>。</li><li>2.x 版本的 css 和 js 不适用于 3.x 版本，如果使用了 <code>use_cdn: true</code> 则需要删除。</li><li>2.x 版本的 fancybox 标签在 3.x 版本中被重命名为 gallery 。</li><li>2.x 版本的置顶 <code>top: true</code> 改为了 <code>pin: true</code>，并且同样适用于 <code>layout: page</code> 的页面。</li><li>如果使用了 <code>hexo-offline</code> 插件，建议卸载，3.0 版本默认开启了 pjax 服务。</li></ol></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-05-15 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.6">2.6.3 -&gt; 2.6.6</a></p></div></div><div class='timeline-item-content'><p>不需要额外处理。</p></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>2020-04-20 <a href="https://github.com/volantis-x/hexo-theme-volantis/releases/tag/2.6.3">2.6.2 -&gt; 2.6.3</a></p></div></div><div class='timeline-item-content'><ol><li>全局搜索 <code>seotitle</code> 并替换为 <code>seo_title</code>。</li><li>group 组件的索引规则有变，使用 group 组件的文章内，<code>group: group_name</code> 对应的组件名必须是 <code>group_name</code>。</li><li>group 组件的列表名优先显示文章的 <code>short_title</code> 其次是 <code>title</code>。</li></ol></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="链接卡片-link"><a href="#链接卡片-link" class="headerlink" title="链接卡片 link"></a>链接卡片 link</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 标题, 链接, 图片链接（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% link 稚的小窝, https://www.azhezhezhe.com, https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092015138.png %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><div class="tag link"><a class="link-card" title="稚的小窝" href="https://www.azhezhezhe.com"><div class="left"><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092015138.png"/></div><div class="right"><p class="text">稚的小窝</p><p class="url">https://www.azhezhezhe.com</p></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="按钮-btns"><a href="#按钮-btns" class="headerlink" title="按钮 btns"></a>按钮 btns</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns 样式参数 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% cell 标题, 链接, 图片或者图标 %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li>圆角样式：rounded, circle</li><li>增加文字样式：可以在容器内增加 <code>&lt;b&gt;</code>标题<code>&lt;/b&gt;</code>和<code>&lt;p&gt;</code>描述文字<code>&lt;/p&gt;</code></li><li>布局方式：<br>默认为自动宽度，适合视野内只有一两个的情况。</li></ol><div class="table-container"><table><thead><tr><th>参数</th><th>含义</th></tr></thead><tbody><tr><td>wide</td><td>宽一点的按钮</td></tr><tr><td>fill</td><td>填充布局，自动铺满至少一行，多了会换行</td></tr><tr><td>center</td><td>居中，按钮之间是固定间距</td></tr><tr><td>around</td><td>居中分散</td></tr><tr><td>grid2</td><td>等宽最多2列，屏幕变窄会适当减少列数</td></tr><tr><td>grid3</td><td>等宽最多3列，屏幕变窄会适当减少列数</td></tr><tr><td>grid4</td><td>等宽最多4列，屏幕变窄会适当减少列数</td></tr><tr><td>grid5</td><td>等宽最多5列，屏幕变窄会适当减少列数</td></tr></tbody></table></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><ol><li><p>如果需要显示类似「团队成员」之类的一组含有头像的链接</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"> &#123;% btns circle grid5 %&#125;</span><br><span class="line">&#123;% cell 稚, https://azhezhezhe.com, https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092021673.png%&#125;</span><br><span class="line">&#123;% cell 稚, https://azhezhezhe.com, https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092021673.png%&#125;</span><br><span class="line">&#123;% cell 稚, https://azhezhezhe.com, https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092021673.png%&#125;</span><br><span class="line">&#123;% cell 稚, https://azhezhezhe.com, https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092021673.png%&#125;</span><br><span class="line">&#123;% cell 稚, https://azhezhezhe.com, https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092021673.png%&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></li><li><p>或者含有图标的按钮</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% btns rounded grid5 %&#125;</span><br><span class="line">&#123;% cell 下载源码, /, fas fa-download %&#125;</span><br><span class="line">&#123;% cell 查看文档, /, fas fa-book-open %&#125;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></li><li><p>圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> &#123;% btns circle center grid5 %&#125;</span><br><span class="line">&lt;a href=&#x27;https://azhezhezhe.com&#x27;&gt;</span><br><span class="line">  &lt;i class=&#x27;fab fa-apple&#x27;&gt;&lt;/i&gt;</span><br><span class="line">  &lt;b&gt;稚的小窝&lt;/b&gt;</span><br><span class="line">  &#123;% p red, 其中一个 %&#125;</span><br><span class="line">  &lt;img src=&#x27;https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092024312.png&#x27;&gt;</span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&lt;a href=&#x27;https://azhezhezhe.com&#x27;&gt;</span><br><span class="line">  &lt;i class=&#x27;fab fa-apple&#x27;&gt;&lt;/i&gt;</span><br><span class="line">  &lt;b&gt;稚的小窝&lt;/b&gt;</span><br><span class="line">  &#123;% p green, 还是那一个 %&#125;</span><br><span class="line">  &lt;img src=&#x27;https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092024312.png&#x27;&gt;</span><br><span class="line">&lt;/a&gt;</span><br><span class="line">&#123;% endbtns %&#125;</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><ol><li><p>如果需要显示类似「团队成员」之类的一组含有头像的链接</p><div class="btns circle grid5">         <a class="button" href='https://azhezhezhe.com' title='稚'><img src='https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092021673.png'>稚</a><a class="button" href='https://azhezhezhe.com' title='稚'><img src='https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092021673.png'>稚</a><a class="button" href='https://azhezhezhe.com' title='稚'><img src='https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092021673.png'>稚</a><a class="button" href='https://azhezhezhe.com' title='稚'><img src='https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092021673.png'>稚</a><a class="button" href='https://azhezhezhe.com' title='稚'><img src='https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092021673.png'>稚</a>       </div></li><li><p>或者含有图标的按钮</p><div class="btns rounded grid5">         <a class="button" href='/' title='下载源码'><i class='fas fa-download'></i>下载源码</a><a class="button" href='/' title='查看文档'><i class='fas fa-book-open'></i>查看文档</a>       </div></li><li><p>圆形图标 + 标题 + 描述 + 图片 + 网格5列 + 居中</p><div class="btns circle center grid5">         <a href='https://azhezhezhe.com'><i class='fab fa-apple'></i><b>稚的小窝</b><p class='p red'>其中一个</p><img src='https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092024312.png'></a><a href='https://azhezhezhe.com'><i class='fab fa-apple'></i><b>稚的小窝</b><p class='p green'>还是那一个</p><img src='https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301092024312.png'></a>       </div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="github徽标-ghbdage"><a href="#github徽标-ghbdage" class="headerlink" title="github徽标 ghbdage"></a>github徽标 ghbdage</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage [right],[left],[logo]||[color],[link],[title]||[option] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li><code>left</code>：徽标左边的信息，必选参数。</li><li><code>right</code>: 徽标右边的信息，必选参数，</li><li><code>logo</code>：徽标图标，图标名称详见<a href="https://simpleicons.org/">simpleicons</a>，可选参数。</li><li><code>color</code>：徽标右边的颜色，可选参数。</li><li><code>link</code>：指向的链接，可选参数。</li><li><code>title</code>：徽标的额外信息，可选参数。主要用于优化SEO，但<code>object</code>标签不会像<code>a</code>标签一样在鼠标悬停显示<code>title</code>信息。</li><li><code>option</code>：自定义参数，支持<a href="https://shields.io/">shields.io</a>的全部API参数支持，具体参数可以参看上文中的拓展写法示例。形式为<code>name1=value2&amp;name2=value2</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><ol><li>基本参数,定义徽标左右文字和图标</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Theme,Butterfly %&#125;</span><br><span class="line">&#123;% bdage Frame,Hexo,hexo %&#125;</span><br></pre></td></tr></table></figure><ol><li>信息参数，定义徽标右侧内容背景色，指向链接</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage CDN,JsDelivr,jsDelivr||abcdef,https://metroui.org.ua/index.html,本站使用JsDelivr为静态资源提供CDN加速 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割</span><br><span class="line">&#123;% bdage Source,GitHub,GitHub||,https://github.com/ %&#125;</span><br></pre></td></tr></table></figure><ol><li>拓展参数，支持shields的API的全部参数内容</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bdage Hosted,Vercel,Vercel||brightgreen,https://vercel.com/,本站采用双线部署，默认线路托管于Vercel||style=social&amp;logoWidth=20 %&#125;</span><br><span class="line">//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割</span><br><span class="line">&#123;% bdage Hosted,Vercel,Vercel||||style=social&amp;logoWidth=20&amp;logoColor=violet %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><ol><li>基本参数,定义徽标左右文字和图标</li></ol><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Butterfly-Theme-orange?logo=&color=orange&link=&"></object><object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Hexo-Frame-orange?logo=hexo&color=orange&link=&"></object><ol><li>信息参数，定义徽标右侧内容背景色，指向链接</li></ol><object class="ghbdage" style="margin-inline:5px" title="本站使用JsDelivr为静态资源提供CDN加速" standby="loading..." data="https://img.shields.io/badge/JsDelivr-CDN-orange?logo=jsDelivr&color=abcdef&link=https://metroui.org.ua/index.html&"></object>//如果是跨顺序省略可选参数，仍然需要写个逗号,用作分割<object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/GitHub-Source-orange?logo=GitHub&color=orange&link=https://github.com/&"></object><ol><li>拓展参数，支持shields的API的全部参数内容</li></ol><object class="ghbdage" style="margin-inline:5px" title="本站采用双线部署，默认线路托管于Vercel" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=brightgreen&link=https://vercel.com/&style=social&logoWidth=20"></object>//如果是跨顺序省略可选参数组，仍然需要写双竖线||用作分割<object class="ghbdage" style="margin-inline:5px" title="" standby="loading..." data="https://img.shields.io/badge/Vercel-Hosted-orange?logo=Vercel&color=orange&link=&style=social&logoWidth=20&logoColor=violet"></object><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="网站卡片-sites"><a href="#网站卡片-sites" class="headerlink" title="网站卡片 sites"></a>网站卡片 sites</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% site 标题, url=链接, screenshot=截图链接, avatar=头像链接（可选）, description=描述（可选） %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;% sitegroup %&#125;</span><br><span class="line">&#123;% site 稚的小窝1, url=https://azhezhezhe.com, screenshot=https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091601071.jpg, avatar=https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091559854.png, description=描述 %&#125;</span><br><span class="line">&#123;% site 稚的小窝2, url=https://azhezhezhe.com, screenshot=https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091601071.jpg, avatar=https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091559854.png, description=描述 %&#125;</span><br><span class="line">&#123;% site 稚的小窝3, url=https://azhezhezhe.com, screenshot=https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091601071.jpg, avatar=https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091559854.png, description=描述 %&#125;</span><br><span class="line">&#123;% site 稚的小窝4, url=https://azhezhezhe.com, screenshot=https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091601071.jpg, avatar=https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091559854.png, description=描述 %&#125;</span><br><span class="line">&#123;% site 稚的小窝5, url=https://azhezhezhe.com, screenshot=https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091601071.jpg, avatar=https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091559854.png, description=描述 %&#125;</span><br><span class="line">&#123;% endsitegroup %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><div class="site-card-group"><a class="site-card" href="https://azhezhezhe.com"><div class="img"><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091601071.jpg"/></div><div class="info"><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091559854.png"/><span class="title">稚的小窝1</span><span class="desc">描述</span></div></a><a class="site-card" href="https://azhezhezhe.com"><div class="img"><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091601071.jpg"/></div><div class="info"><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091559854.png"/><span class="title">稚的小窝2</span><span class="desc">描述</span></div></a><a class="site-card" href="https://azhezhezhe.com"><div class="img"><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091601071.jpg"/></div><div class="info"><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091559854.png"/><span class="title">稚的小窝3</span><span class="desc">描述</span></div></a><a class="site-card" href="https://azhezhezhe.com"><div class="img"><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091601071.jpg"/></div><div class="info"><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091559854.png"/><span class="title">稚的小窝4</span><span class="desc">描述</span></div></a><a class="site-card" href="https://azhezhezhe.com"><div class="img"><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091601071.jpg"/></div><div class="info"><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091559854.png"/><span class="title">稚的小窝5</span><span class="desc">描述</span></div></a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="行内图片-inlineimage"><a href="#行内图片-inlineimage" class="headerlink" title="行内图片 inlineimage"></a>行内图片 inlineimage</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inlineimage 图片链接, height=高度（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li><code>高度</code>：height=20px</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif %&#125; 一段话。</span><br><span class="line"></span><br><span class="line">这又是 &#123;% inlineimage https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif, height=40px %&#125; 一段话。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><p>这是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/0000.gif" style="height:1.5em"/> 一段话。</p><p>这又是 <img no-lazy class="inline" src="https://cdn.jsdelivr.net/gh/volantis-x/cdn-emoji/aru-l/5150.gif" style="height:40px;"/> 一段话。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="单张图片-image"><a href="#单张图片-image" class="headerlink" title="单张图片 image"></a>单张图片 image</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image 链接, width=宽度（可选）, height=高度（可选）, alt=描述（可选）, bg=占位颜色（可选） %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li>图片宽度高度：width=300px, height=32px</li><li>图片描述：alt=图片描述（butterfly需要在主题配置文件中开启图片描述）</li><li>占位背景色：bg=#f2f2f2</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><ol><li><p>添加描述：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png, alt=女孩。 %&#125;</span><br></pre></td></tr></table></figure></li><li><p>指定宽度</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png, width=400px %&#125;</span><br></pre></td></tr></table></figure></li><li><p>指定宽度并添加描述：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png, width=400px, alt=美丽女孩。 %&#125;</span><br></pre></td></tr></table></figure></li><li><p>设置占位背景色：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% image https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png, width=400px, bg=#1D0C04, alt=优化不同宽度浏览的观感 %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><ol><li>添加描述：</li></ol>   <div class="img-wrap"><div class="img-bg"><img class="img" src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png" alt="女孩。"/></div><span class="image-caption">女孩。</span></div><ol><li>指定宽度</li></ol>   <div class="img-wrap"><div class="img-bg"><img class="img" src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png" style="width:400px;"/></div></div><ol><li>指定宽度并添加描述：</li></ol>   <div class="img-wrap"><div class="img-bg"><img class="img" src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png" alt="美丽女孩。" style="width:400px;"/></div><span class="image-caption">美丽女孩。</span></div><ol><li>设置占位背景色：<div class="img-wrap"><div class="img-bg" style="background:#1D0C04"><img class="img" src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png" alt="优化不同宽度浏览的观感" style="width:400px;"/></div><span class="image-caption">优化不同宽度浏览的观感</span></div></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="音频-audio"><a href="#音频-audio" class="headerlink" title="音频 audio"></a>音频 audio</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio 音频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio https://www.azhezhezhe.com/music/xingrongdemo.mp3 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><div class="audio"><audio controls preload><source src='https://www.azhezhezhe.com/music/xingrongdemo.mp3' type='audio/mp3'>Your browser does not support the audio tag.</audio></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="视频-video"><a href="#视频-video" class="headerlink" title="视频 video"></a>视频 video</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video 视频链接 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li><code>对齐方向</code>：left, center, right</li><li><code>列数</code>：逗号后面直接写列数，支持 1 ～ 4 列。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><div class="video"><video controls preload><source src='https://github.com/volantis-x/volantis-docs/releases/download/assets/IMG_0341.mov' type='video/mp4'>Your browser does not support the video tag.</video></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="相册-gallery"><a href="#相册-gallery" class="headerlink" title="相册 gallery"></a>相册 gallery</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p>1.gallerygroup 相册图库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&#123;% galleryGroup name description link img-url %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">markdown 圖片格式</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ul><li>gallerygroup 相册图库</li></ul><div class="table-container"><table><thead><tr><th>参数名</th><th>释义</th></tr></thead><tbody><tr><td>name</td><td>图库名字</td></tr><tr><td>description</td><td>图库描述</td></tr><tr><td>link</td><td>链接到对应相册的地址</td></tr><tr><td>img-url</td><td>图库封面</td></tr></tbody></table></div><ul><li><p>gallery 相册</p><p>区别于旧版的Gallery相册,新的Gallery相册会自动根据图片长度进行排版，书写也更加方便，与markdown格式一样。可根据需要插入到相应的md。无需再自己配置长宽。<strong>建议在粘贴时故意使用长短、大小、横竖不一的图片</strong>，会有更好的效果。（尺寸完全相同的图片只会平铺输出，效果很糟糕）</p></li></ul><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p>1.gallerygroup 相册图库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;gallery-group-main&quot;&gt;</span><br><span class="line">&#123;% galleryGroup 测试1 这里是副标题 &#x27;&#x27; https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091826641.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup 测试1 这里是副标题  &#x27;&#x27; https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091826965.jpg %&#125;</span><br><span class="line">&#123;% galleryGroup 测试1 这里是副标题  &#x27;&#x27; https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091826107.jpg %&#125;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><p>2.gallery 相册</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![](https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png)</span><br><span class="line">![](https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><p>1.gallerygroup 相册图库</p><div class="gallery-group-main">  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">测试1</div>  <p>这里是副标题</p>  <a href='https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091826641.jpg'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">测试1</div>  <p>这里是副标题</p>  <a href='https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091826965.jpg'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='/' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">测试1</div>  <p>这里是副标题</p>  <a href='https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091826107.jpg'></a>  </figcaption>  </figure></div><p>2.gallery 相册</p><div class="fj-gallery"><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png" alt=""><br><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png" alt=""></p>          </div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="折叠框-folding"><a href="#折叠框-folding" class="headerlink" title="折叠框 folding"></a>折叠框 folding</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p>1.gallerygroup 相册图库</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">MARKDOWN</span><br><span class="line">&#123;% folding 参数（可选）, 标题 %&#125;</span><br><span class="line">![](https://cdn.jsdelivr.net/gh/volantis-x/cdn-wallpaper/abstract/41F215B9-261F-48B4-80B5-4E86E165259E.jpeg)</span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><ol><li><code>颜色</code>：blue, cyan, green, yellow, red</li><li><code>状态</code>：状态填写 open 代表默认打开。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">&#123;% folding 查看图片测试 %&#125;</span><br><span class="line"></span><br><span class="line">![](https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091826641.jpg)</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding cyan open, 查看默认打开的折叠框 %&#125;</span><br><span class="line"></span><br><span class="line">这是一个默认打开的折叠框。</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding green, 查看代码测试 %&#125;</span><br><span class="line">假装这里有代码块（代码块没法嵌套代码块）</span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding yellow, 查看列表测试 %&#125;</span><br><span class="line"></span><br><span class="line">- haha</span><br><span class="line">- hehe</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding red, 查看嵌套测试 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding blue, 查看嵌套测试2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% folding 查看嵌套测试3 %&#125;</span><br><span class="line"></span><br><span class="line">hahaha &lt;span&gt;&lt;img src=&#x27;https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png&#x27; style=&#x27;height:24px&#x27;&gt;&lt;/span&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endfolding %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><details class="folding-tag" ><summary> 查看图片测试 </summary>              <div class='content'>              <p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091826641.jpg" alt=""></p>              </div>            </details><details class="folding-tag" cyan open><summary> 查看默认打开的折叠框 </summary>              <div class='content'>              <p>这是一个默认打开的折叠框。</p>              </div>            </details><details class="folding-tag" green><summary> 查看代码测试 </summary>              <div class='content'>              <p>假装这里有代码块（代码块没法嵌套代码块）</p>              </div>            </details><details class="folding-tag" yellow><summary> 查看列表测试 </summary>              <div class='content'>              <ul><li>haha</li><li>hehe</li></ul>              </div>            </details><details class="folding-tag" red><summary> 查看嵌套测试 </summary>              <div class='content'>              <details class="folding-tag" blue><summary> 查看嵌套测试2 </summary>              <div class='content'>              <details class="folding-tag" ><summary> 查看嵌套测试3 </summary>              <div class='content'>              <p>hahaha <span><img src='https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png' style='height:24px'></span></p>              </div>            </details>              </div>            </details>              </div>            </details><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="分栏-tab"><a href="#分栏-tab" class="headerlink" title="分栏 tab"></a>分栏 tab</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs Unique name, [index] %&#125;</span><br><span class="line">&lt;!-- tab [Tab caption] [@icon] --&gt;</span><br><span class="line">Any content (support inline tags too).</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li>Unique name :<ul><li>选项卡块标签的唯一名称，不带逗号。</li><li>将在#id中用作每个标签及其索引号的前缀。</li><li>如果名称中包含空格，则对于生成#id，所有空格将由破折号代替。</li><li>仅当前帖子/页面的URL必须是唯一的！</li></ul></li><li>[index]:<ul><li>活动选项卡的索引号。</li><li>如果未指定，将选择第一个标签（1）。</li><li>如果index为-1，则不会选择任何选项卡。</li><li>可选参数。</li></ul></li><li>[Tab caption]:<ul><li>当前选项卡的标题。</li><li>如果未指定标题，则带有制表符索引后缀的唯一名称将用作制表符的标题。</li><li>如果未指定标题，但指定了图标，则标题将为空。</li><li>可选参数。</li></ul></li><li>[@icon]:<ul><li>FontAwesome图标名称（全名，看起来像“ fas fa-font”）</li><li>可以指定带空格或不带空格；</li><li>例如’Tab caption @icon’ 和 ‘Tab caption@icon’.</li><li>可选参数。</li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p>1.Demo 1 - 预设选择第一个【默认】</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>2.Demo 2 - 预设选择tabs</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test2, 3 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>3.Demo 3 - 没有预设值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test3, -1 %&#125;</span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 1.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 2.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line">**This is Tab 3.**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test4 %&#125;</span><br><span class="line">&lt;!-- tab 第一个Tab --&gt;</span><br><span class="line">**tab名字为第一个Tab**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab @fab fa-apple-pay --&gt;</span><br><span class="line">**只有图标 没有Tab名字**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab 炸弹@fas fa-bomb --&gt;</span><br><span class="line">**名字+icon**</span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><p>1.Demo 1 - 预设选择第一个【默认】</p><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li><li class="tab"><button type="button" data-href="#test1-3">test1 3</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test1-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>2.Demo 2 - 预设选择tabs</p><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab"><button type="button" data-href="#test2-2">test2 2</button></li><li class="tab active"><button type="button" data-href="#test2-3">test2 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test2-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content active" id="test2-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>3.Demo 3 - 没有预设值</p><div class="tabs" id="test3"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test3-1">test3 1</button></li><li class="tab"><button type="button" data-href="#test3-2">test3 2</button></li><li class="tab"><button type="button" data-href="#test3-3">test3 3</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test3-1"><p><strong>This is Tab 1.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-2"><p><strong>This is Tab 2.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test3-3"><p><strong>This is Tab 3.</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><p>4.Demo 4 - 自定义Tab名 + 只有icon + icon和Tab名</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一个Tab</button></li><li class="tab"><button type="button" data-href="#test4-2"><i class="fab fa-apple-pay" style="text-align: center;"></i></button></li><li class="tab"><button type="button" data-href="#test4-3"><i class="fas fa-bomb"></i>炸弹</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p><strong>tab名字为第一个Tab</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p><strong>只有图标 没有Tab名字</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><p><strong>名字+icon</strong></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="诗词标签-poem"><a href="#诗词标签-poem" class="headerlink" title="诗词标签 poem"></a>诗词标签 poem</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-2">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-3">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><ol><li><code>title</code>：诗词标题</li><li><code>author</code>：作者，可以不写</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;% poem 水调歌头,苏轼 %&#125;</span><br><span class="line">丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。</span><br><span class="line">明月几时有？把酒问青天。</span><br><span class="line">不知天上宫阙，今夕是何年？</span><br><span class="line">我欲乘风归去，又恐琼楼玉宇，高处不胜寒。</span><br><span class="line">起舞弄清影，何似在人间？</span><br><span class="line"></span><br><span class="line">转朱阁，低绮户，照无眠。</span><br><span class="line">不应有恨，何事长向别时圆？</span><br><span class="line">人有悲欢离合，月有阴晴圆缺，此事古难全。</span><br><span class="line">但愿人长久，千里共婵娟。</span><br><span class="line">&#123;% endpoem %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><div class='poem'><div class='poem-title'>水调歌头</div><div class='poem-author'>苏轼</div><p>丙辰中秋，欢饮达旦，大醉，作此篇，兼怀子由。<br>明月几时有？把酒问青天。<br>不知天上宫阙，今夕是何年？<br>我欲乘风归去，又恐琼楼玉宇，高处不胜寒。<br>起舞弄清影，何似在人间？</p><p>转朱阁，低绮户，照无眠。<br>不应有恨，何事长向别时圆？<br>人有悲欢离合，月有阴晴圆缺，此事古难全。<br>但愿人长久，千里共婵娟。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="阿里图标-icon"><a href="#阿里图标-icon" class="headerlink" title="阿里图标 icon"></a>阿里图标 icon</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon [icon-xxxx],[font-size] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li><code>icon-xxxx</code>：表示图标<code>font-class</code>,可以在自己的阿里矢量图标库项目的<code>font-class</code>引用方案内查询并复制。</li><li><code>font-size</code>：表示图标大小，直接填写数字即可，单位为<code>em</code>。图标大小默认值为<code>1em</code>。</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% icon icon-rat_zi %&#125;&#123;% icon icon-rat,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-ox_chou,3 %&#125;&#123;% icon icon-ox,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-tiger_yin,5 %&#125;&#123;% icon icon-tiger,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-rabbit_mao,1 %&#125;&#123;% icon icon-rabbit,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dragon_chen,3 %&#125;&#123;% icon icon-dragon,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-snake_si,5 %&#125;&#123;% icon icon-snake,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-horse_wu %&#125;&#123;% icon icon-horse,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-goat_wei,3 %&#125;&#123;% icon icon-goat,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-monkey_shen,5 %&#125;&#123;% icon icon-monkey,6 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-rooster_you %&#125;&#123;% icon icon-rooster,2 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-dog_xu,3 %&#125;&#123;% icon icon-dog,4 %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% icon icon-boar_hai,5 %&#125;&#123;% icon icon-boar,6 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rat_zi"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rat"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-ox_chou"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-ox"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-tiger_yin"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-tiger"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rabbit_mao"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rabbit"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dragon_chen"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dragon"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-snake_si"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-snake"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-horse_wu"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-horse"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-goat_wei"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-goat"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-monkey_shen"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-monkey"></use></svg><svg class="icon" style="width:1em; height:1em" aria-hidden="true"><use xlink:href="#icon-rooster_you"></use></svg><svg class="icon" style="width:2em; height:2em" aria-hidden="true"><use xlink:href="#icon-rooster"></use></svg><svg class="icon" style="width:3em; height:3em" aria-hidden="true"><use xlink:href="#icon-dog_xu"></use></svg><svg class="icon" style="width:4em; height:4em" aria-hidden="true"><use xlink:href="#icon-dog"></use></svg><svg class="icon" style="width:5em; height:5em" aria-hidden="true"><use xlink:href="#icon-boar_hai"></use></svg><svg class="icon" style="width:6em; height:6em" aria-hidden="true"><use xlink:href="#icon-boar"></use></svg><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="注释-notation"><a href="#注释-notation" class="headerlink" title="注释 notation"></a>注释 notation</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota [label] , [text] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li><code>label</code>: 注释词汇</li><li><code>text</code>: 悬停显示的注解内容</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% nota 把鼠标移动到我上面试试 ,可以看到注解内容出现在顶栏 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><p><span class='nota' data-nota='可以看到注解内容出现在顶栏'>把鼠标移动到我上面试试</span></p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="气泡注释-bubble"><a href="#气泡注释-bubble" class="headerlink" title="气泡注释 bubble"></a>气泡注释 bubble</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bubble [content] , [notation] ,[background-color] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li><code>content</code>: 注释词汇</li><li><code>notation</code>: 悬停显示的注解内容</li><li><code>background-color</code>: 可选，气泡背景色。默认为“#71a4e3”</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的&#123;% bubble 兄弟相邻选择器,&quot;例如 h1 + p &#123;margin-top:50px;&#125;&quot;  %&#125;，&#123;% bubble flex布局,&quot;Flex 是 Flexible Box 的缩写，意为&quot;弹性布局&quot;，用来为盒状模型提供最大的灵活性&quot;,&quot;#ec5830&quot; %&#125;，&#123;% bubble transform变换,&quot;transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。&quot;,&quot;#1db675&quot; %&#125;，animation的&#123;% bubble 贝塞尔速度曲线,&quot;贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋&quot;,&quot;#de4489&quot; %&#125;写法，还有今天刚看到的&#123;% bubble clip-path,&quot;clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。&quot;,&quot;#868fd7&quot; %&#125;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><p>最近我学到了不少新玩意儿（虽然对很多大佬来说这些已经是旧技术了），比如CSS的<span class="bubble-content">兄弟相邻选择器</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#71a4e3;">例如 h1 + p {margin-top:50px;}</span>&lt;/span&gt;，<span class="bubble-content">flex布局</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#ec5830;">Flex 是 Flexible Box 的缩写，意为弹性布局”，用来为盒状模型提供最大的灵活性”</span>&lt;/span&gt;，<span class="bubble-content">transform变换</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#1db675;">transform 属性向元素应用 2D 或 3D 转换。该属性允许我们对元素进行旋转、缩放、移动或倾斜。</span>&lt;/span&gt;，animation的<span class="bubble-content">贝塞尔速度曲线</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#de4489;">贝塞尔曲线(Bézier curve)，又称贝兹曲线或贝济埃曲线，是应用于二维图形应用程序的数学曲线。一般的矢量图形软件通过它来精确画出曲线，贝兹曲线由线段与节点组成，节点是可拖动的支点，线段像可伸缩的皮筋</span>&lt;/span&gt;写法，还有今天刚看到的<span class="bubble-content">clip-path</span><span class="bubble-notation"><span class="bubble-item" style="background-color:#868fd7;">clip-path属性使用裁剪方式创建元素的可显示区域。区域内的部分显示，区域外的隐藏。</span>&lt;/span&gt;属性。这些对我来说很新颖的概念狠狠的冲击着我以前积累起来的设计思路。</p><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="引用文献-reference"><a href="#引用文献-reference" class="headerlink" title="引用文献 reference"></a>引用文献 reference</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% referto [id] , [literature] %&#125;</span><br><span class="line">&#123;% referfrom [id] , [literature] , [url] %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li>referto 引用上标<ul><li><code>id</code>: 上标序号内容，需与referfrom标签的id对应才能实现跳转</li><li><code>literature</code>: 引用的参考文献名称</li></ul></li><li>referfrom 引用出处<ul><li><code>id</code>: 序号内容，需与referto标签的id对应才能实现 跳转</li><li><code>literature</code>: 引用的参考文献名称</li><li><code>url</code>: 引用的参考文献链接，可省略</li></ul></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">稚的小窝(azhezhezhe.com)是一个私人性质的博客&#123;% referto &#x27;[1]&#x27; , &#x27;稚の小窝简介&#x27;  %&#125;，博客采用Hexo框架 &#123;% referto &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27; %&#125;，Butterfly主题&#123;% referto &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">本项目参考了Volantis&#123;% referto &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27; %&#125;的标签样式。引入`[tag].js`，并针对`butterfly`主题修改了相应的`[tag].styl`。在此鸣谢`Volantis`主题众开发者。</span><br><span class="line">主要参考内容包括各个volantis的内置标签插件文档&#123;% referto &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27; %&#125;</span><br><span class="line">Butterfly主题的各个衍生魔改&#123;% referto &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27; %&#125;&#123;% referto &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27; %&#125;&#123;% referto &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27; %&#125;&#123;% referto &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27; %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% referfrom &#x27;[1]&#x27;,&#x27;稚的小窝&#x27;,&#x27;https:azhezhezhe.com&#x27; %&#125;</span><br><span class="line">&#123;% referfrom &#x27;[2]&#x27;,&#x27;Hexo中文文档&#x27;,&#x27;https://hexo.io/zh-cn/docs/&#x27; %&#125;</span><br><span class="line">&#123;% referfrom &#x27;[3]&#x27;,&#x27;Butterfly 安装文档(一) 快速开始&#x27;,&#x27;https://butterfly.js.org/posts/21cfbf15/&#x27; %&#125;</span><br><span class="line">&#123;% referfrom &#x27;[4]&#x27;,&#x27;hexo-theme-volantis 标签插件&#x27;,&#x27;https://volantis.js.org/v5/tag-plugins/&#x27; %&#125;</span><br><span class="line">&#123;% referfrom &#x27;[5]&#x27;,&#x27;Volantis文档:内置标签插件&#x27;,&#x27;https://volantis.js.org/tag-plugins/&#x27; %&#125;</span><br><span class="line">&#123;% referfrom &#x27;[6]&#x27;,&#x27;Butterfly 安装文档:标签外挂（Tag Plugins&#x27;,&#x27;https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89&#x27; %&#125;</span><br><span class="line">&#123;% referfrom &#x27;[7]&#x27;,&#x27;小弋の生活馆全样式预览&#x27;,&#x27;https://lovelijunyi.gitee.io/posts/c898.html&#x27; %&#125;</span><br><span class="line">&#123;% referfrom &#x27;[8]&#x27;,&#x27;l-lin-font-awesome-animation&#x27;,&#x27;https://github.com/l-lin/font-awesome-animation&#x27; %&#125;</span><br><span class="line">&#123;% referfrom &#x27;[9]&#x27;,&#x27;小康的butterfly主题使用文档&#x27;,&#x27;https://www.antmoe.com/posts/3b43914f/&#x27; %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><p>稚的小窝(azhezhezhe.com)是一个私人性质的博客<span class="hidden-anchor" id="referto_[1]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[1]">[1]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">稚の小窝简介</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;，博客采用Hexo框架<span class="hidden-anchor" id="referto_[2]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[2]">[2]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Hexo中文文档</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;，Butterfly主题<span class="hidden-anchor" id="referto_[3]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[3]">[3]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档(一) 快速开始</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;</p><p>本项目参考了Volantis<span class="hidden-anchor" id="referto_[4]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[4]">[4]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">hexo-theme-volantis 标签插件</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;的标签样式。引入<code>[tag].js</code>，并针对<code>butterfly</code>主题修改了相应的<code>[tag].styl</code>。在此鸣谢<code>Volantis</code>主题众开发者。<br>主要参考内容包括各个volantis的内置标签插件文档<span class="hidden-anchor" id="referto_[5]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[5]">[5]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Volantis文档:内置标签插件</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<br>Butterfly主题的各个衍生魔改<span class="hidden-anchor" id="referto_[6]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[6]">[6]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">Butterfly 安装文档:标签外挂（Tag Plugins</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[7]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[7]">[7]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小弋の生活馆全样式预览</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[8]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[8]">[8]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">l-lin-font-awesome-animation</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;<span class="hidden-anchor" id="referto_[9]">&lt;/span&gt;<sup class="reference"><a href="#referfrom_[9]">[9]</a></sup><span class="reference-bubble"><span class="reference-item"><span class="reference-literature">小康的butterfly主题使用文档</span><span class="reference-title">参考资料</span>&lt;/span&gt;&lt;/span&gt;</p><div class="reference-source"><span class="hidden-anchor" id="referfrom_[1]"></span><a class="reference-anchor" href="#referto_[1]">[1]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https:azhezhezhe.com">稚的小窝</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[2]"></span><a class="reference-anchor" href="#referto_[2]">[2]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://hexo.io/zh-cn/docs/">Hexo中文文档</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[3]"></span><a class="reference-anchor" href="#referto_[3]">[3]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/21cfbf15/">Butterfly 安装文档(一) 快速开始</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[4]"></span><a class="reference-anchor" href="#referto_[4]">[4]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/v5/tag-plugins/">hexo-theme-volantis 标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[5]"></span><a class="reference-anchor" href="#referto_[5]">[5]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://volantis.js.org/tag-plugins/">Volantis文档:内置标签插件</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[6]"></span><a class="reference-anchor" href="#referto_[6]">[6]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://butterfly.js.org/posts/4aa8abbe/#%E6%A8%99%E7%B1%A4%E5%A4%96%E6%8E%9B%EF%BC%88Tag-Plugins%EF%BC%89">Butterfly 安装文档:标签外挂（Tag Plugins</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[7]"></span><a class="reference-anchor" href="#referto_[7]">[7]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://lovelijunyi.gitee.io/posts/c898.html">小弋の生活馆全样式预览</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[8]"></span><a class="reference-anchor" href="#referto_[8]">[8]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://github.com/l-lin/font-awesome-animation">l-lin-font-awesome-animation</a></div><div class="reference-source"><span class="hidden-anchor" id="referfrom_[9]"></span><a class="reference-anchor" href="#referto_[9]">[9]<div class="reference-anchor-up fa-solid fa-angles-up"></div></a><a class="reference-link" href="https://www.antmoe.com/posts/3b43914f/">小康的butterfly主题使用文档</a></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="PDF展示"><a href="#PDF展示" class="headerlink" title="PDF展示"></a>PDF展示</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% pdf 文件路径 %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li><code>文件路径</code>: 可以是相对路径或者是在线链接</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"># 2.在线链接</span><br><span class="line">&#123;% pdf www.azhezhezhe/outher/mysql.pdff %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><p>2.在线链接(要放到最外层才能起作用)</p><pre><code>&lt;div class=&quot;row&quot;&gt;&lt;embed src=&quot;www.azhezhezhe/outher/mysql.pdf&quot; width=&quot;100%&quot; height=&quot;550&quot; type=&quot;application/pdf&quot;&gt;&lt;/div&gt;</code></pre><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="隐藏块"><a href="#隐藏块" class="headerlink" title="隐藏块"></a>隐藏块</h2><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">标签语法</button></li><li class="tab"><button type="button" data-href="#test4-2">配置参数</button></li><li class="tab"><button type="button" data-href="#test4-3">示例源码</button></li><li class="tab"><button type="button" data-href="#test4-4">渲染演示</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock display,bg,color %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li>content：要隐藏的内容</li><li>display：展示前按钮显示的文字（可选）</li><li>bg：按钮的背景颜色（可选）</li><li>color：按钮显示的文字的颜色（可选）</li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-3"><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% hideBlock 点我预览, blue %&#125;</span><br><span class="line">这里有张图片：</span><br><span class="line">&lt;img src=&quot;https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png&quot; alt=&quot;image (1)&quot; style=&quot;zoom:67%;&quot; /&gt;</span><br><span class="line">&#123;% endhideBlock %&#125;</span><br></pre></td></tr></table></figure><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-4"><div class="hide-block"><button type="button" class="hide-button" style="background-color:  blue;">点我预览    </button><div class="hide-content"><p>这里有张图片：<br><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091914856.png" alt="image (1)" style="zoom:67%;" /></p></div></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网站测试使用</title>
      <link href="/posts/9daba997.html"/>
      <url>/posts/9daba997.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="91bfcc8aa4cf9b4375d0efe9ac02951957e2c2e68616de1fb32c583849418ca9">a1cdc989b02143e7a4c21e4c5cdd099db45b48346157be1ae4c28a8d7ea720a809d6ae05e84f017488a0adf71486564fa2d66df1c6079ccad904d1c64441d9f8cd5b40a1854629fda0a348b3eaa55c9302003050046feccdb7e2aacdeed6c4dc64bb92225b097bd4da377ced602415a73aba61683c77b5a7011863e4afdac8e6d994b1e68abf3aaf7b19583c2eb251365eb60919fc66ee9ab22bf4af68416e0f7ce1ba28ffb17074ac03fa35affff75d8c6f8d4f732d56c804fbf08fb14c3ca9d2c6624109fc68d9efa98eae71de745ea639b48b4d196e15a5b6295d35537d04f8a004cfd8f801ee06f810b18c90d2c8637057407f429279ae686585cfe00bb8ed79073e25c813f820560133b793222cb487184a8af78a5a0b4e5c7a879d523efd0b694706637b26dfe1280b19b71840ed256bb9593ffbff4e3b5d3e0bd29706695af651265b2c96af92f44392d731edfc29f4d2d2b48855c092cb391c07b78021bf4aff4cca0f6453631d828f085dba6fe3ad61cf6fbf54db3d3a8286760e30609160d3af5e5f40851b2faa648153b8c95d371b1a73d153d93b060dc9af3fd02fbba4d8d25bae14b30e7e0bd52c2fdff4865bfef8b51cc4855a69dc200fd59c908fc7a984232e4e02ef96af3f2c210b1f46f378ffed81f33a363f022fcf9ab694d3ab40dc156b1b203c45a51a1716f9a728f9d31b16400f2f8ce7203fae3e2f9aa0c390e226c13806e4dc0b0e36d98219a4ce7f0ce14a6b66182e7de7aebc5a10955310ee51c950e5f32d929013c6e2efc7f07bf7e58279f4eec9735923c7fe7c19101fb178c4c70913e43e2acb013b7a43822dbca130850a1c9ebbcccd4ad117fcfad5d8a2429bfde17bf06af179ab48a1e5fb4438c1b297e9c7040fe9cc53f96004bf5c25df6cc510186a78c3c724d952de2789baa885d3f3456c6ad2aacb59b54dda7cef14a1f428fe69b03172c87e0f59d31dc6a4db6bfe1f908ed05e320cdc2b05ab85a02b1caad601938b94886d46cde42703f3400b0a195671302ce0e1447774e74607d4a52442801a5c3b0d21b8f482038e3e20e8ecf7d2172d968cfdd817d417680bdb62ecb3bc1013fee5fc02a2525b10c95f132c3ab9ca97c96a389254259bfdecfb8d266268bebdfed709a235c7f54f83c82ec6cef66be013e62c68b85aec6113759fc50e290ce680922061120cc7ad560dbbd72d635a02723f7656858d2ed39915162013c63f4cc6e38c9600bb6c00de89d8e217beced653bcead41c8567d4c7fec3f5294747a5df6e7131db125b854adb1de306a386427bb5c247f3fa7584d6b5b2b3d0f314c3ac8957d44e14ec6d74d637123df96b69ce1b8089b7703e16f4c2166568308d292d1f4f6c9248d1a9d224101ee72f4b9bd2421c93058e931a879c5dcaa4d61ff529fcb8ed1aee0a61691e348bb7ef98059730274f9120f7ab1d8088a839227bacac4dea3a30b84f1f524336e486118ec99f17977e8559b57d297d916a3ec08668d59387d66ee50cbabd59e630ca4243f7f88fac67498a1aada16e830ed12b2c34a291de8f26aff7aeb50837912387bce933cc4d91c8171f42eec4385a04c745c384dce2ac456b26062efabf238c5a6e6b366941a57ef684397634fc85ccd7238e096c011fb5d6595566d21d6d331bb3e7a8dfd825f25ea9e8dbff0bb28cd06c60c573e834696a177f8cd1e311ac1a5969a07979e1e62a3577cbd45406e61358f962363a448360f4c92f06f62815c54a78c115138b25d95d5f284eb83808625724de043552c67e30c3360b01e3106d79a6456639583239c027ca23963a5b1a5c301e0921202633e2d830949f4535888358c041adade02b76a1a986762b48aeed38974c4cdf110744dbd36a7a51cb9932fb10783e1f67e31044f060c7b9ae6f34fea3ea10275889205a178b0a0961213a5a5b9a18b6781ad1f1119c86be9e31f3f63f30eca4cc8fd3c0efe5a2c847bd59024ab360f70f353dc8278a53f4d5f9a0f716c9b2266be1feb183993bf7294ad31dd223b67ad82c673fe3d49c1eb7a0e8098afb</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-blink">      <input class="hbe hbe-input-field hbe-input-field-blink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-blink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-blink" data-content="您好, 这里需要密码.">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客搭建</title>
      <link href="/posts/afcbc60d.html"/>
      <url>/posts/afcbc60d.html</url>
      
        <content type="html"><![CDATA[<h1 id="基础安装"><a href="#基础安装" class="headerlink" title="基础安装"></a>基础安装</h1><h2 id="1-环境与工具准备"><a href="#1-环境与工具准备" class="headerlink" title="1.环境与工具准备"></a>1.环境与工具准备</h2><p><strong>本教程主要面对的是Windows用户</strong></p><ul><li>操作系统：Windows11</li><li>Node</li><li>Git</li><li>Hexo</li><li>文本编辑器(强烈推荐VSCODE)</li><li>GitHub 帐号</li><li>一个域名（强烈推荐买个域名）</li><li>云服务器（可选）</li></ul><h2 id="2-Node的安装"><a href="#2-Node的安装" class="headerlink" title="2. Node的安装"></a>2. Node的安装</h2><ol><li><p>打开Node官网，下载和自己系统相配的Node的安装程序，否则会出现安装问题。下载地址：<a href="https://nodejs.org/en/download/">https://nodejs.org/en/download/</a><br>我个人的版本是 12.19.0，目前版本已经更新到19.0.0，按照个人经验，可以选个低一些的版本，可以和我的一样，否则后面会出现各种不兼容的问题！我之前就是安装16的，系统无法识别，如果大家遇到问题建议选个低版本的！历史版本下载页面：<a href="https://nodejs.org/en/download/releases/">https://nodejs.org/en/download/releases/</a></p><p>(下载建议下载.msi文件 直接安装)</p></li><li>下载后安装，安装的目录可以使用默认目录【C:/Program Files/nodejs/】，也可以自定义路径。<br>这个环境路径切换坑也很多，如果大家C盘空间足够可以直接装C盘，如果想切换其他盘或者把环境遍历切换到自定义路径也可以，具体教程百度(不过坑比较多就是了)!</li><li>安装完成后，检查是否安装成功。在键盘按下win + R键，输入CMD，然后回车，打开CMD窗口，执行node -v命令，看到版本信息，则说明安装成功。</li><li>修改npm源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成淘宝镜像。打开CMD窗口，运行如下命令:</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config set registry https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure><h2 id="3-Git安装"><a href="#3-Git安装" class="headerlink" title="3.Git安装"></a>3.Git安装</h2><ol><li>进入官网：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a> ，由于官网下载太慢可以通过淘宝的开源镜像下载 网址：<a href="https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/">https://registry.npmmirror.com/binary.html?path=git-for-windows/v2.36.1.windows.1/</a> ，下载版本更具自己的需求选择即可。</li><li>下载后傻瓜式安装Git即可，安装的目录可以使用默认目录【C:/Program Files/Git】，也可以自定义路径。</li><li><p>点击电脑左下角开始即可看见 <code>Git Bash</code>。</p><ul><li><code>Git CMD</code> 是windows 命令行的指令风格</li><li><code>Git Bash</code> 是linux系统的指令风格（建议使用）</li><li><code>Git GUI</code>是图形化界面（新手学习不建议使用）</li></ul></li><li><p>常用命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l  //查看所有配置</span><br><span class="line">git config --system --list //查看系统配置</span><br><span class="line">git config --global --list //查看用户（全局）配置</span><br></pre></td></tr></table></figure></li><li><p>配置用户名和邮箱</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure></li><li>通过 <code>git config -l</code> 检查是否配置成功，至此git安装及配置全部完成。</li></ol><h2 id="4-Github注册与创建仓库"><a href="#4-Github注册与创建仓库" class="headerlink" title="4.Github注册与创建仓库"></a>4.Github注册与创建仓库</h2><ol><li><p>进入官网 <a href="https://github.com/">https://github.com</a></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091605230.png" alt="github"></p></li><li>点击右上角的 Sign up(注册)</li><li>填写自己的邮箱、密码、用户名等信息，然后用邮箱验证即可完成。</li><li><p>注册完成后，点击右上角的 <code>+</code>按钮，选择 <code>New repository</code>，创建一个 <code>&lt;用户名&gt;.github.io</code>的仓库。</p><ul><li>仓库的格式必须为：<code>&lt;用户名&gt;.github.io</code> (注意：前缀必须为用户名，不要等后面404了再来为什么！！！)</li><li>Description：为描述仓库（选填）</li><li>勾选 Initialize this repository with a README 初始化一个 <a href="http://readme.md/">README.md</a> 文件</li><li>点击 Creat repository 进行创建</li></ul></li></ol><h2 id="5-连接到github"><a href="#5-连接到github" class="headerlink" title="5. 连接到github"></a>5. 连接到github</h2><ol><li><p>执行以下命令生成ssh公钥，此公钥用于你的计算机连接Github</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure></li></ol><p>之后打开C盘下用户文件夹下的.ssh的文件夹，会看到 id_rsa.pub</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091606935.png" alt=""></p><p>用记事本打开上述图片中的公钥（id_rsa.pub），复制里面的内容，然后开始在github中配置ssh密钥。</p><ol><li><p>将 SSH KEY 配置到 GitHub</p><p>进入github，点击右上角头像 选择 <code>settings</code>，进入设置页后选择 <code>SSH and GPG keys</code>，名字随便起，公钥填到 <code>Key</code>那一栏。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091606668.png" alt="img"></p></li><li><p>测试连接，输入以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091606654.png" alt="img"></p><p>出现连接到账户的信息，说明已经大功告成，至此完成了环境准备工作。</p></li></ol><h2 id="6-安装Hexo"><a href="#6-安装Hexo" class="headerlink" title="6 安装Hexo"></a>6 安装Hexo</h2><ol><li><p>在 <code>Git BASH</code>输入如下命令安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure></li><li><p>安装完后输入hexo -v验证是否安装成功。</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091606380.png" alt="image-20230108214002648"></p></li></ol><h2 id="7-初始化-Hexo-项目"><a href="#7-初始化-Hexo-项目" class="headerlink" title="7. 初始化 Hexo 项目"></a>7. 初始化 Hexo 项目</h2><ol><li><p>在目标路径（我这里选的路径为【E:\zyboke\hexoblog】）打开cmd命令窗口，执行 <code>hexo init</code>初始化项目。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog(项目名)</span><br></pre></td></tr></table></figure></li></ol><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091607349.png" alt="image-20230108214130830"></p><p> 出现 <code>INFO  Start blogging with Hexo!</code>则成功</p><ol><li>进入 <code>blog ，输入</code>npm i`安装相关依赖。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd blog //进入blog文件夹</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091608191.png" alt="image-20230108214329933"></p><ol><li>初始化项目后，<code>blog-demo</code>有如下结构：</li></ol><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091608536.png" alt="image-20230108214402594"></p><p>【node_modules】：依赖包<br>【scaffolds】：生成文章的一些模板<br>【source】：用来存放你的文章<br>【themes】：主题<br>【.npmignore】：发布时忽略的文件（可忽略）<br>【_config.landscape.yml】：主题的配置文件<br>【config.yml】：博客的配置文件<br>【package.json】：项目名称、描述、版本、运行和开发等信息</p><ol><li>输入hexo server或者hexo s 启动项目</li><li>打开浏览器，输入地址：<a href="http://localhost:4000/">http://localhost:4000/</a>，看到下面的效果，说明你的博客已经构建成功了。</li></ol><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091609222.png" alt="image-20230108214557648"></p><h2 id="8-将静态博客挂载到-GitHub-Pages"><a href="#8-将静态博客挂载到-GitHub-Pages" class="headerlink" title="8. 将静态博客挂载到 GitHub Pages"></a>8. 将静态博客挂载到 GitHub Pages</h2><ol><li>安装 hexo-deployer-git</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><ol><li>修改 _config.yml 文件</li></ol><p>在blog-demo目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的<a href="https://hexo.io/zh-cn/docs/configuration">配置描述</a>。<br>修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为 <code>main</code>代表主分支（注意缩进）。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:aboyzy</span><br><span class="line">/aboyzy.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091609151.png" alt="image-20230108215136063"></p><ol><li>修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy  // Git BASH终端</span><br><span class="line">hexo clean; hexo generate; hexo deploy  // VSCODE终端</span><br></pre></td></tr></table></figure><ul><li>hexo clean：删除之前生成的文件，若未生成过静态文件，可忽略此命令。</li><li>hexo generate：生成静态文章，可以用 <code>hexo g</code>缩写</li><li>hexo deploy：部署文章，可以用 <code>hexo d</code>缩写</li></ul><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091609286.png" alt="image-20230108215354681"></p><p>出现这一句即为上传成功</p><div class="note info modern"><p>注意：deploy时可能要你输入 username 和 password。</p></div><p>稍等两分钟，打开浏览器访问：<a href="https://aboyzy.github.io/">https://zboyzy.github.io</a> <span class='p red'>注意更改为自己的GitHub名称</span>，这时候我们就可以看到博客内容了。</p><h2 id="9-无法连接至Github的解决方法"><a href="#9-无法连接至Github的解决方法" class="headerlink" title="9. 无法连接至Github的解决方法"></a>9. 无法连接至Github的解决方法</h2><div class="note info modern"><p>注意：当你在与Github进行ssh通信时候出现超时或者是连接被关闭的情况，可以尝试以下解决方案。</p></div><ol><li>挂代理和换网络（这个就不用多说了）</li><li><p><a href="https://blog.csdn.net/weixin_41287260/article/details/124368189">Git问题：解决“ssh:connect to host github.com port 22: Connection timed out”</a></p><p>这是评论区的朋友提供的，可以解决SSH连接超时等问题</p></li><li><p>开源项目<a href="https://github.com/521xueweihan/GitHub520">Github520</a></p><p>通过修改Host文件的方法解决访问速度慢的问题</p></li></ol><p>连接有效性检验：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 任选其一即可</span><br><span class="line">ping github.com</span><br><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><h1 id="vercel部署以及更换主题"><a href="#vercel部署以及更换主题" class="headerlink" title="vercel部署以及更换主题"></a>vercel部署以及更换主题</h1><h2 id="1-Vercel部署与自定义域名"><a href="#1-Vercel部署与自定义域名" class="headerlink" title="1.Vercel部署与自定义域名"></a>1.Vercel部署与自定义域名</h2><h3 id="1-1-Vercel部署"><a href="#1-1-Vercel部署" class="headerlink" title="1.1 Vercel部署"></a>1.1 Vercel部署</h3><p>Vercel简介：<a href="https://vercel.com/dashboard">vercel</a>是一个代码托管平台，它能够托管你的静态html界面，甚至能够托管你的node.js与Python服务端脚本，是<strong>不想买服务器的懒人的福音</strong>！</p><p><strong>使用Vercel部署Hexo项目步骤：</strong></p><ol><li>首先需要一个Vercel账号，这里<strong>推荐用GitHub账户关联，这样你就可以在vercel中直接托管你的GitHub库中的项目了</strong>，实现开发部署一步到位（网络不流畅可以考虑挂梯子）。</li><li>当你用你的Github账户关联并绑定手机号登录之后，点击右上角的 <code>Add New Project</code>创建新的项目，之后导入选项那里选择 <code>Continue with Github</code>，这时候应该能看到你Github账号的仓库，选择你刚刚部署成功的存储静态博客的仓库 <code>&lt;username&gt;.github.io</code>右边的 <code>Import</code>选项，表示你要导入该仓库。</li><li>起一个只能有字母、数字或者或者连字符的项目名称，然后其他默认，点击 <code>Deploy</code>，等待一分钟即可部署成功，部署成功后电极 <code>Continue to Dashboard</code>跳转到控制面板，下图所示就是控制面板，看到就代表成功部署到了，但是我们现在还不能访问他给出的域，因为GFW最近把Vercel屏蔽了。</li></ol><h3 id="1-2自定义域名"><a href="#1-2自定义域名" class="headerlink" title="1.2自定义域名"></a>1.2自定义域名</h3><p>现在你的个人网站的地址是 <code>username.github.io</code>以及在Vercel上有一个 <code>blog-demo-chi.vercel.app</code>。如果觉得不够定制化，可以购买一个专属域名。</p><div class="note info modern"><p>这一步不是必要的，如果目前还不想买域名可以先跳过。</p></div><p>腾讯云、阿里云等都是不错的域名代理商，建议选用 <code>com</code>，<code>cn</code>或 <code>cc</code>这类常用好记的顶域，对SEO比较友好，自定义部分的长度尽可能短别人才会更容易地记住你的网站，要知道域名就是你网站的卡片。此处以阿里云域名为例进行说明，购买域名后，实名认证进入阿里云控制台，点云解析进去，找到你刚买的域名，点进去添加Vercel所需的解析记录，注意博主这里是解析二级域名只需要解析一条即可。但是如果是一级域名，需要解析两个，一个是 <code>@</code>，另外一个是 <code>www</code>，Vercel建议是 <code>@</code>的解析重定向至 <code>www</code>。</p><p>以我的域名：<code>azhezhezhe.com</code>为例进行说明</p><div class="table-container"><table><thead><tr><th style="text-align:center">主机记录</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">www</td><td style="text-align:center">解析后的域名为<a href="http://www.azhezhezhe.com/">www.azhezhezhe.com</a></td></tr><tr><td style="text-align:center">@</td><td style="text-align:center">直接解析主域名<a href="http://azhezhezhe.com/">azhezhezhe.com</a></td></tr><tr><td style="text-align:center">*</td><td style="text-align:center">泛解析，匹配其他所有域名 *.azhezhezhe.com</td></tr><tr><td style="text-align:center">mail</td><td style="text-align:center">将域名解析为<a href="http://mail.azhezhezhe.com/">mail.azhezhezhe.com</a>，通常用于解析邮箱服务器</td></tr><tr><td style="text-align:center">二级</td><td style="text-align:center">如<a href="http://abc.azhezhezhe.com/">abc.azhezhezhe.com</a>，填写 abc</td></tr><tr><td style="text-align:center">手机网站</td><td style="text-align:center">如<a href="http://m.azhezhezhe.com/">m.azhezhezhe.com</a>，填写 m</td></tr><tr><td style="text-align:center">显性URL</td><td style="text-align:center">不支持泛解析（泛解析：将所有子域名解析到同一地址）</td></tr></tbody></table></div><div class="note info modern"><p>将域名指向云服务器，请选择「A」； 将域名指向另一个域名，请选择「CNAME」； 建立邮箱请选择「MX」，根据邮箱服务商提供的 MX 记录填写。</p></div><div class="table-container"><table><thead><tr><th style="text-align:center">记录类型</th><th style="text-align:center">解释</th></tr></thead><tbody><tr><td style="text-align:center">A</td><td style="text-align:center">用来指定域名的 IPv4 地址（如 8.8.8.8），如果需要将域名指向一个 IP 地址，就需要添加 A 记录。</td></tr><tr><td style="text-align:center">CNAME</td><td style="text-align:center">如果需要将域名指向另一个域名，再由另一个域名提供 IP 地址，就需要添加 CNAME 记录。</td></tr><tr><td style="text-align:center">MX</td><td style="text-align:center">如果需要设置邮箱，让邮箱能收到邮件，就需要添加 MX 记录。</td></tr><tr><td style="text-align:center">TXT</td><td style="text-align:center">在这里可以填写任何东西，长度限制 255。绝大多数的 TXT 记录是用来做 SPF 记录（反垃圾邮件）</td></tr><tr><td style="text-align:center">NS</td><td style="text-align:center">域名服务器记录，如果需要将子域名交给其他 DNS 服务商解析，就需要添加 NS 记录。</td></tr><tr><td style="text-align:center">AAAA</td><td style="text-align:center">用来指定主机名（或域名）对应的 IPv6 地址（例如：ff06:0:0:0:0:0:0:c3）记录。</td></tr><tr><td style="text-align:center">SRV</td><td style="text-align:center">记录了哪台计算机提供了哪个服务。格式为：服务的名字、点、协议的类型，例如：_xmpp-server_tcp。</td></tr><tr><td style="text-align:center">显性URL</td><td style="text-align:center">从一个地址 301 重定向到另一个地址的时候，就需要添加显性 URL 记录（注：DNSPod 目前只支持 301 重定向）。</td></tr><tr><td style="text-align:center">隐性URL</td><td style="text-align:center">类似于显性 URL，区别在于隐性 URL 不会改变地址栏的域名。</td></tr></tbody></table></div><p><strong>添加自定义域名的步骤：</strong></p><ol><li><p>点击Vercel控制面板右上角的 <code>View Domains</code>查看当前的域，我们可以看到仅有Vercel给你预分配的一个域名，此时我们输入刚刚购买的域名，我这里以一级域名 <code>azhezhezhe.com</code>为例进行说明，添加后他会提示你添加两条DNS解析记录。(二级域名为一个)</p><hr><p><strong>PS</strong>：如果你是新买的域名，直接输入你新买的一级域名即可，例如 <code>azhezhezhe.com</code>，他会推荐你将 <code>azhezhezhe.com</code>重定向至 <code>www.azhezhezhe.com</code>，点 <code>ADD</code>即可，然后他会提示你添加两条解析记录，一个是 <code>@</code>开头的和 <code>CNAME</code>开头的，添加记录的方法和二级域名一致。</p></li><li>在腾讯云域名解析记录里面添加如下记录，其中记录类型对应 <code>Type</code>，主机记录对应 <code>Name</code>，记录值对应 <code>Value</code>，其他的设置默认即可。</li><li>回到Vercel刚刚查看域名的地方，如果操作没问题，应该会显示域名配置成功的提示，此时就可以通过自定义域名来访问我们搭建的网站了。</li><li>当你有了新的域名之后，需要 <code>[BlogRoot]\_config.yml</code>文件中的 <code>url</code>配置项为自己的新域名，这样博客的文章链接才会正确生成。</li></ol><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091609822.png" alt="image-20230108221242525"></p><h2 id="2-安装主题"><a href="#2-安装主题" class="headerlink" title="2. 安装主题"></a>2. 安装主题</h2><p>本教程用的 🦋 hexo-theme-butterfly 主题 v4.5.0最新版，请放心食用。</p><p>本教程用的是npm方式安装的 <code>hexo-theme-butterfly</code>，后续魔改时更改的文件都是【C:/Hexo-Blog/blog-demo/node_modules/hexo-theme-butterfly】文件夹中的文件。如果你是 <code>git clone</code>克隆方式安装的主题，请在【C:/Hexo-Blog/blog-demo/themes/butterfly】文件夹下修改对应的文件。</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">npm安装(推荐)</button></li><li class="tab"><button type="button" data-href="#test4-2">github安装</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><p>注意：此方法只支持 Hexo 5.0.0以上版本!</p><p>在你的博客根目录（我这里路径为【E:\zyboke\hexoblog\blog】）打开 <code>Git BASH</code>命令窗口执行 <code>npm i hexo-theme-butterfly</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-theme-butterfly</span><br></pre></td></tr></table></figure><p>安装成功后可在【E:/zyboke/hexoblog/blog/node_modules】文件夹下找到hexo-theme-butterfly文件夹</p><div class="note info modern"><p>升级方法：在博客根目录下，运行 <code>npm update hexo-theme-butterfly</code>。<br>升级前请将 <code>hexo-theme-butterfly</code>文件夹备份，npm更新会直接覆盖成新的包。</p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><p>在你的博客根目录里（我这里路径为【E:\zyboke\hexoblog\blog】），打开 <code>Git BASH</code>工具，执行命令即可。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone -b 4.5.0 https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure><p>安装成功后可在【E:\zyboke\hexoblog\blog\themes】文件夹下找到 <code>butterfly</code>文件夹，可以将 <code>landscape</code>文件夹删掉。</p><div class="note info modern"><p>升级方法：在主题目录下，运行git pull </p></div><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h2 id="应用主题"><a href="#应用主题" class="headerlink" title="应用主题"></a>应用主题</h2><ol><li>修改站点配置文件 <code>_config.yml</code>，把主题改为 <code>butterfly</code></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">theme: butterfly</span><br></pre></td></tr></table></figure><ol><li><p>如果你没有 <code>pug</code>以及 <code>stylus</code>的渲染器，请下载安装，这两个渲染器是 <code>Butterfly</code>生成基础页面所需的依赖包：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-renderer-pug hexo-renderer-stylus --save</span><br></pre></td></tr></table></figure></li><li>为了减少升级主题后带来的不便，请使用以下方法（建议，可以不做，高度魔改的一般都不会升级主题了，不然魔改的会被覆盖掉）<br>把主题文件夹【E:\zyboke\hexoblog\blog\node_modules\hexo-theme-butterfly】中的 <code>_config.yml</code> 复制到 Hexo 根目录里【E:\zyboke\hexoblog\blog】，同时重新命名为 <code>_config.butterfly.yml</code>。以后只需要在 <code>_config.butterfly.yml</code>进行配置即可生效。Hexo会自动合併主题中的 <code>_config.yml</code>和 <code>_config.butterfly.yml</code>里的配置，如果存在同名配置，会使用 <code>_config.butterfly.yml</code>的配置，其优先度较高。</li></ol><h1 id="主题配置"><a href="#主题配置" class="headerlink" title="主题配置"></a>主题配置</h1><h2 id="1-网站资料配置"><a href="#1-网站资料配置" class="headerlink" title="1.网站资料配置"></a>1.网站资料配置</h2><p>在 <code>_config.yml</code> 的最上边位置为基础配置</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091610606.png" alt="image-20230108223242965"></p><div class="table-container"><table><thead><tr><th style="text-align:center">参数</th><th style="text-align:center">描述</th></tr></thead><tbody><tr><td style="text-align:center">title</td><td style="text-align:center">网站标题</td></tr><tr><td style="text-align:center">subtitle</td><td style="text-align:center">描述</td></tr><tr><td style="text-align:center">description</td><td style="text-align:center">网站描述</td></tr><tr><td style="text-align:center">keywords</td><td style="text-align:center">网站的关键词。支持多个关键词</td></tr><tr><td style="text-align:center">author</td><td style="text-align:center">您的名字</td></tr><tr><td style="text-align:center">language</td><td style="text-align:center">网站使用的语言。对于简体中文用户来说，使用不同的主题可能需要设置成不同的值，请参考你的主题的文档自行设置，常见的有 zh-Hans和 zh-CN。</td></tr><tr><td style="text-align:center">timezone</td><td style="text-align:center">网站时区。Hexo 默认使用您电脑的时区。请参考 时区列表 进行设置，如 America/New_York, Japan, 和 UTC 。一般的，对于中国大陆地区可以使用 Asia/Shanghai</td></tr></tbody></table></div><h2 id="网站副标题"><a href="#网站副标题" class="headerlink" title="网站副标题"></a>网站副标题</h2><p>可设置主页中显示的网站副标题或者喜欢的座右铭。</p><p>修改主题配置文件 <code>_config.butterfly.yml</code>中的 <code>subtitle</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"># the subtitle on homepage (主頁subtitle)</span><br><span class="line">subtitle:</span><br><span class="line">  enable: true</span><br><span class="line">  # Typewriter Effect (打字效果)</span><br><span class="line">  effect: true</span><br><span class="line">  # Effect Speed Options (打字效果速度參數)</span><br><span class="line">  startDelay: 300 # time before typing starts in milliseconds</span><br><span class="line">  typeSpeed: 150 # type speed in milliseconds</span><br><span class="line">  backSpeed: 50 # backspacing speed in milliseconds</span><br><span class="line">  # loop (循環打字)</span><br><span class="line">  loop: false</span><br><span class="line">  # source 調用第三方服務</span><br><span class="line">  # source: false 關閉調用</span><br><span class="line">  # source: 1  調用一言網的一句話（簡體） https://hitokoto.cn/</span><br><span class="line">  # source: 2  調用一句網（簡體） http://yijuzhan.com/</span><br><span class="line">  # source: 3  調用今日詩詞（簡體） https://www.jinrishici.com/</span><br><span class="line">  # subtitle 會先顯示 source , 再顯示 sub 的內容</span><br><span class="line">  source: false</span><br><span class="line">  # 如果關閉打字效果，subtitle 只會顯示 sub 的第一行文字 //</span><br><span class="line">  sub:</span><br><span class="line">   - &quot;Welcome to my home!🍭🍭🍭&quot;</span><br></pre></td></tr></table></figure><h2 id="2-导航菜单配置"><a href="#2-导航菜单配置" class="headerlink" title="2.导航菜单配置"></a>2.导航菜单配置</h2><h3 id="配置菜单"><a href="#配置菜单" class="headerlink" title="配置菜单"></a>配置菜单</h3><p>修改主题配置文件 <code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  Home: / || fas fa-home</span><br><span class="line">  Archives: /archives/ || fas fa-archive</span><br><span class="line">  Tags: /tags/ || fas fa-tags</span><br><span class="line">  Categories: /categories/ || fas fa-folder-open</span><br><span class="line">  List||fas fa-list:</span><br><span class="line">    Music: /music/ || fas fa-music</span><br><span class="line">    Movie: /movies/ || fas fa-video</span><br><span class="line">  Link: /link/ || fas fa-link</span><br><span class="line">  About: /about/ || fas fa-heart</span><br></pre></td></tr></table></figure><ul><li>前边是路径 ，后边是引用的图标</li><li>必须是 <code>/xxx/</code>，后面 <code>||</code>分开，然后写图标名，如果不想显示图标，图标名可不写</li><li>文字可自行更改，中英文都可以</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  首页: / || fas fa-home</span><br><span class="line">  时间轴: /archives/ || fas fa-archive</span><br><span class="line">  标签: /tags/ || fas fa-tags</span><br><span class="line">  分类: /categories/ || fas fa-folder-open</span><br><span class="line">  清单||fa fa-heartbeat:</span><br><span class="line">    音乐: /music/ || fas fa-music</span><br><span class="line">    导航: /daohang/ || fas fa-link</span><br><span class="line">  关于: /about/ || fas fa-heart</span><br></pre></td></tr></table></figure><p>其中 <code>archives</code>自带其他需要创建</p><p>我们分别执行生成包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo new page &quot;tags&quot; </span><br><span class="line">hexo new page &quot;categories&quot;</span><br><span class="line">hexo new page &quot;music&quot;</span><br><span class="line">hexo new page &quot;daohang&quot;</span><br><span class="line">hexo new page &quot;about&quot;</span><br></pre></td></tr></table></figure><p>会生成一个含有 <code>index.md</code>文件的文件夹。</p><p>分别编辑文件夹</p><p><code>tags</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091610174.png" alt="image-20230108225357852"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">type: tags</span><br><span class="line">date: 2023-01-08 22:50:03</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p><code>categories</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091610070.png" alt="image-20230108225707837"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 分类</span><br><span class="line">type: categories </span><br><span class="line">date: 2023-01-08 22:50:17</span><br><span class="line">---</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其他只需更改title内容</p><h3 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h3><h4 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h4><p><code>Front-matter</code> 是 markdown 文件最上方以 <code>---</code>分隔的区域，用于指定个别档案的变数。</p><ul><li>Page Front-matter 用于页面配置</li><li>Post Front-matter 用于文章页配置</li></ul><div class="note info modern"><p>如果标注可选的参数，可根据自己需要添加，不用全部都写</p></div><p><strong>Page Front-matter：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">type:</span><br><span class="line">comments:</span><br><span class="line">description:</span><br><span class="line">keywords:</span><br><span class="line">top_img:</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">aside:</span><br><span class="line">aplayer:</span><br><span class="line">highlight_shrink:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th style="text-align:left">写法</th><th>解释</th></tr></thead><tbody><tr><td style="text-align:left">title</td><td>【必需】页面标题</td></tr><tr><td style="text-align:left">date</td><td>【必需】页面创建日期</td></tr><tr><td style="text-align:left">type</td><td>【必需】标籤、分类和友情链接三个页面需要配置</td></tr><tr><td style="text-align:left">updated</td><td>【可选】页面更新日期</td></tr><tr><td style="text-align:left">description</td><td>【可选】页面描述</td></tr><tr><td style="text-align:left">keywords</td><td>【可选】页面关键字</td></tr><tr><td style="text-align:left">comments</td><td>【可选】显示页面评论模块(默认 true)</td></tr><tr><td style="text-align:left">top_img</td><td>【可选】页面顶部图片</td></tr><tr><td style="text-align:left">mathjax</td><td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td style="text-align:left">kates</td><td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td style="text-align:left">aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td style="text-align:left">aplayer</td><td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td style="text-align:left">highlight_shrink</td><td>【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr></tbody></table></div><p><strong>Post Front-matter：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title:</span><br><span class="line">date:</span><br><span class="line">updated:</span><br><span class="line">tags:</span><br><span class="line">categories:</span><br><span class="line">keywords:</span><br><span class="line">description:</span><br><span class="line">top_img:</span><br><span class="line">comments:</span><br><span class="line">cover:</span><br><span class="line">toc:</span><br><span class="line">toc_number:</span><br><span class="line">toc_style_simple:</span><br><span class="line">copyright:</span><br><span class="line">copyright_author:</span><br><span class="line">copyright_author_href:</span><br><span class="line">copyright_url:</span><br><span class="line">copyright_info:</span><br><span class="line">mathjax:</span><br><span class="line">katex:</span><br><span class="line">aplayer:</span><br><span class="line">highlight_shrink:</span><br><span class="line">aside:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><div class="table-container"><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】文章标题</td></tr><tr><td>date</td><td>【必需】文章创建日期</td></tr><tr><td>updated</td><td>【可选】文章更新日期</td></tr><tr><td>tags</td><td>【可选】文章标籤</td></tr><tr><td>categories</td><td>【可选】文章分类</td></tr><tr><td>keywords</td><td>【可选】文章关键字</td></tr><tr><td>description</td><td>【可选】文章描述</td></tr><tr><td>top_img</td><td>【可选】文章顶部图片</td></tr><tr><td>cover</td><td>【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false/图片地址/留空)</td></tr><tr><td>comments</td><td>【可选】显示文章评论模块(默认 true)</td></tr><tr><td>toc</td><td>【可选】显示文章TOC(默认为设置中toc的enable配置)</td></tr><tr><td>toc_number</td><td>【可选】显示toc_number(默认为设置中toc的number配置)</td></tr><tr><td>toc_style_simple</td><td>【可选】显示 toc 简洁模式</td></tr><tr><td>copyright</td><td>【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td></tr><tr><td>copyright_author</td><td>【可选】文章版权模块的文章作者</td></tr><tr><td>copyright_author_href</td><td>【可选】文章版权模块的文章作者链接</td></tr><tr><td>copyright_url</td><td>【可选】文章版权模块的文章连结链接</td></tr><tr><td>copyright_info</td><td>【可选】文章版权模块的版权声明文字</td></tr><tr><td>mathjax</td><td>【可选】显示mathjax(当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示katex(当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的音乐 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true/false)(默认为设置中highlight_shrink的配置)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr></tbody></table></div><h3 id="魔改居中"><a href="#魔改居中" class="headerlink" title="魔改居中"></a>魔改居中</h3><p>在 <code>[BlogRoot]\source\css\custom.css</code>中引入如下css代码，然后在主题配置文件 <code>_config.butterfly.yml</code>中引入该文件：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">/* 一级菜单居中 */</span><br><span class="line">#nav .menus_items &#123;</span><br><span class="line">  position: absolute !important;</span><br><span class="line">  width: fit-content !important;</span><br><span class="line">  left: 50% !important;</span><br><span class="line">  transform: translateX(-50%) !important;</span><br><span class="line">&#125;</span><br><span class="line">/* 子菜单横向展示 */</span><br><span class="line">#nav .menus_items .menus_item:hover .menus_item_child &#123;</span><br><span class="line">  display: flex !important;</span><br><span class="line">&#125;</span><br><span class="line">/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */</span><br><span class="line">.menus_items .menus_item:nth-child(2) .menus_item_child &#123;</span><br><span class="line">  left: -125px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此处的 <code>css</code>实现了两个作用：菜单栏居中、子菜单横向显示。其中子菜单横向显示要根据自己的实际情况来改，例如你的以及菜单的第2个选项中有子菜单，那就要加一项调节第2个选项中的子菜单，这个具体调节多少要根据你的具体情况为准，可以自己慢慢调到中间。</p><p>此时我们的手机端子菜单默认是展开显示的</p><p>此时我们只需要在主题配置文件 <code>_config.butterfly.yml</code>中列表对应的地方加一个 <code>hide</code>即可，如下图的列表选项：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">menu:</span><br><span class="line">  首页: / || fas fa-home</span><br><span class="line">  时间轴: /archives/ || fas fa-archive</span><br><span class="line">  标签: /tags/ || fas fa-tags</span><br><span class="line">  分类: /categories/ || fas fa-folder-open</span><br><span class="line">  清单||fa fa-list|| hide:</span><br><span class="line">    音乐: /music/ || fas fa-music</span><br><span class="line">    导航: /daohang/ || fas fa-link</span><br><span class="line">  关于: /about/ || fas fa-heart</span><br></pre></td></tr></table></figure><h2 id="代码配置"><a href="#代码配置" class="headerlink" title="代码配置"></a>代码配置</h2><h3 id="代码高亮"><a href="#代码高亮" class="headerlink" title="代码高亮"></a>代码高亮</h3><p>Butterfly支持 6 种代码高亮样式：</p><ul><li>darker</li><li>pale night</li><li>light</li><li>ocean</li><li>mac</li><li>mac light</li></ul><p>修改主题配置文件 <code>_config.butterfly.yml</code>。中的 <code>highlight_theme</code>属性。</p><h3 id="代码复制"><a href="#代码复制" class="headerlink" title="代码复制"></a>代码复制</h3><p>修改主题配置文件 <code>_config.butterfly.yml</code>中的 <code>highlight_copy</code>属性，<code>true</code>表示可以复制。</p><h3 id="代码框展开或关闭"><a href="#代码框展开或关闭" class="headerlink" title="代码框展开或关闭"></a>代码框展开或关闭</h3><p>修改主题配置文件 <code>_config.butterfly.yml</code>。中的 <code>highlight_shrink</code>属性。</p><p>在默认情况下，代码框自动展开，可设置是否所有代码框都关闭状态，点击&gt;可展开代码。</p><ul><li>true 全部代码框不展开，需点击&gt;打开</li><li>false 代码框展开，有&gt;点击按钮</li><li>none 不显示&gt;按钮</li></ul><h3 id="代码换行"><a href="#代码换行" class="headerlink" title="代码换行"></a>代码换行</h3><p>在默认情况下，Hexo 在编译的时候不会实现代码自动换行。如果你不希望在代码块的区域里有横向滚动条的话，那么你可以考虑开启这个功能。</p><p>修改主题配置文件 <code>_config.butterfly.yml</code>。中的 <code>code_word_wrap</code>属性。</p><h3 id="代码高度限制"><a href="#代码高度限制" class="headerlink" title="代码高度限制"></a>代码高度限制</h3><p>可配置代码高度限制，超出的部分会隐藏，并显示展开按钮。</p><p>修改主题配置文件 <code>_config.butterfly.yml</code>。中的 <code>highlight_height_limit:</code>属性。</p><ol><li>单位是 <code>px</code>，直接添加数字，如 200</li><li>实际限制高度为 <code>highlight_height_limit + 30 px</code> ，多增加 30px 限制，目的是避免代码高度只超出highlight_height_limit 一点时，出现展开按钮，展开没内容。</li><li>不适用于隐藏后的代码块（ css 设置 <code>display: none</code>）。</li></ol><h2 id="文章内容复制相关配置"><a href="#文章内容复制相关配置" class="headerlink" title="文章内容复制相关配置"></a>文章内容复制相关配置</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># copy settings</span><br><span class="line"># copyright: Add the copyright information after copied content (复制的内容后面加上版权信息)</span><br><span class="line">copy:</span><br><span class="line">  enable: true# 是否开启网站复制权限</span><br><span class="line">  copyright:# 复制的内容后面加上版权信息</span><br><span class="line">    enable: true# 是否开启复制版权信息添加</span><br><span class="line">    limit_count: 50# 字数限制，当复制文字大于这个字数限制时，将在复制的内容后面加上版权信息</span><br></pre></td></tr></table></figure><h2 id="背景设置"><a href="#背景设置" class="headerlink" title="背景设置"></a>背景设置</h2><h3 id="网站背景"><a href="#网站背景" class="headerlink" title="网站背景"></a>网站背景</h3><p>修改主题配置文件 <code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 图片格式 url(http://xxxxxx.com/xxx.jpg)</span><br><span class="line"># 颜色（HEX值/RGB值/颜色单词/渐变色)</span><br><span class="line"># 留空 不显示背景</span><br><span class="line">background: url(https://source.fomal.cc/img/dm1.webp)</span><br></pre></td></tr></table></figure><p>如果你的网站根目录不是 <code>&#39;/&#39;</code>，使用本地图片时，需加上你的根目录。<br>例如：网站是 <code>https://yoursite.com/blog</code>，引用一张 <code>img/xx.png</code>图片，则设置 <code>background</code>为 <code>url(/blog/img/xx.png)</code></p><h3 id="顶部图"><a href="#顶部图" class="headerlink" title="顶部图"></a>顶部图</h3><p>如果不要显示顶部图，可直接配置 <code>disable_top_img: true</code>。</p><div class="table-container"><table><thead><tr><th>配置</th><th>解释</th></tr></thead><tbody><tr><td>index_img</td><td>主页的 top_img</td></tr><tr><td>default_top_img</td><td>默认的 top_img，当页面的 top_img 没有配置时，会显示 default_top_img</td></tr><tr><td>archive_img</td><td>归档页面的 top_img</td></tr><tr><td>tag_img</td><td>tag子页面 的 默认 top_img</td></tr><tr><td>tag_per_img</td><td>tag子页面的 top_img，可配置每个 tag 的 top_img</td></tr><tr><td>category_img</td><td>category 子页面 的 默认 top_img</td></tr><tr><td>category_per_img</td><td>category 子页面的 top_img，可配置每个 category 的 top_img</td></tr></tbody></table></div><p>修改主题配置文件 <code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index_img: xxx.png</span><br></pre></td></tr></table></figure><p>其它页面 （tags/categories/自建页面）和文章页的 <code>top_img</code>，请到对应的 md 页面设置 <code>front-matter</code>中的 <code>top_img</code>。 也可以是网页链接</p><h3 id="底部背景"><a href="#底部背景" class="headerlink" title="底部背景"></a>底部背景</h3><p>修改主题配置文件 <code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># footer是否显示图片背景(与top_img一致)</span><br><span class="line">footer_bg: true</span><br></pre></td></tr></table></figure><ul><li><code>留空/false</code>：显示默认的颜色</li><li><code>图片链接</code>：显示所配置的图片</li><li><code>颜色包括HEX值 - #0000FF | RGB值 - rgb(0,0,255) | 颜色单词 - orange | 渐变色 - linear-gradient( 135deg, #E2B0FF 10%, #9F44D3 100%)</code>：对应的颜色</li><li><code>true</code>：显示跟 top_img 一样</li></ul><h3 id="最底部信息"><a href="#最底部信息" class="headerlink" title="最底部信息"></a>最底部信息</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">footer:</span><br><span class="line">  owner:</span><br><span class="line">    enable: true</span><br><span class="line">    since: 2023</span><br><span class="line">  custom_text: 初见乍惊欢，久处亦怦然</span><br><span class="line">  copyright: false # Copyright of theme and framework 是否展示butter</span><br></pre></td></tr></table></figure><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091610397.png" alt="image-20230109004430133"></p><h3 id="魔改-一图流"><a href="#魔改-一图流" class="headerlink" title="魔改 一图流"></a>魔改 一图流</h3><ol><li><p>在 <code>\source</code>文件夹下新建一个文件夹 <code>css</code>，该文件夹用于存放自定义的 <code>css样式</code>，再新建一个名为 <code>custom.css</code>，在里面写入以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">/* 页脚与头图透明 */</span><br><span class="line">#footer &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line">#page-header &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 白天模式遮罩透明 */</span><br><span class="line">#footer::before &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line">#page-header::before &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 夜间模式遮罩透明 */</span><br><span class="line">[data-theme=&quot;dark&quot;] #footer::before &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br><span class="line">[data-theme=&quot;dark&quot;] #page-header::before &#123;</span><br><span class="line">  background: transparent !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>在主题配置文件 <code>_config.butterfly.yml</code>文件中的 <code>inject</code>配置项的 <code>head</code>子项加入以下代码，代表引入刚刚创建的 <code>custom.css</code>文件（这是相对路径的写法）</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/custom.css&quot; media=&quot;defer&quot; onload=&quot;this.media=&#x27;all&#x27;&quot;&gt;</span><br></pre></td></tr></table></figure><ol><li>在主题配置文件 <code>_config.butterfly.yml</code>文件中的 <code>index_img</code>和 <code>footer_bg</code>配置项取消头图与页脚图的加载项避免冗余加载</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># The banner image of home page</span><br><span class="line">index_img: </span><br><span class="line"></span><br><span class="line"># Footer Background</span><br><span class="line">footer_bg: false</span><br></pre></td></tr></table></figure><p>4.一图流改完了背景图没了，那大概率是你之前没设置背景图。在主题配置文件 <code>_config.butterfly.yml</code>文件中的 <code>background</code>配置项设置背景图</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">background: url(https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091557348.jpg)</span><br></pre></td></tr></table></figure><h2 id="自定义字体"><a href="#自定义字体" class="headerlink" title="自定义字体"></a>自定义字体</h2><h3 id="自定义官方字体"><a href="#自定义官方字体" class="headerlink" title="自定义官方字体"></a>自定义官方字体</h3><h4 id="全局字体"><a href="#全局字体" class="headerlink" title="全局字体"></a>全局字体</h4><p>修改主题配置文件 <code>_config.butterfly.yml</code>中的 <code>font-family</code>属性即可，如不需要配置，请留空。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">修改主题配置文件_config.butterfly.yml中的font-family属性即可，如不需要配置，请留空。</span><br></pre></td></tr></table></figure><h4 id="Blog-标题字体"><a href="#Blog-标题字体" class="headerlink" title="Blog 标题字体"></a>Blog 标题字体</h4><p>修改主题配置文件 <code>_config.butterfly.yml</code>中的 <code>blog_title_font</code>属性即可，如不需要配置，请留空。<br>如不需要使用网络字体，只需要把font_link留空就行。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Font settings for the site title and site subtitle</span><br><span class="line"># https://fonts.googleapis.com/css?family=Titillium+Web&amp;display=swap</span><br><span class="line"># Titillium Web, &#x27;PingFang SC&#x27; , &#x27;Hiragino Sans GB&#x27; , &#x27;Microsoft JhengHei&#x27; , &#x27;Microsoft YaHei&#x27; , sans-serif</span><br><span class="line"># 左上角網站名字 主頁居中網站名字</span><br><span class="line">blog_title_font:</span><br><span class="line">  font_link: </span><br><span class="line">  font-family: var(--global-font)</span><br></pre></td></tr></table></figure><h4 id="自定义字体（魔改）"><a href="#自定义字体（魔改）" class="headerlink" title="自定义字体（魔改）"></a>自定义字体（魔改）</h4><div class="note warning modern"><p>声明：<strong>非商免字体</strong>未经授权仅限个人使用，不得用于商业用途！</p></div><ol><li>准备好字体文件后，在 <code>[BlogRoot]\source\css\custom.css</code>（没有就自己创建）中添加以下代码：(记得更改为自己的配置)</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">@font-face &#123;</span><br><span class="line">  /* 为载入的字体取名字(随意) */</span><br><span class="line">  font-family: &#x27;YSHST&#x27;;</span><br><span class="line">  /* 字体文件地址(相对或者绝对路径都可以) */</span><br><span class="line">  src: url(/font/YSHaoShenTi-2.ttf);</span><br><span class="line">  /* 定义加粗样式(加粗多少) */</span><br><span class="line">  font-weight: normal;</span><br><span class="line">  /* 定义字体样式(斜体/非斜体) */</span><br><span class="line">  font-style: normal;</span><br><span class="line">  /* 定义显示样式 */</span><br><span class="line">  font-display: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>各个属性的定义：<ol><li>font-family属性值中使用webfont来声明使用的是服务器端字体，即设置文本的字体名称。</li><li>src属性值中首先指定了字体文件所在的路径。</li><li>format声明字体文件的格式，可以省略文件格式的声明，单独使用src属性值。</li><li>font-style：设置文本样式。取值：normal:不使用斜体；italic:使用斜体；oblique:使用倾斜体；inherit：从父元素继承。</li><li>支持格式：<em>.eot(老版本IE)，</em>.otf，<em>.ttf，</em>.woff，*.woff2(推荐)</li></ol></li></ol><p>3.在主题配置文件 <code>_config.butterfly.yml</code>中的 <code>font</code>配置项以及 <code>blog_title_font</code>配置项写上你刚刚引入的字体名称，系统会根据先后次序从前到后依次加载这些字体：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># Global font settings</span><br><span class="line"># Don&#x27;t modify the following settings unless you know how they work (非必要不要修改)</span><br><span class="line">font:</span><br><span class="line">  global-font-size: &#x27;15px&#x27;</span><br><span class="line">  code-font-size: &#x27;14px&#x27;</span><br><span class="line">  font-family: YSHST, -apple-system, &#x27;Quicksand&#x27;, &#x27;Nimbus Roman No9 L&#x27;, &#x27;PingFang SC&#x27;, &#x27;Hiragino Sans GB&#x27;, &#x27;Noto Serif SC&#x27;, &#x27;Microsoft Yahei&#x27;, &#x27;WenQuanYi Micro Hei&#x27;, &#x27;ST Heiti&#x27;, sans-serif;</span><br><span class="line">  code-font-family: Consolas, YSHST, &quot;Microsoft YaHei&quot;, Menlo, &quot;PingFang SC&quot;, &quot;Microsoft JhengHei&quot;, sans-serif</span><br><span class="line"></span><br><span class="line"># 左上角網站名字 主頁居中網站名字</span><br><span class="line">blog_title_font:</span><br><span class="line">  font_link: </span><br><span class="line">  font-family: YSHST, -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot; , &quot;Helvetica Neue&quot; , Lato, Roboto, &quot;PingFang SC&quot; , &quot;Microsoft JhengHei&quot; , &quot;Microsoft YaHei&quot; , sans-serif</span><br></pre></td></tr></table></figure><h3 id="本地搜索系统"><a href="#本地搜索系统" class="headerlink" title="本地搜索系统"></a>本地搜索系统</h3><ol><li>安装依赖：前往博客根目录，打开cmd命令窗口执行 <code>npm install hexo-generator-search --save</code></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>2.注入配置：修改站点配置文件 <code>_config.yml</code>，添加如下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  content: true</span><br></pre></td></tr></table></figure><p>3.主题中开启搜索：在主题配置文件_config.butterfly.yml中修改以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">   enable: true</span><br></pre></td></tr></table></figure><h2 id="侧边栏设置"><a href="#侧边栏设置" class="headerlink" title="侧边栏设置"></a>侧边栏设置</h2><h3 id="头像"><a href="#头像" class="headerlink" title="头像"></a>头像</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">avatar:  </span><br><span class="line">img:https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091559854.png</span><br><span class="line">  effect: false # true则会一直转圈</span><br></pre></td></tr></table></figure><h3 id="排版"><a href="#排版" class="headerlink" title="排版"></a>排版</h3><p>可自行决定哪个项目需要显示，可决定位置，也可以设置不显示侧边栏。</p><p>修改主题配置文件 <code>_config.butterfly.yml</code>，</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">aside:</span><br><span class="line">  enable: true</span><br><span class="line">  hide: false</span><br><span class="line">  button: true</span><br><span class="line">  mobile: true # display on mobile</span><br><span class="line">  position: right # left or right</span><br><span class="line">  display:</span><br><span class="line">    archive: true</span><br><span class="line">    tag: true</span><br><span class="line">    category: true</span><br><span class="line">  card_author:</span><br><span class="line">    enable: true</span><br><span class="line">    description:</span><br><span class="line">    button:</span><br><span class="line">      enable: false #头像区域开启链接</span><br><span class="line">      icon: fab fa-github</span><br><span class="line">      text: Follow Me</span><br><span class="line">      link: https://github.com/xxxxxx</span><br><span class="line">  card_announcement:</span><br><span class="line">    enable: true #公告</span><br><span class="line">    content: This is my Blog</span><br><span class="line">  card_recent_post:</span><br><span class="line">    enable: true</span><br><span class="line">    limit: 3 # if set 0 will show all</span><br><span class="line">    sort: date # date or updated</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  card_categories:</span><br><span class="line">    enable: true</span><br><span class="line">    limit: 8 # if set 0 will show all</span><br><span class="line">    expand: none # none/true/false</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  card_tags:</span><br><span class="line">    enable: true</span><br><span class="line">    limit: 20 # if set 0 will show all</span><br><span class="line">    color: false</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  card_archives:</span><br><span class="line">    enable: true #文章</span><br><span class="line">    type: monthly # yearly or monthly</span><br><span class="line">    format: MMMM YYYY # eg: YYYY年MM月</span><br><span class="line">    order: -1 # Sort of order. 1, asc for ascending; -1, desc for descending</span><br><span class="line">    limit: 8 # if set 0 will show all</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line">  card_webinfo:</span><br><span class="line">    enable: false #统计</span><br><span class="line">    post_count: true</span><br><span class="line">    last_push_date: true</span><br><span class="line">    sort_order: # Don&#x27;t modify the setting unless you know how it works</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="社交图标"><a href="#社交图标" class="headerlink" title="社交图标"></a>社交图标</h4><p><code>Butterfly</code>支持<a href="https://fontawesome.com/icons?from=io">font-awesome v6</a>图标。</p><p>书写格式：<code>图标名：url || 描述性文字</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">social:</span><br><span class="line">  fab fa-github: https://github.com/xxxxx || Github</span><br><span class="line">  fas fa-envelope: mailto:xxxxxx@gmail.com || Email</span><br></pre></td></tr></table></figure><h4 id="访问人数"><a href="#访问人数" class="headerlink" title="访问人数"></a>访问人数</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">busuanzi:</span><br><span class="line">  site_uv: true  # 本站总访客数</span><br><span class="line">  site_pv: true  # 本站总访问量 </span><br><span class="line">  page_pv: true  # 本文总阅读量</span><br></pre></td></tr></table></figure><h4 id="运行时间"><a href="#运行时间" class="headerlink" title="运行时间"></a>运行时间</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># Time difference between publish date and now (網頁運行時間)</span><br><span class="line"># Formal: Month/Day/Year Time or Year/Month/Day Time</span><br><span class="line">runtimeshow:</span><br><span class="line">  enable: false</span><br><span class="line">  publish_date: 8/9/2022 00:00:00</span><br><span class="line">  ##网页开通时间</span><br><span class="line">  #格式: 月/日/年 时间</span><br><span class="line">  #也可以写成 年/月/日 时间</span><br></pre></td></tr></table></figure><h3 id="右下角按钮"><a href="#右下角按钮" class="headerlink" title="右下角按钮"></a>右下角按钮</h3><h4 id="简繁转换"><a href="#简繁转换" class="headerlink" title="简繁转换"></a>简繁转换</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">translate:</span><br><span class="line">  enable: false</span><br><span class="line">  # 默认按钮显示文字(网站是简体，应设置为&#x27;default: 繁&#x27;)</span><br><span class="line">  default: 繁</span><br><span class="line">  # the language of website (1 - Traditional Chinese/ 2 - Simplified Chinese）</span><br><span class="line">  # 网站默认语言，1: 繁体中文, 2: 简体中文</span><br><span class="line">  defaultEncoding: 2</span><br><span class="line">  # Time delay 延迟时间,若不在前, 要设定延迟翻译时间, 如100表示100ms,默认为0</span><br><span class="line">  translateDelay: 0</span><br><span class="line">  # 当文字是简体时，按钮显示的文字</span><br><span class="line">  msgToTraditionalChinese: &#x27;繁&#x27;</span><br><span class="line">  # 当文字是繁体时，按钮显示的文字</span><br><span class="line">  msgToSimplifiedChinese: &#x27;簡&#x27;</span><br></pre></td></tr></table></figure><h4 id="夜间模式"><a href="#夜间模式" class="headerlink" title="夜间模式"></a>夜间模式</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># dark mode</span><br><span class="line">darkmode:</span><br><span class="line">  enable: false</span><br><span class="line">  # dark 和 light 两种模式切换按钮</span><br><span class="line">  button: true</span><br><span class="line">  # Switch dark/light mode automatically (自動切換 dark mode和 light mode)</span><br><span class="line">  # autoChangeMode: 1  Following System Settings, if the system doesn&#x27;t support dark mode, it will switch dark mode between 6 pm to 6 am</span><br><span class="line">  # autoChangeMode: 2  Switch dark mode between 6 pm to 6 am</span><br><span class="line">  # autoChangeMode: false</span><br><span class="line">  autoChangeMode: false</span><br></pre></td></tr></table></figure><p>v2.0.0 开始增加一个选项，可开启自动切换light mode 和 dark mode。</p><ul><li><code>autoChangeMode: 1</code> 跟随系统而变化，不支持的浏览器/系统将按照时间晚上6点到早上6点之间切换为 dark mode。</li><li><code>autoChangeMode: 2</code>只按照时间 晚上6点到早上6点之间切换为 dark mode,其余时间为light mode。</li><li><code>autoChangeMode: false</code> 取消自动切换。</li></ul><h4 id="阅读模式"><a href="#阅读模式" class="headerlink" title="阅读模式"></a>阅读模式</h4><p>阅读模式下会去掉除文章外的内容，避免干扰阅读。只会出现在文章页面，右下角会有阅读模式按钮。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">readmode: true</span><br></pre></td></tr></table></figure><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><h3 id="图片大图查看模式"><a href="#图片大图查看模式" class="headerlink" title="图片大图查看模式"></a>图片大图查看模式</h3><p>只能开启一个。<br>如果你并不想为某张图片添加大图查看模式，你可以使用 html 格式引用图片，并为图片添加 no-lightbox class 名，例如：<code>&lt;img src=&quot;xxxx.jpg&quot; class=&quot;no-lightbox&quot;&gt;</code>。</p><p>修改主题配置文件 <code>_config.butterfly.yml</code>中 <code>fancybox</code>属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># fancybox http://fancyapps.com/fancybox/3/</span><br><span class="line">fancybox: false</span><br></pre></td></tr></table></figure><h3 id="打字效果"><a href="#打字效果" class="headerlink" title="打字效果"></a>打字效果</h3><p>修改主题配置文件 <code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Typewriter Effect (打字效果)</span><br><span class="line"># https://github.com/disjukr/activate-power-mode</span><br><span class="line">activate_power_mode:</span><br><span class="line">  enable: true</span><br><span class="line">  colorful: true # open particle animation (冒光特效)</span><br><span class="line">  shake: false #  open shake (抖動特效)</span><br><span class="line">  mobile: false</span><br></pre></td></tr></table></figure><h3 id="pjax"><a href="#pjax" class="headerlink" title="pjax"></a>pjax</h3><p>当用户点击链接，通过 <code>ajax</code> 更新页面需要变化的部分，然后使用 HTML5 的 <code>pushState</code> 修改浏览器的 URL 地址。这样可以不用重复加载相同的资源 <code>（css/js）</code>， 从而提升网页的加载速度。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Pjax [Beta]</span><br><span class="line"># It may contain bugs and unstable, give feedback when you find the bugs.</span><br><span class="line"># https://github.com/MoOx/pjax</span><br><span class="line">pjax: </span><br><span class="line">  enable: true</span><br><span class="line">  # 对于一些第三方插件，有些并不支持 pjax 。</span><br><span class="line">  # 你可以把网页加入到 exclude 里，这个网页会被 pjax 排除在外。</span><br><span class="line">  # 点击该网页会重新加载网站。</span><br><span class="line">  exclude: </span><br><span class="line">    - /music/</span><br></pre></td></tr></table></figure><h2 id="文章界面"><a href="#文章界面" class="headerlink" title="文章界面"></a>文章界面</h2><h3 id="文章置顶，隐藏与封面"><a href="#文章置顶，隐藏与封面" class="headerlink" title="文章置顶，隐藏与封面"></a>文章置顶，隐藏与封面</h3><h4 id="置顶"><a href="#置顶" class="headerlink" title="置顶"></a>置顶</h4><ol><li>你可以直接在文章的 <code>front-matter</code>区域里添加 <code>sticky: 1</code>属性来把这篇文章置顶。数值越大，置顶的优先级越大。也可用 <code>top</code>进行置顶     <code>sticky</code>的优先级会比 <code>top</code>高</li></ol><h4 id="隐藏"><a href="#隐藏" class="headerlink" title="隐藏"></a>隐藏</h4><p>使用插件 <strong>hexo-generator-index-custom</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-generator-index //卸载原有渲染工具</span><br><span class="line">npm install hexo-generator-index-custom --save //使用渲染工具</span><br><span class="line">yarn remove hexo-generator-index</span><br><span class="line">yarn add hexo-generator-index-custom</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在文件_config.yml中增加或修改配置(渲染配置与原来相同可查看着更改)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">index_generator:</span><br><span class="line">  path: &#x27;&#x27;</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line">  pagination_dir: page</span><br></pre></td></tr></table></figure><p>在文章开头添加 <code>hide</code>参数，可以隐藏文章</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hide: true</span><br></pre></td></tr></table></figure><ol><li>文章的markdown文档上，在 <code>Front-matter</code>添加 <code>cover</code>，并填上要显示的图片地址。如果不配置 <code>cover</code>，可以设置显示默认的 <code>cover</code>；如果不想在首页显示cover，可以设置为 <code>false</code>。<br>修改主题配置文件 <code>_config.butterfly.yml</code>。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cover:</span><br><span class="line">  # 是否显示文章封面</span><br><span class="line">  index_enable: true</span><br><span class="line">  aside_enable: true</span><br><span class="line">  archives_enable: true</span><br><span class="line">  # 封面显示的位置</span><br><span class="line">  # 三个值可配置 left , right , both</span><br><span class="line">  position: both</span><br><span class="line">  # 当没有设置cover时，默认的封面显示</span><br><span class="line">  default_cover: </span><br></pre></td></tr></table></figure><p>当配置多张图片时，会随机选择一张作为cover，此时写法应为：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">default_cover:</span><br><span class="line">   - https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091601367.jpg</span><br><span class="line">   - https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091601071.jpg</span><br><span class="line">   - https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091601600.png</span><br><span class="line">   - https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091602546.jpg</span><br><span class="line">   - https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091602350.jpg</span><br><span class="line">   - https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091602437.png</span><br><span class="line">   - https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091603916.jpg</span><br></pre></td></tr></table></figure><h3 id="文章页面相关配置"><a href="#文章页面相关配置" class="headerlink" title="文章页面相关配置"></a>文章页面相关配置</h3><h4 id="文章meta显示"><a href="#文章meta显示" class="headerlink" title="文章meta显示"></a>文章meta显示</h4><p><code>post_meta</code>这个属性用于显示文章的相关信息的，修改主题配置文件 <code>_config.butterfly.yml</code>。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">post_meta:</span><br><span class="line">  page:</span><br><span class="line">    date_type: both # created or updated or both 主页文章日期是创建日或者更新日或都显示</span><br><span class="line">    date_format: relative # date/relative 显示日期还是相对日期</span><br><span class="line">    categories: true # true or false 主页是否显示分类</span><br><span class="line">    tags: true # true or false 主页是否显示标签</span><br><span class="line">    label: true # true or false 显示描述性文字</span><br><span class="line">  post:</span><br><span class="line">    date_type: both # created or updated or both 文章页日期是创建日或者更新日或都显示</span><br><span class="line">    date_format: relative # date/relative 显示日期还是相对日期</span><br><span class="line">    categories: true # true or false 文章页是否显示分类</span><br><span class="line">    tags: true # true or false 文章页是否显示标签</span><br><span class="line">    label: true # true or false 显示描述性文字</span><br></pre></td></tr></table></figure><h4 id="文章版权和协议许可"><a href="#文章版权和协议许可" class="headerlink" title="文章版权和协议许可"></a>文章版权和协议许可</h4><p>修改主题配置文件 <code>_config.butterfly.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">post_copyright:</span><br><span class="line">  enable: true</span><br><span class="line">  decode: false</span><br><span class="line">  author_href:</span><br><span class="line">  license: CC BY-NC-SA 4.0</span><br><span class="line">  license_url: https://creativecommons.org/licenses/by-nc-sa/4.0/</span><br></pre></td></tr></table></figure><p>由于 <code>Hexo 4.1</code>开始，默认对网址进行解码，以至于如果是中文网址，会被解码，可设置 <code>decode: true</code>来显示中文网址。如果有文章（例如：转载文章）不需要显示版权，可以在文章页 <code>Front-matter</code>中单独设置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">copyright: false</span><br></pre></td></tr></table></figure><p>从 <code>v3.0.0</code>开始，支持对单独文章设置版权信息，可以在文章Front-matter单独设置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">post_copyright:</span><br><span class="line">copyright_author: xxxx</span><br><span class="line">copyright_author_href: https://xxxxxx.com</span><br><span class="line">copyright_url: https://xxxxxx.com</span><br><span class="line">copyright_info: 此文章版权归xxxxx所有，如有转载，请註明来自原作者</span><br></pre></td></tr></table></figure><h4 id="文章打赏"><a href="#文章打赏" class="headerlink" title="文章打赏"></a>文章打赏</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">reward:</span><br><span class="line">  enable: false</span><br><span class="line">  QR_code:</span><br><span class="line">    - img: /img/wechat.jpg</span><br><span class="line">      link:</span><br><span class="line">      text: wechat</span><br><span class="line">    - img: /img/qq.jpg</span><br><span class="line">      link:</span><br><span class="line">      text: qq</span><br></pre></td></tr></table></figure><h4 id="文章目录TOC"><a href="#文章目录TOC" class="headerlink" title="文章目录TOC"></a>文章目录TOC</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">toc:</span><br><span class="line">  post: true # 文章页是否显示 TOC</span><br><span class="line">  page: false # 普通页面是否显示 TOC</span><br><span class="line">  number: true # 是否显示章节数</span><br><span class="line">  expand: false# 是否展开 TOC</span><br><span class="line">  style_simple: false # for post 简洁模式（侧边栏只显示 TOC, 只对文章页有效 ）</span><br></pre></td></tr></table></figure><h4 id="文章分页按钮"><a href="#文章分页按钮" class="headerlink" title="文章分页按钮"></a>文章分页按钮</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># post_pagination (分页)</span><br><span class="line"># value: 1 || 2 || false# false:为关闭分页按钮；1:下一篇显示的是旧文章；2:下一篇显示的是新文章</span><br><span class="line"># 1: The &#x27;next post&#x27; will link to old post</span><br><span class="line"># 2: The &#x27;next post&#x27; will link to new post</span><br><span class="line"># false: disable pagination</span><br><span class="line">post_pagination: false</span><br></pre></td></tr></table></figure><h4 id="文章右下角分享链接"><a href="#文章右下角分享链接" class="headerlink" title="文章右下角分享链接"></a>文章右下角分享链接</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sharejs:</span><br><span class="line">  enable: false</span><br><span class="line">  sites: facebook,twitter,wechat,weibo,qq</span><br></pre></td></tr></table></figure><h1 id="魔改"><a href="#魔改" class="headerlink" title="魔改"></a>魔改</h1><h2 id="外挂标签的引入"><a href="#外挂标签的引入" class="headerlink" title="外挂标签的引入"></a>外挂标签的引入</h2><ol><li>安装插件,在博客根目录 <code>[BlogRoot]</code>下打开终端，运行以下指令：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-butterfly-tag-plugins-plus --save</span><br></pre></td></tr></table></figure><p>虑到hexo自带的markdown渲染插件 <code>hexo-renderer-marked</code>与外挂标签语法的兼容性较差，建议您将其替换成<a href="https://www.npmjs.com/package/hexo-renderer-kramed">hexo-renderer-kramed</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-renderer-marked --save</span><br><span class="line">npm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><ol><li>添加配置信息，以下为写法示例<br>在站点配置文件 <code>_config.yml</code>或者主题配置文件 <code>_config.butterfly.yml</code>中添加</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"># tag-plugins-plus</span><br><span class="line"># see https://akilar.top/posts/615e2dec/</span><br><span class="line">tag_plugins:</span><br><span class="line">  enable: true # 开关</span><br><span class="line">  priority: 5 #过滤器优先权</span><br><span class="line">  issues: false #issues标签依赖注入开关</span><br><span class="line">  link:</span><br><span class="line">    placeholder: /img/link.png #link_card标签默认的图标图片</span><br><span class="line">  CDN:</span><br><span class="line">    anima: https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/font-awesome-animation.min.css #动画标签anima的依赖</span><br><span class="line">    jquery: https://npm.elemecdn.com/jquery@latest/dist/jquery.min.js #issues标签依赖</span><br><span class="line">    issues: https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/issues.js #issues标签依赖</span><br><span class="line">    iconfont: //at.alicdn.com/t/font_2032782_8d5kxvn09md.js #参看https://akilar.top/posts/d2ebecef/</span><br><span class="line">    carousel: https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/assets/carousel-touch.js</span><br><span class="line">    tag_plugins_css: https://npm.elemecdn.com/hexo-butterfly-tag-plugins-plus@latest/lib/tag_plugins.css</span><br></pre></td></tr></table></figure><ol><li>参数释义</li></ol><div class="table-container"><table><thead><tr><th style="text-align:left">参数</th><th style="text-align:left">备选值/类型</th><th style="text-align:left">释义</th></tr></thead><tbody><tr><td style="text-align:left">enable</td><td style="text-align:left">true/false</td><td style="text-align:left">【必选】控制开关</td></tr><tr><td style="text-align:left">priority</td><td style="text-align:left">number</td><td style="text-align:left">【可选】过滤器优先级，数值越小，执行越早，默认为10，选填</td></tr><tr><td style="text-align:left">issues</td><td style="text-align:left">true/false</td><td style="text-align:left">【可选】issues标签控制开关，默认为false</td></tr><tr><td style="text-align:left">link.placeholder</td><td style="text-align:left">【必选】link卡片外挂标签的默认图标</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">CDN.anima</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】动画标签anima的依赖</td></tr><tr><td style="text-align:left">CDN.jquery</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】issues标签依赖</td></tr><tr><td style="text-align:left">CDN.issues</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】issues标签依赖</td></tr><tr><td style="text-align:left">CDN.iconfont</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】iconfont标签symbol样式引入，如果不想引入，则设为false</td></tr><tr><td style="text-align:left">CDN.carousel</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】carousel旋转相册标签鼠标拖动依赖，如果不想引入则设为false</td></tr><tr><td style="text-align:left">CDN.tag_plugins_css</td><td style="text-align:left">URL</td><td style="text-align:left">【可选】外挂标签样式的CSS依赖，为避免CDN缓存延迟，建议将@latest改为具体版本号</td></tr></tbody></table></div><h2 id="aplayer音乐播放器"><a href="#aplayer音乐播放器" class="headerlink" title="aplayer音乐播放器"></a>aplayer音乐播放器</h2><ol><li><p>安装依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-tag-aplayer</span><br></pre></td></tr></table></figure></li><li><p>使用</p><p>由於需要全局都插入 aplayer 和 meting 資源，為了防止插入重複的資源，需要把 asset_inject 設為 false</p><p>在 Hexo 的配置文件中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">aplayer:</span><br><span class="line">  meting: true</span><br><span class="line">  asset_inject: false</span><br></pre></td></tr></table></figure><p>开启主題的 aplayerInject</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># Inject the css and script (aplayer/meting)</span><br><span class="line">aplayerInject:</span><br><span class="line">  enable: true</span><br><span class="line">  per_page: true</span><br></pre></td></tr></table></figure><p>插入 Aplayer html</p><p><code>&lt;div class=&quot;aplayer no-destroy&quot; data-id=&quot;60198&quot; data-server=&quot;netease&quot; data-type=&quot;playlist&quot; data-fixed=&quot;true&quot; data-autoplay=&quot;true&quot;&gt; &lt;/div&gt;</code></p><p>把 aplayer代碼 插入到主題配置文件的 inject.bottom 去</p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- &lt;div class=&quot;aplayer no-destroy&quot; data-id=&quot;7552069168&quot; data-server=&quot;netease&quot; data-type=&quot;playlist&quot; data-fixed=&quot;true&quot; data-mini=&quot;true&quot; data-listFolded=&quot;false&quot; data-order=&quot;random&quot; data-lrctype=&quot;1&quot; data-preload=&quot;none&quot; data-autoplay=&quot;true&quot; muted&gt;&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="bilibili视频部署"><a href="#bilibili视频部署" class="headerlink" title="bilibili视频部署"></a>bilibili视频部署</h2><ol><li>在 <code>source\css\custom.css</code>自定义样式的文件中引入如下代码（这是我的，你可以自行微调）：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">/*哔哩哔哩视频适配*/</span><br><span class="line">.aspect-ratio &#123;</span><br><span class="line">  position: relative;</span><br><span class="line">  width: 90%;</span><br><span class="line">  height: auto;</span><br><span class="line">  padding-bottom: 75%;</span><br><span class="line">  margin: 3% auto;</span><br><span class="line">  text-align: center;</span><br><span class="line">&#125;</span><br><span class="line">.aspect-ratio iframe &#123;</span><br><span class="line">  position: absolute;</span><br><span class="line">  width: 100%;</span><br><span class="line">  height: 86%;</span><br><span class="line">  left: 0;</span><br><span class="line">  top: 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>直接复制插入你的 <code>md</code> 文章就行，修改里面的 <code>aid</code> 为你视频的 <code>AV</code>号：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;div align=center class=&quot;aspect-ratio&quot;&gt;</span><br><span class="line">    &lt;iframe src=&quot;https://player.bilibili.com/player.html?aid=474023258&amp;&amp;page=1&amp;as_wide=1&amp;high_quality=1&amp;danmaku=0&quot; </span><br><span class="line">    scrolling=&quot;no&quot; </span><br><span class="line">    border=&quot;0&quot; </span><br><span class="line">    frameborder=&quot;no&quot; </span><br><span class="line">    framespacing=&quot;0&quot; </span><br><span class="line">    high_quality=1</span><br><span class="line">    danmaku=1 </span><br><span class="line">    allowfullscreen=&quot;true&quot;&gt; </span><br><span class="line">    &lt;/iframe&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="文章H1-H6标题小风车转动效果"><a href="#文章H1-H6标题小风车转动效果" class="headerlink" title="文章H1~H6标题小风车转动效果"></a>文章H1~H6标题小风车转动效果</h2><ol><li>修改主题配置文件 <code>_config.butterfly.yml</code>文件的 <code>beautify</code>配置项：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">beautify:</span><br><span class="line">  enable: true</span><br><span class="line">  field: post # site/post</span><br><span class="line">  # title-prefix-icon: &#x27;\f0c1&#x27; 原内容</span><br><span class="line">  title-prefix-icon: &#x27;\f863&#x27;</span><br><span class="line">  title-prefix-icon-color: &quot;#F47466&quot;</span><br></pre></td></tr></table></figure><ol><li><code>\source\css\custom.css</code> 中加入以下代码，可以自己调节一下转速:</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">/* 文章页H1-H6图标样式效果 */</span><br><span class="line">/* 控制风车转动速度 4s那里可以自己调节快慢 */</span><br><span class="line">h1::before,</span><br><span class="line">h2::before,</span><br><span class="line">h3::before,</span><br><span class="line">h4::before,</span><br><span class="line">h5::before,</span><br><span class="line">h6::before &#123;</span><br><span class="line">  -webkit-animation: ccc 4s linear infinite;</span><br><span class="line">  animation: ccc 4s linear infinite;</span><br><span class="line">&#125;</span><br><span class="line">/* 控制风车转动方向 -1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */</span><br><span class="line">@-webkit-keyframes ccc &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    -webkit-transform: rotate(0deg);</span><br><span class="line">    transform: rotate(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  to &#123;</span><br><span class="line">    -webkit-transform: rotate(-1turn);</span><br><span class="line">    transform: rotate(-1turn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">@keyframes ccc &#123;</span><br><span class="line">  0% &#123;</span><br><span class="line">    -webkit-transform: rotate(0deg);</span><br><span class="line">    transform: rotate(0deg);</span><br><span class="line">  &#125;</span><br><span class="line">  to &#123;</span><br><span class="line">    -webkit-transform: rotate(-1turn);</span><br><span class="line">    transform: rotate(-1turn);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">/* 设置风车颜色 */</span><br><span class="line">#content-inner.layout h1::before &#123;</span><br><span class="line">  color: #ef50a8;</span><br><span class="line">  margin-left: -1.55rem;</span><br><span class="line">  font-size: 1.3rem;</span><br><span class="line">  margin-top: -0.23rem;</span><br><span class="line">&#125;</span><br><span class="line">#content-inner.layout h2::before &#123;</span><br><span class="line">  color: #fb7061;</span><br><span class="line">  margin-left: -1.35rem;</span><br><span class="line">  font-size: 1.1rem;</span><br><span class="line">  margin-top: -0.12rem;</span><br><span class="line">&#125;</span><br><span class="line">#content-inner.layout h3::before &#123;</span><br><span class="line">  color: #ffbf00;</span><br><span class="line">  margin-left: -1.22rem;</span><br><span class="line">  font-size: 0.95rem;</span><br><span class="line">  margin-top: -0.09rem;</span><br><span class="line">&#125;</span><br><span class="line">#content-inner.layout h4::before &#123;</span><br><span class="line">  color: #a9e000;</span><br><span class="line">  margin-left: -1.05rem;</span><br><span class="line">  font-size: 0.8rem;</span><br><span class="line">  margin-top: -0.09rem;</span><br><span class="line">&#125;</span><br><span class="line">#content-inner.layout h5::before &#123;</span><br><span class="line">  color: #57c850;</span><br><span class="line">  margin-left: -0.9rem;</span><br><span class="line">  font-size: 0.7rem;</span><br><span class="line">  margin-top: 0rem;</span><br><span class="line">&#125;</span><br><span class="line">#content-inner.layout h6::before &#123;</span><br><span class="line">  color: #5ec1e0;</span><br><span class="line">  margin-left: -0.9rem;</span><br><span class="line">  font-size: 0.66rem;</span><br><span class="line">  margin-top: 0rem;</span><br><span class="line">&#125;</span><br><span class="line">/* s设置风车hover动效 6s那里可以自己调节快慢*/</span><br><span class="line">#content-inner.layout h1:hover,</span><br><span class="line">#content-inner.layout h2:hover,</span><br><span class="line">#content-inner.layout h3:hover,</span><br><span class="line">#content-inner.layout h4:hover,</span><br><span class="line">#content-inner.layout h5:hover,</span><br><span class="line">#content-inner.layout h6:hover &#123;</span><br><span class="line">  color: var(--theme-color);</span><br><span class="line">&#125;</span><br><span class="line">#content-inner.layout h1:hover::before,</span><br><span class="line">#content-inner.layout h2:hover::before,</span><br><span class="line">#content-inner.layout h3:hover::before,</span><br><span class="line">#content-inner.layout h4:hover::before,</span><br><span class="line">#content-inner.layout h5:hover::before,</span><br><span class="line">#content-inner.layout h6:hover::before &#123;</span><br><span class="line">  color: var(--theme-color);</span><br><span class="line">  -webkit-animation: ccc 6s linear infinite;</span><br><span class="line">  animation: ccc 6s linear infinite;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="挂绳小猫咪"><a href="#挂绳小猫咪" class="headerlink" title="挂绳小猫咪"></a>挂绳小猫咪</h2><ol><li>制作一个盛放内容的盒子，在 <code>根目录/node_modules/hexo-theme-butterfly/layout/includes/head.pug</code>(如果是 <code>git clone</code> 安装在 <code>根目录/themes/butterfly/layout/includes/head.pug</code>)最后一行加入如下代码：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#myscoll</span><br></pre></td></tr></table></figure><p>其实随便放在哪里都行，只要能加载出来就行</p><ol><li>在 <code>[BlogRoot]/node_modules/hexo-theme-butterfly/source/js</code>文件夹下新建一个 <code>cat.js</code>，将以下代码复制到文件中。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br></pre></td><td class="code"><pre><span class="line">if (document.body.clientWidth &gt; 992) &#123;</span><br><span class="line">    function getBasicInfo() &#123;</span><br><span class="line">        /* 窗口高度 */</span><br><span class="line">        var ViewH = $(window).height();</span><br><span class="line">        /* document高度 */</span><br><span class="line">        var DocH = $(&quot;body&quot;)[0].scrollHeight;</span><br><span class="line">        /* 滚动的高度 */</span><br><span class="line">        var ScrollTop = $(window).scrollTop();</span><br><span class="line">        /* 可滚动的高度 */</span><br><span class="line">        var S_V = DocH - ViewH;</span><br><span class="line">        var Band_H = ScrollTop / (DocH - ViewH) * 100;</span><br><span class="line">        return &#123;</span><br><span class="line">            ViewH: ViewH,</span><br><span class="line">            DocH: DocH,</span><br><span class="line">            ScrollTop: ScrollTop,</span><br><span class="line">            Band_H: Band_H,</span><br><span class="line">            S_V: S_V</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    function show(basicInfo) &#123;</span><br><span class="line">        if (basicInfo.ScrollTop &gt; 0.001) &#123;</span><br><span class="line">            $(&quot;.neko&quot;).css(&#x27;display&#x27;, &#x27;block&#x27;);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            $(&quot;.neko&quot;).css(&#x27;display&#x27;, &#x27;none&#x27;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    (function ($) &#123;</span><br><span class="line">        $.fn.nekoScroll = function (option) &#123;</span><br><span class="line">            var defaultSetting = &#123;</span><br><span class="line">                top: &#x27;0&#x27;,</span><br><span class="line">                scroWidth: 6 + &#x27;px&#x27;,</span><br><span class="line">                z_index: 9999,</span><br><span class="line">                zoom: 0.9,</span><br><span class="line">                borderRadius: 5 + &#x27;px&#x27;,</span><br><span class="line">                right: 60 + &#x27;px&#x27;,</span><br><span class="line">                // 这里可以换为你喜欢的图片，例如我就换为了雪人，但是要抠图</span><br><span class="line">                nekoImg: &quot;https://bu.dusays.com/2022/07/20/62d812db74be9.png&quot;,</span><br><span class="line">                hoverMsg: &quot;喵喵喵~&quot;,</span><br><span class="line">                color: &quot;#6f42c1&quot;,</span><br><span class="line">                during: 500,</span><br><span class="line">                blog_body: &quot;body&quot;,</span><br><span class="line">            &#125;;</span><br><span class="line">            var setting = $.extend(defaultSetting, option);</span><br><span class="line">            var getThis = this.prop(&quot;className&quot;) !== &quot;&quot; ? &quot;.&quot; + this.prop(&quot;className&quot;) : this.prop(&quot;id&quot;) !== &quot;&quot; ? &quot;#&quot; +</span><br><span class="line">                this.prop(&quot;id&quot;) : this.prop(&quot;nodeName&quot;);</span><br><span class="line">            if ($(&quot;.neko&quot;).length == 0) &#123;</span><br><span class="line">                this.after(&quot;&lt;div class=\&quot;neko\&quot; id=&quot; + setting.nekoname + &quot; data-msg=\&quot;&quot; + setting.hoverMsg + &quot;\&quot;&gt;&lt;/div&gt;&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">            let basicInfo = getBasicInfo();</span><br><span class="line">            $(getThis)</span><br><span class="line">                .css(&#123;</span><br><span class="line">                    &#x27;position&#x27;: &#x27;fixed&#x27;,</span><br><span class="line">                    &#x27;width&#x27;: setting.scroWidth,</span><br><span class="line">                    &#x27;top&#x27;: setting.top,</span><br><span class="line">                    &#x27;height&#x27;: basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + &#x27;px&#x27;,</span><br><span class="line">                    &#x27;z-index&#x27;: setting.z_index,</span><br><span class="line">                    &#x27;background-color&#x27;: setting.bgcolor,</span><br><span class="line">                    &quot;border-radius&quot;: setting.borderRadius,</span><br><span class="line">                    &#x27;right&#x27;: setting.right,</span><br><span class="line">                    &#x27;background-image&#x27;: &#x27;url(&#x27; + setting.scImg + &#x27;)&#x27;,</span><br><span class="line">                    &#x27;background-image&#x27;: &#x27;-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)&#x27;, &#x27;border-radius&#x27;: &#x27;2em&#x27;,</span><br><span class="line">                    &#x27;background-size&#x27;: &#x27;contain&#x27;</span><br><span class="line">                &#125;);</span><br><span class="line">            $(&quot;#&quot; + setting.nekoname)</span><br><span class="line">                .css(&#123;</span><br><span class="line">                    &#x27;position&#x27;: &#x27;fixed&#x27;,</span><br><span class="line">                    &#x27;top&#x27;: basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + &#x27;px&#x27;,</span><br><span class="line">                    &#x27;z-index&#x27;: setting.z_index * 10,</span><br><span class="line">                    &#x27;right&#x27;: setting.right,</span><br><span class="line">                    &#x27;background-image&#x27;: &#x27;url(&#x27; + setting.nekoImg + &#x27;)&#x27;,</span><br><span class="line">                &#125;);</span><br><span class="line">            show(getBasicInfo());</span><br><span class="line">            $(window)</span><br><span class="line">                .scroll(function () &#123;</span><br><span class="line">                    let basicInfo = getBasicInfo();</span><br><span class="line">                    show(basicInfo);</span><br><span class="line">                    $(getThis)</span><br><span class="line">                        .css(&#123;</span><br><span class="line">                            &#x27;position&#x27;: &#x27;fixed&#x27;,</span><br><span class="line">                            &#x27;width&#x27;: setting.scroWidth,</span><br><span class="line">                            &#x27;top&#x27;: setting.top,</span><br><span class="line">                            &#x27;height&#x27;: basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + &#x27;px&#x27;,</span><br><span class="line">                            &#x27;z-index&#x27;: setting.z_index,</span><br><span class="line">                            &#x27;background-color&#x27;: setting.bgcolor,</span><br><span class="line">                            &quot;border-radius&quot;: setting.borderRadius,</span><br><span class="line">                            &#x27;right&#x27;: setting.right,</span><br><span class="line">                            &#x27;background-image&#x27;: &#x27;url(&#x27; + setting.scImg + &#x27;)&#x27;,</span><br><span class="line">                            &#x27;background-image&#x27;: &#x27;-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)&#x27;, &#x27;border-radius&#x27;: &#x27;2em&#x27;,</span><br><span class="line">                            &#x27;background-size&#x27;: &#x27;contain&#x27;</span><br><span class="line">                        &#125;);</span><br><span class="line">                    $(&quot;#&quot; + setting.nekoname)</span><br><span class="line">                        .css(&#123;</span><br><span class="line">                            &#x27;position&#x27;: &#x27;fixed&#x27;,</span><br><span class="line">                            &#x27;top&#x27;: basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + &#x27;px&#x27;,</span><br><span class="line">                            &#x27;z-index&#x27;: setting.z_index * 10,</span><br><span class="line">                            &#x27;right&#x27;: setting.right,</span><br><span class="line">                            &#x27;background-image&#x27;: &#x27;url(&#x27; + setting.nekoImg + &#x27;)&#x27;,</span><br><span class="line">                        &#125;);</span><br><span class="line">                    if (basicInfo.ScrollTop == basicInfo.S_V) &#123;</span><br><span class="line">                        $(&quot;#&quot; + setting.nekoname)</span><br><span class="line">                            .addClass(&quot;showMsg&quot;)</span><br><span class="line">                    &#125; else &#123;</span><br><span class="line">                        $(&quot;#&quot; + setting.nekoname)</span><br><span class="line">                            .removeClass(&quot;showMsg&quot;);</span><br><span class="line">                        $(&quot;#&quot; + setting.nekoname)</span><br><span class="line">                            .attr(&quot;data-msg&quot;, setting.hoverMsg);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;);</span><br><span class="line">            this.click(function (e) &#123;</span><br><span class="line">                btf.scrollToDest(0, 500)</span><br><span class="line">            &#125;);</span><br><span class="line">            $(&quot;#&quot; + setting.nekoname)</span><br><span class="line">                .click(function () &#123;</span><br><span class="line">                    btf.scrollToDest(0, 500)</span><br><span class="line">                &#125;);</span><br><span class="line">            return this;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)(jQuery);</span><br><span class="line"></span><br><span class="line">    $(document).ready(function () &#123;</span><br><span class="line">        //部分自定义</span><br><span class="line">        $(&quot;#myscoll&quot;).nekoScroll(&#123;</span><br><span class="line">            bgcolor: &#x27;rgb(0 0 0 / .5)&#x27;, //背景颜色，没有绳子背景图片时有效</span><br><span class="line">            borderRadius: &#x27;2em&#x27;,</span><br><span class="line">            zoom: 0.9</span><br><span class="line">        &#125;</span><br><span class="line">        );</span><br><span class="line">        //自定义（去掉以下注释，并注释掉其他的查看效果）</span><br><span class="line">        /*</span><br><span class="line">        $(&quot;#myscoll&quot;).nekoScroll(&#123;</span><br><span class="line">            nekoname:&#x27;neko1&#x27;, //nekoname，相当于id</span><br><span class="line">            nekoImg:&#x27;img/猫咪.png&#x27;, //neko的背景图片</span><br><span class="line">            scImg:&quot;img/绳1.png&quot;, //绳子的背景图片</span><br><span class="line">            bgcolor:&#x27;#1e90ff&#x27;, //背景颜色，没有绳子背景图片时有效</span><br><span class="line">            zoom:0.9, //绳子长度的缩放值</span><br><span class="line">            hoverMsg:&#x27;你好~喵&#x27;, //鼠标浮动到neko上方的对话框信息</span><br><span class="line">            right:&#x27;100px&#x27;, //距离页面右边的距离</span><br><span class="line">            fontFamily:&#x27;楷体&#x27;, //对话框字体</span><br><span class="line">            fontSize:&#x27;14px&#x27;, //对话框字体的大小</span><br><span class="line">            color:&#x27;#1e90ff&#x27;, //对话框字体颜色</span><br><span class="line">            scroWidth:&#x27;8px&#x27;, //绳子的宽度</span><br><span class="line">            z_index:100, //不用解释了吧</span><br><span class="line">            during:1200, //从顶部到底部滑动的时长</span><br><span class="line">        &#125;);</span><br><span class="line">        */</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>在 <code>[BlogRoot]/node_modules/hexo-theme-butterfly/source/css</code>文件夹下新建一个 <code>cat.css</code>，将以下代码复制到文件中。当然你也可以选择不新建 css 文件，复制代码到 <code>custom.css</code>也行，总之有地方引入就行。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">body::-webkit-scrollbar &#123;</span><br><span class="line">    width: 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.neko &#123;</span><br><span class="line">    width: 64px;</span><br><span class="line">    height: 64px;</span><br><span class="line">    background-image: url(&quot;https://bu.dusays.com/2022/07/20/62d812db74be9.png&quot;);</span><br><span class="line">    position: absolute;</span><br><span class="line">    right: 32px;</span><br><span class="line">    background-repeat: no-repeat;</span><br><span class="line">    background-size: contain;</span><br><span class="line">    transform: translateX(50%);</span><br><span class="line">    cursor: pointer;</span><br><span class="line">    font-family: tzy;</span><br><span class="line">    font-weight: 600;</span><br><span class="line">    font-size: 16px;</span><br><span class="line">    color: #6f42c1;</span><br><span class="line">    display: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.neko::after &#123;</span><br><span class="line">    display: none;</span><br><span class="line">    width: 100px;</span><br><span class="line">    height: 100px;</span><br><span class="line">    background-image: url(&quot;https://bu.dusays.com/2022/07/20/62d812d95e6f5.png&quot;);</span><br><span class="line">    background-size: contain;</span><br><span class="line">    z-index: 9999;</span><br><span class="line">    position: absolute;</span><br><span class="line">    right: 50%;</span><br><span class="line">    text-align: center;</span><br><span class="line">    line-height: 100px;</span><br><span class="line">    top: -115%;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.neko.showMsg::after &#123;</span><br><span class="line">    content: attr(data-msg);</span><br><span class="line">    display: block;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    text-overflow: ellipsis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.neko:hover::after &#123;</span><br><span class="line">    content: attr(data-msg);</span><br><span class="line">    display: block;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    text-overflow: ellipsis;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.neko.fontColor::after &#123;</span><br><span class="line">    color: #333;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * @description: 滚动条样式  跟猫二选一</span><br><span class="line"> */</span><br><span class="line">@media screen and (max-width:992px) &#123;</span><br><span class="line">    ::-webkit-scrollbar &#123;</span><br><span class="line">        width: 8px !important;</span><br><span class="line">        height: 8px !important</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ::-webkit-scrollbar-track &#123;</span><br><span class="line">        border-radius: 2em;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ::-webkit-scrollbar-thumb &#123;</span><br><span class="line">        background-color: rgb(255 255 255 / .3);</span><br><span class="line">        background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);</span><br><span class="line">        border-radius: 2em</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    ::-webkit-scrollbar-corner &#123;</span><br><span class="line">        background-color: transparent</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>在主题配置文件 <code>_config.butterfly.yml</code>中引入 <code>cat.js</code>和 <code>cat.css</code>，当然还有在bottom的最前面引入 <code>jQuery</code>，因为 <code>cat.js</code>的语法依赖 <code>jQuery</code>。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">inject:</span><br><span class="line">  head:</span><br><span class="line">    - &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/cat.css&quot;&gt;</span><br><span class="line">  bottom:</span><br><span class="line">    - &lt;script defer src=&quot;https://npm.elemecdn.com/jquery@latest/dist/jquery.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">    - &lt;script defer data-pjax src=&quot;/js/cat.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="Twikoo评论系统部署-Vercel方式"><a href="#Twikoo评论系统部署-Vercel方式" class="headerlink" title="Twikoo评论系统部署(Vercel方式)"></a>Twikoo评论系统部署(Vercel方式)</h2><h3 id="twikoo安装"><a href="#twikoo安装" class="headerlink" title="twikoo安装"></a>twikoo安装</h3><p>参考文字教程：</p><ul><li><a href="https://twikoo.js.org/quick-start.html#针对-vercel-部署的更新方式">官方：Twikoo文档-针对Vercel的部署</a></li><li><a href="https://tzy1997.com/articles/hexo1611/">TZY：基于 Hexo 键入评论功能</a></li></ul><p>视频教程：</p><ul><li><a href="https://www.bilibili.com/video/BV1Fh411e7ZH/">Twikoo Vercel 部署教程</a></li><li><a href="https://www.bilibili.com/video/BV1Re4y1H7g8/">安知鱼：23.butterfly配置twikoo评论系统</a></li></ul><p>通用配置（一定要配置）<br>从3.0.0开始，开启评论需要在comments-use中填写你需要的评论，这里参照你主题版本的格式写。</p><p>支持双评论显示，只需要配置两个评论（第一个为默认显示）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">comments:</span><br><span class="line">  # Up to two comments system, the first will be shown as default</span><br><span class="line">  # Choose: Disqus/Disqusjs/Livere/Gitalk/Valine/Waline/Utterances/Facebook Comments/Twikoo/Giscus/Remark42/Artalk</span><br><span class="line">  use: </span><br><span class="line">  - Twikoo # Valine,Disqus</span><br><span class="line">  text: true # Display the comment name next to the button</span><br><span class="line">  # lazyload: The comment system will be load when comment element enters the browser&#x27;s viewport.</span><br><span class="line">  # If you set it to true, the comment count will be invalid</span><br><span class="line">  lazyload: true                                      </span><br><span class="line">  count: false # Display comment count in post&#x27;s top_img</span><br><span class="line">  card_post_count: false # Display comment count in Home Page</span><br></pre></td></tr></table></figure><p>配置</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">twikoo:</span><br><span class="line">  envId: 网站网址</span><br><span class="line">  region:</span><br><span class="line">  visitor: false</span><br><span class="line">  option:</span><br></pre></td></tr></table></figure><h3 id="twikoo配置"><a href="#twikoo配置" class="headerlink" title="twikoo配置"></a>twikoo配置</h3><ol><li>评论框提示信息</li></ol><p><code>在名称框输入QQ账号会自动获取邮箱和名称，邮箱和名称为必填项&lt;br&gt; 本站已开启邮件回复，请确保填入的邮箱有效</code></p><ol><li><p>邮箱提醒配置</p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091611844.png" alt="image-20230109014858766"></p><p><code>MAIL_TEMPLATE</code></p></li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&lt;div id=&quot;isForwardContent&quot;&gt;&lt;div&gt;&lt;div id=&quot;content&quot;&gt;&lt;div style=&quot;background: white;width: 95%;max-width: 800px;margin: auto auto;         border-radius: 15px;         border: #39c5bb 1px solid;         overflow: hidden;         -webkit-box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.12);         box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.18);       &quot;&gt;&lt;header style=&quot;overflow: hidden&quot;&gt;&lt;img src=&quot;https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301071813681.png&quot; style=&quot;width: 100%; z-index: 666&quot; /&gt;&lt;/header&gt;&lt;div style=&quot;padding: 5px 20px;background-color: #46e1c60d&quot;&gt;&lt;div class=&quot;dear&quot; style=&quot;  border-radius: 30px;           position: relative;             color: white;             float: left;             z-index: 999;             background: #39c5bb;             padding: 10px 30px;             margin: -25px auto 0;             box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.3);           &quot;&gt;亲爱的 $&#123;PARENT_NICK&#125; 同学：&lt;/div&gt;&lt;br /&gt;&lt;center&gt;&lt;h3&gt;来自 &lt;strong&gt;$&#123;NICK&#125;&lt;/strong&gt; 的回复&lt;/h3&gt;&lt;/center&gt;&lt;hr style=&quot;width:200px;border:0;border-bottom:1px solid #e5e5e5;margin:12px auto;&quot; /&gt;&lt;br /&gt;&lt;p&gt;您好！您在 &lt;a href=&quot;$&#123;POST_URL&#125;&quot; style=&quot;text-decoration: none; color: #39c5bb&quot; target=&quot;_blank&quot;&gt; $&#123;SITE_NAME&#125; &lt;/a&gt;上发表的评论：&lt;/p&gt;&lt;div class=&quot;tk-content&quot; style=&quot;border-radius: 8px;border: 1px solid #ddd; padding-bottom: 20px; background-color: #f5f5f5; margin: 15px 0px; padding-left: 20px; padding-right: 20px; padding-top: 20px;&quot;&gt;$&#123;PARENT_COMMENT&#125;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;$&#123;NICK&#125;&lt;/strong&gt; 给您回复啦： &lt;/p&gt;&lt;div class=&quot;tk-content&quot; style=&quot;border-radius: 8px;border: 1px solid #ddd; padding-bottom: 20px; background-color: #f5f5f5;  margin: 15px 0px;  padding-left: 20px; padding-right: 20px; padding-top: 20px; &quot;&gt;$&#123;COMMENT&#125;&lt;/div&gt;&lt;p&gt;欢迎经常来玩啊： &lt;a style=&quot;text-decoration:none; color:#39c5bb&quot; href=&quot;$&#123;SITE_URL&#125;&quot; target=&quot;_blank&quot;&gt;$&#123;SITE_NAME&#125;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;(此邮件由系统发出，支持直接回复)&lt;/p&gt;&lt;div class=&quot;chakan&quot; style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;$&#123;POST_URL&#125;&quot; style=&quot;color:#ffffff;text-decoration:none;display:inline-block;min-height:28px;line-height:28px;padding:0 13px;outline:0;background:#39c5bb;font-size:13px;text-align: center;font-weight:400;border:0;border-radius:999em&quot; target=&quot;_blank&quot;&gt;点击去原文查看&gt;&gt;&lt;/a&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;footer-p&quot; style=&quot;text-align: center; margin-top: 3rem; display:block;color:#b3b3b1;text-decoration:none;&quot;&gt;&lt;img src=&quot;https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301070538463.png&quot; style=&quot;width:5rem; margin:0 auto;border-radius: 5px;&quot; /&gt;  &lt;hr style=&quot;width:165px;border:0;border-bottom:1px solid #e5e5e5;margin:5px auto;&quot; /&gt;© 2022-2023 By &lt;a href=&quot;https://azhezhezhe.com/&quot; style=&quot;text-align:center; color: #39c5bb;text-decoration: none;font-weight: bold&quot; target=&quot;_blank&quot;&gt;zy&lt;/a&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;style type=&quot;text/css&quot;&gt; .qmbox ::-webkit-scrollbar &#123; display: none; &#125; &lt;/style&gt;&lt;style id=&quot;cloudAttachStyle&quot; type=&quot;text/css&quot;&gt; .qmbox #divNeteaseBigAttach, .qmbox #divNeteaseBigAttach_bak &#123; display: none; &#125; &lt;/style&gt;&lt;style id=&quot;blockquoteStyle&quot; type=&quot;text/css&quot;&gt; .qmbox blockquote &#123; display: none; &#125; &lt;/style&gt;&lt;style type=&quot;text/css&quot;&gt; .qmbox body &#123; font-size: 14px; font-family: arial, verdana, sans-serif; line-height: 1.666; padding: 0; margin: 0; overflow: auto; white-space: normal; word-wrap: break-word; min-height: 100px; &#125; .qmbox td, .qmbox input, .qmbox button, .qmbox select, .qmbox body &#123; font-family: Helvetica, &#x27;Microsoft Yahei&#x27;, verdana; &#125; .qmbox pre &#123; white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -pre-wrap; white-space: -o-pre-wrap; word-wrap: break-word; width: 95%; &#125; .qmbox th, .qmbox td &#123; font-family: arial, verdana, sans-serif; line-height: 1.666; &#125; .qmbox img &#123; border: 0; &#125; .qmbox header, .qmbox footer, .qmbox section, .qmbox aside, .qmbox article, .qmbox nav, .qmbox hgroup, .qmbox figure, .qmbox figcaption &#123; display: block; &#125; .qmbox blockquote &#123; margin-right: 0px; &#125; &lt;/style&gt;&lt;style type=&quot;text/css&quot;&gt; @media screen and (max-width: 1100px) &#123;#content p &#123;font-size: 10px;&#125; #content h3 &#123;font-size: 14px;&#125; .footer-p &#123;font-size: 9px;&#125; .dear &#123;font-size: 12px;&#125;&#125; &lt;/style&gt;&lt;style id=&quot;ntes_link_color&quot; type=&quot;text/css&quot;&gt; .qmbox a, .qmbox td a &#123; color: #236da1; &#125; &lt;/style&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>MAIL_TEMPLATE_ADMIN</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;div&gt;&lt;div id=&quot;isForwardContent&quot;&gt;&lt;div&gt;&lt;div id=&quot;content&quot;&gt;&lt;div style=&quot;background: white;width: 95%;max-width: 800px;margin: auto auto;         border-radius: 15px;         border: #39c5bb 1px solid;         overflow: hidden;         -webkit-box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.12);         box-shadow: 0px 0px 20px 0px rgba(0, 0, 0, 0.18);       &quot;&gt;&lt;header style=&quot;overflow: hidden&quot;&gt;&lt;img src=&quot;https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301071813681.png&quot; style=&quot;width: 100%; z-index: 666&quot; /&gt;&lt;/header&gt;&lt;div style=&quot;padding: 5px 20px;background-color: #46e1c60d&quot;&gt;&lt;div class=&quot;dear&quot; style=&quot;  border-radius: 30px;           position: relative;             color: white;             float: left;             z-index: 999;             background: #39c5bb;             padding: 10px 30px;             margin: -25px auto 0;             box-shadow: 5px 5px 5px rgba(0, 0, 0, 0.3);           &quot;&gt;亲爱的站长：&lt;/div&gt;&lt;br /&gt;&lt;center&gt;&lt;h3&gt;来自 &lt;strong&gt;$&#123;NICK&#125;&lt;/strong&gt; 的评论&lt;/h3&gt;&lt;/center&gt;&lt;hr style=&quot;width:200px;border:0;border-bottom:1px solid #e5e5e5;margin:12px auto;&quot; /&gt;&lt;br&gt;&lt;p&gt; 您好！系统得知 &lt;strong&gt;$&#123;NICK&#125;&lt;/strong&gt; 刚刚在您的网站发表评论： &lt;/p&gt;&lt;div class=&quot;tk-content&quot; style=&quot;border-radius: 8px;border: 1px solid #ddd; padding-bottom: 20px; background-color: #f5f5f5;  margin: 15px 0px;  padding-left: 20px; padding-right: 20px; padding-top: 20px; &quot;&gt;$&#123;COMMENT&#125;&lt;/div&gt;&lt;p&gt;特地通知您，快去看看吧！&lt;/p&gt;&lt;div class=&quot;chakan&quot; style=&quot;text-align: center;&quot;&gt;&lt;a href=&quot;$&#123;POST_URL&#125;&quot; style=&quot;color:#ffffff;text-decoration:none;display:inline-block;min-height:28px;line-height:28px;padding:0 13px;outline:0;background:#39c5bb;font-size:13px;text-align: center;font-weight:400;border:0;border-radius:999em&quot; target=&quot;_blank&quot;&gt;点击去原文查看&gt;&gt;&lt;/a&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;footer-p&quot; style=&quot;text-align: center; margin-top: 3rem; display:block;color:#b3b3b1;text-decoration:none;&quot;&gt;&lt;img src=&quot;https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301070538463.png&quot; style=&quot;width:5rem; margin:0 auto;border-radius: 5px;&quot; /&gt;  &lt;hr style=&quot;width:165px;border:0;border-bottom:1px solid #e5e5e5;margin:5px auto;&quot; /&gt;© 2022-2023 By &lt;a href=&quot;https://azhezhezhe.com/&quot; style=&quot;text-align:center; color: #39c5bb;text-decoration: none;font-weight: bold&quot; target=&quot;_blank&quot;&gt;zy&lt;/a&gt;&lt;p&gt;&lt;/p&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;/div&gt;&lt;style type=&quot;text/css&quot;&gt; .qmbox ::-webkit-scrollbar &#123; display: none; &#125; &lt;/style&gt;&lt;style id=&quot;cloudAttachStyle&quot; type=&quot;text/css&quot;&gt; .qmbox #divNeteaseBigAttach, .qmbox #divNeteaseBigAttach_bak &#123; display: none; &#125; &lt;/style&gt;&lt;style id=&quot;blockquoteStyle&quot; type=&quot;text/css&quot;&gt; .qmbox blockquote &#123; display: none; &#125; &lt;/style&gt;&lt;style type=&quot;text/css&quot;&gt; .qmbox body &#123; font-size: 14px; font-family: arial, verdana, sans-serif; line-height: 1.666; padding: 0; margin: 0; overflow: auto; white-space: normal; word-wrap: break-word; min-height: 100px; &#125; .qmbox td, .qmbox input, .qmbox button, .qmbox select, .qmbox body &#123; font-family: Helvetica, &#x27;Microsoft Yahei&#x27;, verdana; &#125; .qmbox pre &#123; white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -pre-wrap; white-space: -o-pre-wrap; word-wrap: break-word; width: 95%; &#125; .qmbox th, .qmbox td &#123; font-family: arial, verdana, sans-serif; line-height: 1.666; &#125; .qmbox img &#123; border: 0; &#125; .qmbox header, .qmbox footer, .qmbox section, .qmbox aside, .qmbox article, .qmbox nav, .qmbox hgroup, .qmbox figure, .qmbox figcaption &#123; display: block; &#125; .qmbox blockquote &#123; margin-right: 0px; &#125; &lt;/style&gt;&lt;style type=&quot;text/css&quot;&gt; @media screen and (max-width: 1100px) &#123;#content p &#123;font-size: 10px;&#125; #content h3 &#123;font-size: 14px;&#125; .footer-p &#123;font-size: 9px;&#125; .dear &#123;font-size: 12px;&#125;&#125; &lt;/style&gt;&lt;style id=&quot;ntes_link_color&quot; type=&quot;text/css&quot;&gt; .qmbox a, .qmbox td a &#123; color: #236da1; &#125; &lt;/style&gt;&lt;/div&gt;&lt;/div&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="评论表情包放大（Leonus）"><a href="#评论表情包放大（Leonus）" class="headerlink" title="评论表情包放大（Leonus）"></a>评论表情包放大（Leonus）</h2><ol><li>新建文件 <code>[BlogRoot]\source\js\emoji.js</code>，写入如下内容：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">// 如果当前页有评论就执行函数</span><br><span class="line">if (document.getElementById(&#x27;post-comment&#x27;)) owoBig();</span><br><span class="line">// 表情放大</span><br><span class="line">function owoBig() &#123;</span><br><span class="line">    let flag = 1, // 设置节流阀</span><br><span class="line">        owo_time = &#x27;&#x27;, // 设置计时器</span><br><span class="line">        m = 3; // 设置放大倍数</span><br><span class="line">    // 创建盒子</span><br><span class="line">    let div = document.createElement(&#x27;div&#x27;),</span><br><span class="line">        body = document.querySelector(&#x27;body&#x27;);</span><br><span class="line">    // 设置ID</span><br><span class="line">    div.id = &#x27;owo-big&#x27;;</span><br><span class="line">    // 插入盒子</span><br><span class="line">    body.appendChild(div)</span><br><span class="line"></span><br><span class="line">    // 构造observer</span><br><span class="line">    let observer = new MutationObserver(mutations =&gt; &#123;</span><br><span class="line"></span><br><span class="line">        for (let i = 0; i &lt; mutations.length; i++) &#123;</span><br><span class="line">            let dom = mutations[i].addedNodes,</span><br><span class="line">                owo_body = &#x27;&#x27;;</span><br><span class="line">            if (dom.length == 2 &amp;&amp; dom[1].className == &#x27;OwO-body&#x27;) owo_body = dom[1];</span><br><span class="line">            // 如果需要在评论内容中启用此功能请解除下面的注释</span><br><span class="line">            // else if (dom.length == 1 &amp;&amp; dom[0].className == &#x27;tk-comment&#x27;) owo_body = dom[0];</span><br><span class="line">            else continue;</span><br><span class="line">          </span><br><span class="line">            // 禁用右键（手机端长按会出现右键菜单，为了体验给禁用掉）</span><br><span class="line">            if (document.body.clientWidth &lt;= 768) owo_body.addEventListener(&#x27;contextmenu&#x27;, e =&gt; e.preventDefault());</span><br><span class="line">            // 鼠标移入</span><br><span class="line">            owo_body.onmouseover = (e) =&gt; &#123;</span><br><span class="line">                    if (flag &amp;&amp; e.target.tagName == &#x27;IMG&#x27;) &#123;</span><br><span class="line">                        flag = 0;</span><br><span class="line">                        // 移入300毫秒后显示盒子</span><br><span class="line">                        owo_time = setTimeout(() =&gt; &#123;</span><br><span class="line">                            let height = e.path[0].clientHeight * m, // 盒子高</span><br><span class="line">                                width = e.path[0].clientWidth * m, // 盒子宽</span><br><span class="line">                                left = (e.x - e.offsetX) - (width - e.path[0].clientWidth) / 2, // 盒子与屏幕左边距离</span><br><span class="line">                                top = e.y - e.offsetY; // 盒子与屏幕顶部距离</span><br><span class="line"></span><br><span class="line">                            if ((left + width) &gt; body.clientWidth) left -= ((left + width) - body.clientWidth + 10); // 右边缘检测，防止超出屏幕</span><br><span class="line">                            if (left &lt; 0) left = 10; // 左边缘检测，防止超出屏幕</span><br><span class="line">                            // 设置盒子样式</span><br><span class="line">                            div.style.cssText = `display:flex; height:$&#123;height&#125;px; width:$&#123;width&#125;px; left:$&#123;left&#125;px; top:$&#123;top&#125;px;`;</span><br><span class="line">                            // 在盒子中插入图片</span><br><span class="line">                            div.innerHTML = `&lt;img src=&quot;$&#123;e.target.src&#125;&quot;&gt;`</span><br><span class="line">                        &#125;, 300);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;;</span><br><span class="line">            // 鼠标移出隐藏盒子</span><br><span class="line">            owo_body.onmouseout = () =&gt; &#123; div.style.display = &#x27;none&#x27;, flag = 1, clearTimeout(owo_time); &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;)</span><br><span class="line">    observer.observe(document.getElementById(&#x27;post-comment&#x27;), &#123; subtree: true, childList: true &#125;) // 监听的 元素 和 配置项</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>新建文件 <code>[BlogRoot]\source\js\emoji.css</code>，写入如下内容（更推荐全部写在 <code>custom.css</code>）：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#owo-big &#123;</span><br><span class="line">    position: fixed;</span><br><span class="line">    align-items: center;</span><br><span class="line">    background-color: rgb(255, 255, 255);</span><br><span class="line">    border: 1px #aaa solid;</span><br><span class="line">    border-radius: 10px;</span><br><span class="line">    z-index: 9999;</span><br><span class="line">    display: none;</span><br><span class="line">    transform: translate(0, -105%);</span><br><span class="line">    overflow: hidden;</span><br><span class="line">    animation: owoIn 0.3s cubic-bezier(0.42, 0, 0.3, 1.11);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">[data-theme=dark] #owo-big &#123;</span><br><span class="line">    background-color: #4a4a4a</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#owo-big img &#123;</span><br><span class="line">    width: 100%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 动画效果代码由 Heo：https://blog.zhheo.com/ 提供 */</span><br><span class="line">@keyframes owoIn &#123;</span><br><span class="line">    0% &#123;</span><br><span class="line">        transform: translate(0, -95%);</span><br><span class="line">        opacity: 0;</span><br><span class="line">    &#125;</span><br><span class="line">    100% &#123;</span><br><span class="line">        transform: translate(0, -105%);</span><br><span class="line">        opacity: 1;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>引入 <code>css</code>和 <code>js</code>文件，</li></ol><h2 id="评论输入提醒（Leonus）"><a href="#评论输入提醒（Leonus）" class="headerlink" title="评论输入提醒（Leonus）"></a>评论输入提醒（Leonus）</h2><p>实现很简单，纯css实现，在 <code>custom.css</code>内添加如下样式：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">/* 设置文字内容 :nth-child(1)的作用是选择第几个 */</span><br><span class="line">.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(1):before &#123;</span><br><span class="line">    content: &#x27;输入QQ号会自动获取昵称和头像🐧&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(2):before &#123;</span><br><span class="line">    content: &#x27;收到回复将会发送到您的邮箱📧&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(3):before &#123;</span><br><span class="line">    content: &#x27;可以通过昵称访问您的网站🔗&#x27;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 当用户点击输入框时显示 */</span><br><span class="line">.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::before,</span><br><span class="line">.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::after &#123;</span><br><span class="line">    display: block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 主内容区 */</span><br><span class="line">.el-input.el-input--small.el-input-group.el-input-group--prepend::before &#123;</span><br><span class="line">    /* 先隐藏起来 */</span><br><span class="line">    display: none;</span><br><span class="line">    /* 绝对定位 */</span><br><span class="line">    position: absolute;</span><br><span class="line">    /* 向上移动60像素 */</span><br><span class="line">    top: -60px;</span><br><span class="line">    /* 文字强制不换行，防止left:50%导致的文字换行 */</span><br><span class="line">    white-space: nowrap;</span><br><span class="line">    /* 圆角 */</span><br><span class="line">    border-radius: 10px;</span><br><span class="line">    /* 距离左边50% */</span><br><span class="line">    left: 50%;</span><br><span class="line">    /* 然后再向左边挪动自身的一半，即可实现居中 */</span><br><span class="line">    transform: translate(-50%);</span><br><span class="line">    /* 填充 */</span><br><span class="line">    padding: 14px 18px;</span><br><span class="line">    background: #444;</span><br><span class="line">    color: #fff;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">/* 小角标 */</span><br><span class="line">.el-input.el-input--small.el-input-group.el-input-group--prepend::after &#123;</span><br><span class="line">    display: none;</span><br><span class="line">    content: &#x27;&#x27;;</span><br><span class="line">    position: absolute;</span><br><span class="line">    /* 内容大小（宽高）为0且边框大小不为0的情况下，每一条边（4个边）都是一个三角形，组成一个正方形。</span><br><span class="line">    我们先将所有边框透明，再给其中的一条边添加颜色就可以实现小三角图标 */</span><br><span class="line">    border: 12px solid transparent;</span><br><span class="line">    border-top-color: #444;</span><br><span class="line">    left: 50%;</span><br><span class="line">    transform: translate(-50%, -48px);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="博客统计"><a href="#博客统计" class="headerlink" title="博客统计"></a>博客统计</h2><p><a href="https://blog.eurkon.com/post/1213ef82.html">Hexo 博客文章统计图 | Eurkon</a></p><h2 id="文章加密插件"><a href="#文章加密插件" class="headerlink" title="文章加密插件"></a>文章加密插件</h2><p>详见开源地址：<a href="https://github.com/D0n9X1n/hexo-blog-encrypt">hexo-blog-encrypt</a></p><ol><li><p>在根目录执行以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-blog-encrypt</span><br></pre></td></tr></table></figure></li><li>Front matter配置方法</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World</span><br><span class="line">tags:</span><br><span class="line">- 作为日记加密</span><br><span class="line">date: 2016-03-30 21:12:21</span><br><span class="line">password: mikemessi</span><br><span class="line">abstract: 有东西被加密了, 请输入密码查看.</span><br><span class="line">message: 您好, 这里需要密码.</span><br><span class="line">theme: xray</span><br><span class="line">wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.</span><br><span class="line">wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</span><br><span class="line">---</span><br></pre></td></tr></table></figure><ol><li><p>配置文件 <code>[BlogRoot]\_config.yml</code>中针对tags的加密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Security</span><br><span class="line">encrypt: # hexo-blog-encrypt</span><br><span class="line">  abstract: 有东西被加密了, 请输入密码查看.</span><br><span class="line">  message: 您好, 这里需要密码.</span><br><span class="line">  tags:</span><br><span class="line">  - &#123;name: tagName, password: 密码A&#125;</span><br><span class="line">  - &#123;name: tagName, password: 密码B&#125;</span><br><span class="line">  theme: xray</span><br><span class="line">  wrong_pass_message: 抱歉, 这个密码看着不太对, 请再试试.</span><br><span class="line">  wrong_hash_message: 抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.</span><br></pre></td></tr></table></figure></li><li><p>你可以在线挑选你喜欢的主题,并应用到你的博客中:</p><ul><li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Default/">default</a></li><li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Blink/">blink</a></li><li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Shrink/">shrink</a></li><li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Flip/">flip</a></li><li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Up/">up</a></li><li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Surge/">surge</a></li><li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Wave/">wave</a></li><li><a href="https://mhexo.github.io/2020/12/23/Theme-Test-Xray/">xray</a></li></ul></li></ol><h2 id="pdf"><a href="#pdf" class="headerlink" title="pdf"></a>pdf</h2><ol><li>安装hexo-pdf插件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-pdf --save</span><br></pre></td></tr></table></figure><ol><li><p>外挂标签的引用格式如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 1.本地文件:在md文件路径下创建一个同名文件夹，其内放pdf文件名为xxx.pdf的文件</span><br><span class="line">&#123;% pdf xxx.pdf %&#125;</span><br><span class="line"># 2.在线链接</span><br><span class="line">&#123;% pdf https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/pdf/小作文讲义.pdf %&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="控制台样式自定义（安知鱼）"><a href="#控制台样式自定义（安知鱼）" class="headerlink" title="控制台样式自定义（安知鱼）"></a>控制台样式自定义（安知鱼）</h2><p>ASCII字符画生成器见这篇文章：<a href="https://blog.csdn.net/qq_31708763/article/details/119712041">CSDN:在线生成ascii字符画网站字符图案在线生成工具</a></p><ol><li>新建js文件 <code>\source\js\console.js</code>，并写入如下代码：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line">var now1 = new Date();</span><br><span class="line"></span><br><span class="line">function createtime1() &#123;</span><br><span class="line">    var grt = new Date(&quot;01/07/2023 00:00:00&quot;); //此处修改你的建站时间或者网站上线时间</span><br><span class="line">    now1.setTime(now1.getTime() + 250);</span><br><span class="line">    var days = (now1 - grt) / 1000 / 60 / 60 / 24;</span><br><span class="line">    var dnum = Math.floor(days);</span><br><span class="line"></span><br><span class="line">    var ascll = [</span><br><span class="line">        `欢迎来到稚的小窝!`,</span><br><span class="line">        `稚 is now 🍭🍭🍭`,</span><br><span class="line">        `  </span><br><span class="line"></span><br><span class="line">zzzzzzzzzzzzzzzzzyyyyyyy           yyyyyyy</span><br><span class="line">z:::::::::::::::z y:::::y         y:::::y </span><br><span class="line">z::::::::::::::z   y:::::y       y:::::y  </span><br><span class="line">zzzzzzzz::::::z     y:::::y     y:::::y   </span><br><span class="line">      z::::::z       y:::::y   y:::::y  </span><br><span class="line">     z::::::z         y:::::y y:::::y   </span><br><span class="line">    z::::::z           y:::::y:::::y    </span><br><span class="line">   z::::::z             y:::::::::y     </span><br><span class="line">  z::::::zzzzzzzz        y:::::::y      </span><br><span class="line"> z::::::::::::::z         y:::::y       </span><br><span class="line">z:::::::::::::::z        y:::::y        </span><br><span class="line">zzzzzzzzzzzzzzzzz       y:::::y         </span><br><span class="line">                       y:::::y          </span><br><span class="line">                      y:::::y           </span><br><span class="line">                     y:::::y            </span><br><span class="line">                    y:::::y             </span><br><span class="line">                   yyyyyyy                                                     </span><br><span class="line">`,</span><br><span class="line">        &quot;小站已经苟活&quot;,</span><br><span class="line">        dnum,</span><br><span class="line">        &quot;天啦!&quot;,</span><br><span class="line">        &quot;©2023 By zy&quot;,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    setTimeout(</span><br><span class="line">        console.log.bind(</span><br><span class="line">            console,</span><br><span class="line">            `\n%c$&#123;ascll[0]&#125; %c $&#123;ascll[1]&#125; %c $&#123;ascll[2]&#125; %c$&#123;ascll[3]&#125;%c $&#123;ascll[4]&#125;%c $&#123;ascll[5]&#125;\n\n%c $&#123;ascll[6]&#125;\n`,</span><br><span class="line">            &quot;color:#39c5bb&quot;,</span><br><span class="line">            &quot;&quot;,</span><br><span class="line">            &quot;color:#39c5bb&quot;,</span><br><span class="line">            &quot;color:#39c5bb&quot;,</span><br><span class="line">            &quot;&quot;,</span><br><span class="line">            &quot;color:#39c5bb&quot;,</span><br><span class="line">            &quot;&quot;</span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">createtime1();</span><br><span class="line"></span><br><span class="line">function createtime2() &#123;</span><br><span class="line">    var ascll2 = [`NCC2-036`, `调用前置摄像头拍照成功，识别为「大聪明」`, `Photo captured: `, ` 🤪 `];</span><br><span class="line"></span><br><span class="line">    setTimeout(</span><br><span class="line">        console.log.bind(</span><br><span class="line">            console,</span><br><span class="line">            `%c $&#123;ascll2[0]&#125; %c $&#123;ascll2[1]&#125; %c \n$&#123;ascll2[2]&#125; %c\n$&#123;ascll2[3]&#125;`,</span><br><span class="line">            &quot;color:white; background-color:#10bcc0&quot;,</span><br><span class="line">            &quot;&quot;,</span><br><span class="line">            &quot;&quot;,</span><br><span class="line">            &#x27;background:url(&quot;https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301071158211.png&quot;) no-repeat;font-size:450%&#x27;</span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    setTimeout(console.log.bind(console, &quot;%c WELCOME %c 欢迎光临&quot;, &quot;color:white; background-color:#23c682&quot;, &quot;&quot;));</span><br><span class="line"></span><br><span class="line">    setTimeout(</span><br><span class="line">        console.warn.bind(</span><br><span class="line">            console,</span><br><span class="line">            &quot;%c ⚡ Powered by zy🥝 %c 你正在访问稚的小窝&quot;,</span><br><span class="line">            &quot;color:white; background-color:#f0ad4e&quot;,</span><br><span class="line">            &quot;&quot;</span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    setTimeout(console.log.bind(console, &quot;%c W23-12 %c 系统监测到你已打开控制台&quot;, &quot;color:white; background-color:#4f90d9&quot;, &quot;&quot;));</span><br><span class="line">    setTimeout(</span><br><span class="line">        console.warn.bind(console, &quot;%c S013-782 %c 你现在正处于监控中&quot;, &quot;color:white; background-color:#d9534f&quot;, &quot;&quot;)</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line">createtime2();</span><br><span class="line"></span><br><span class="line">// 重写console方法</span><br><span class="line">console.log = function () &#123; &#125;;</span><br><span class="line">console.error = function () &#123; &#125;;</span><br><span class="line">console.warn = function () &#123; &#125;;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ol><li>在主题配置文件 <code>[BlogRoot]\_config.butterfly.yml</code>中引入该js文件</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">inject: </span><br><span class="line">  bottom: </span><br><span class="line">   - &lt;script async src=&quot;/js/console.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="网站恶搞标题"><a href="#网站恶搞标题" class="headerlink" title="网站恶搞标题"></a>网站恶搞标题</h2><ol><li>新建文件 <code>[BlogRoot]\source\js\title.js</code>，写入以下内容：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">//动态标题</span><br><span class="line">var OriginTitile = document.title;</span><br><span class="line">var titleTime;</span><br><span class="line">document.addEventListener(&#x27;visibilitychange&#x27;, function () &#123;</span><br><span class="line">  if (document.hidden) &#123;</span><br><span class="line">    //离开当前页面时标签显示内容</span><br><span class="line">    document.title = &#x27;👀跑哪里去了~&#x27;;</span><br><span class="line">    clearTimeout(titleTime);</span><br><span class="line">  &#125; else &#123;</span><br><span class="line">    //返回当前页面时标签显示内容</span><br><span class="line">    document.title = &#x27;🐖抓到你啦～&#x27;;</span><br><span class="line">    //两秒后变回正常标题</span><br><span class="line">    titleTime = setTimeout(function () &#123;</span><br><span class="line">      document.title = OriginTitile;</span><br><span class="line">    &#125;, 2000);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><ol><li>在主题配置文件 <code>_config.butterfly.yml</code>引入该文件：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">inject: </span><br><span class="line">  bottom: </span><br><span class="line">    - &lt;script async src=&quot;/js/title.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="直达底部"><a href="#直达底部" class="headerlink" title="直达底部"></a>直达底部</h2><p>在 <code>[BlogRoot]\themes\butterfly\layout\includes\rightside.pug</code>做以下修改:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">button#go-up(type=&quot;button&quot; title=_p(&quot;rightside.back_to_top&quot;))</span><br><span class="line">  i.fas.fa-arrow-up</span><br><span class="line"></span><br><span class="line">+button#go-down(type=&quot;button&quot; title=&quot;直达底部&quot; onclick=&quot;btf.scrollToDest(document.body.scrollHeight, 500)&quot;)</span><br><span class="line">+  i.fas.fa-arrow-down</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="aplayer左下角缩小"><a href="#aplayer左下角缩小" class="headerlink" title="aplayer左下角缩小"></a>aplayer左下角缩小</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">/* 音乐播放器 */</span><br><span class="line"></span><br><span class="line">/* .aplayer .aplayer-lrc &#123;</span><br><span class="line">  display: none !important;</span><br><span class="line">&#125; */</span><br><span class="line"></span><br><span class="line">.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body &#123;</span><br><span class="line">  left: -66px !important;</span><br><span class="line">  transition: all 0.3s;</span><br><span class="line">  /* 默认情况下缩进左侧66px，只留一点箭头部分 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover &#123;</span><br><span class="line">  left: 0 !important;</span><br><span class="line">  transition: all 0.3s;</span><br><span class="line">  /* 鼠标悬停是左侧缩进归零，完全显示按钮 */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.aplayer.aplayer-fixed &#123;</span><br><span class="line">  z-index: 999999 !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="seo-引入"><a href="#seo-引入" class="headerlink" title="seo 引入"></a>seo 引入</h3><p> 配置文章链接转数字或字母</p><p>参考: <a href="https://github.com/rozbo/hexo-abbrlink">https://github.com/rozbo/hexo-abbrlink</a></p><p>安装依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>修改 <code>config.yml</code></p><p><img src="https://gcore.jsdelivr.net/gh/aboyzy/pic_tuchuang//img/202301091612550.png" alt=""></p><p>修改permalink</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: posts/:abbrlink.html</span><br></pre></td></tr></table></figure><p>在最下边添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># abbrlink config</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32      #support crc16(default) and crc32</span><br><span class="line">  rep: hex        #support dec(default) and hex</span><br></pre></td></tr></table></figure><h2 id="使用-Github-Action-实现全自动部署"><a href="#使用-Github-Action-实现全自动部署" class="headerlink" title="使用 Github Action 实现全自动部署"></a>使用 Github Action 实现全自动部署</h2><p>每次部署 <code>Hexo</code> 都需要运行指令三件套，随着文章越来越多，编译的时间也随之越来越长，通过 <code>Github Action</code>，我们只需要在每次完成博客的编写或修改以后，将改动直接 <code>push</code> 到远程仓库，之后的编译部署的工作统统交给 <code>CI</code> 来完成即可</p><p>因为 <code>node_modules</code>文件夹默认要不上传所以如果你改了主题文件里的配置的话会被重置不显示</p><p>这时候我们要把 <code>node_modules</code>文件夹内的主题文件hexo-theme-butterfly复制到/themes文件夹内重命名为butterfly</p><h3 id="配置token"><a href="#配置token" class="headerlink" title="配置token"></a>配置token</h3><p>为了确保交由 <code>Github Action</code>来持续部署时，<code>Github Action</code> 具备足够的权限来进行 <code>hexo deploy</code> 操作,需要先获取 <code>Token</code>。</p><p>访问 Github-&gt;头像（右上角）-&gt;Settings-&gt;Developer Settings-&gt;Personal access tokens-&gt;generate new token,创建的 Token 名称随意，但必须勾选 repo 项 和 workflows 项。</p><div class="note danger modern"><p>token 只会显示这一次，之后将无法查看，所以务必保证你已经记录下了 Token。之后如果忘记了就只能重新生成重新配置了。</p></div><h3 id="创建存放源码的私有仓库"><a href="#创建存放源码的私有仓库" class="headerlink" title="创建存放源码的私有仓库"></a>创建存放源码的私有仓库</h3><p>我们需要创建一个用来存放 <code>Hexo</code> 博客源码的<p class='p red'>私有仓库</p><code>[name]</code>名称随意，这点在  <code>Hexo</code> 博客搭建教程中有提到。</p><p>创建完成后，需要把博客的源码 push 到这里。首先获取远程仓库地址，此处虽然 SSH 和 HTTPS 均可。SSH 在绑定过 ssh key 的设备上无需再输入密码，HTTPS 则需要输入密码，但是 SSH 偶尔会遇到端口占用的情况。请自主选择。</p><div class="note danger modern"><p>这里之所以是私有仓库，是因为在接下来的配置中会用到 <code>Token</code>，如果 <code>Token</code> 被盗用，别人可以肆意操作你的 github 仓库内容，为了避免这一风险，才选择的博客源码闭源。</p></div><h3 id="配置-Github-Action"><a href="#配置-Github-Action" class="headerlink" title="配置 Github Action"></a>配置 Github Action</h3><ol><li>在 <code>/</code>新建 <code>.github</code>文件夹,注意开头是有个 <code>.</code>的。然后在 <code>.github</code> 内新建 <code>workflows</code> 文件夹，再在 <code>workflows</code> 文件夹内新建 <code>autodeploy.yml</code>,在 <code>/.github/workflows/autodeploy.yml</code> 里面输入</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">name: 自动部署</span><br><span class="line"># 当有改动推送到master分支时，启动Action</span><br><span class="line">on:</span><br><span class="line">  push:</span><br><span class="line">    branches:</span><br><span class="line">      - main</span><br><span class="line">      #2020年10月后github新建仓库默认分支改为main，注意更改</span><br><span class="line">  release:</span><br><span class="line">    types:</span><br><span class="line">      - published</span><br><span class="line"></span><br><span class="line">jobs:</span><br><span class="line">  deploy:</span><br><span class="line">    runs-on: ubuntu-latest</span><br><span class="line">    steps:</span><br><span class="line">      - name: 检查分支</span><br><span class="line">        uses: actions/checkout@v2</span><br><span class="line">        with:</span><br><span class="line">          ref: main</span><br><span class="line"></span><br><span class="line">      - name: 安装 Node</span><br><span class="line">        uses: actions/setup-node@v1</span><br><span class="line">        with:</span><br><span class="line">          node-version: &quot;19.x&quot;</span><br><span class="line"></span><br><span class="line">      - name: 安装 Hexo</span><br><span class="line">        run: |</span><br><span class="line">          export TZ=&#x27;Asia/Shanghai&#x27;</span><br><span class="line">          npm install hexo-cli -g</span><br><span class="line"></span><br><span class="line">      - name: 缓存 Hexo</span><br><span class="line">        id: cache-npm</span><br><span class="line">        uses: actions/cache@v3</span><br><span class="line">        env:</span><br><span class="line">          cache-name: cache-node-modules</span><br><span class="line">        with:</span><br><span class="line">          path: node_modules</span><br><span class="line">          key: $&#123;&#123; runner.os &#125;&#125;-build-$&#123;&#123; env.cache-name &#125;&#125;-$&#123;&#123; hashFiles(&#x27;**/package-lock.json&#x27;) &#125;&#125;</span><br><span class="line">          restore-keys: |</span><br><span class="line">            $&#123;&#123; runner.os &#125;&#125;-build-$&#123;&#123; env.cache-name &#125;&#125;-</span><br><span class="line">            $&#123;&#123; runner.os &#125;&#125;-build-</span><br><span class="line">            $&#123;&#123; runner.os &#125;&#125;-</span><br><span class="line"></span><br><span class="line">      - name: 安装依赖</span><br><span class="line">        if: $&#123;&#123; steps.cache-npm.outputs.cache-hit != &#x27;true&#x27; &#125;&#125;</span><br><span class="line">        run: |</span><br><span class="line">          npm install --save</span><br><span class="line"></span><br><span class="line">      - name: 生成静态文件</span><br><span class="line">        run: |</span><br><span class="line">          hexo clean</span><br><span class="line">          hexo generate</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">      - name: 部署到Github</span><br><span class="line">        uses: JamesIves/github-pages-deploy-action@v4</span><br><span class="line">        with:</span><br><span class="line">          token: </span><br><span class="line">          repository-name: TyLoo-zy/TyLoo-zy.github.io</span><br><span class="line">          branch: main</span><br><span class="line">          folder: public</span><br><span class="line">          commit-message: &quot;$&#123;&#123; github.event.head_commit.message &#125;&#125; Updated By Github Actions&quot;</span><br></pre></td></tr></table></figure><p>在 <code>token</code>处填写自己的token 在repository-name处填写博客的GitHub用户名/Github仓库名</p><div class="tabs" id="test4"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test4-1">第一次做git管理源码</button></li><li class="tab"><button type="button" data-href="#test4-2">曾经做过git管理源码</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test4-1"><ol><li>删除或者先把 <code>[Blogroot]/themes/butterfly/.git</code>移动到非博客文件夹目录下,原因是主题文件夹下的 <code>.git</code>文件夹的存在会导致其被识别成子项目，从而无法被上传到源码仓库。</li><li><p>在博客根目录 <code>[Blogroot]</code>路径下运行指令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init #初始化</span><br><span class="line">git remote add origin git@github.com:[GithubUsername]/[SourceRepo].git #[SourceRepo]为存放源码的github私有仓库</span><br><span class="line">git checkout -b main # 切换到master分支，</span><br><span class="line">#2020年10月后github新建仓库默认分支改为main，注意更改</span><br><span class="line"># 如果不是，后面的所有设置的分支记得保持一致</span><br></pre></td></tr></table></figure></li><li><p>添加屏蔽项</p><p>因为能够使用指令进行安装的内容不包括在需要提交的源码内，所有我们需要将这些内容添加到屏蔽项，表示不上传到 github 上。这样可以显著减少需要提交的文件量和加快提交速度。打开 <code>[Blogroot]/.gitignore</code>,输入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.deploy_git*/</span><br><span class="line">.idea</span><br><span class="line">themes/butterfly/.git</span><br></pre></td></tr></table></figure></li></ol><p>如果不是 <code>butterfly</code>主题，记得替换最后一行内容为你自己当前使用的主题。</p><ol><li><p>之后再运行 git 提交指令，将博客源码提交到 github 上。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &quot;github action update&quot;</span><br><span class="line">git push origin main</span><br><span class="line">#2020年10月后github新建仓库默认分支改为main，注意更改</span><br></pre></td></tr></table></figure></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div><div class="tab-item-content" id="test4-2"><ol><li><p>添加屏蔽项<br>因为能够使用指令进行安装的内容不包括在需要提交的源码内，所有我们需要将这些内容添加到屏蔽项，表示不上传到 github 上。这样可以显著减少需要提交的文件量和加快提交速度。<br>打开 <code>[Blogroot]/.gitignore</code>,输入以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.deploy_git*/</span><br><span class="line">.idea</span><br><span class="line">themes/butterfly/.git</span><br></pre></td></tr></table></figure></li><li><p>如果不是 butterfly 主题，记得替换最后一行内容为你自己当前使用的主题。 2.提交源码到私有仓库 <code>[name]</code><br>在博客根目录下启动终端，使用 git 指令重设仓库地址。这样在新建仓库，我们仍旧可以保留珍贵的 commit history，便于版本回滚。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">git remote rm origin # 删除原有仓库链接</span><br><span class="line">git remote add origin git@github.com:[GithubUsername]/[SourceRepo].git #[SourceRepo]为新的存放源码的github私有仓库</span><br><span class="line">git checkout -b main # 切换到main分支，</span><br><span class="line">#2020年10月后github新建仓库默认分支改为main，注意更改</span><br><span class="line"># 如果不是，后面的所有设置的分支记得保持一致</span><br><span class="line">git add .</span><br><span class="line">git commit -m &quot;github action update&quot;</span><br><span class="line">git push origin main</span><br><span class="line">#2020年10月后github新建仓库默认分支改为main，注意更改</span><br></pre></td></tr></table></figure><ol><li>可能遇到的 bug<br>因为 butterfly 主题文件夹下的.git 文件夹的存在，那么主题文件夹会被识别子项目。从而无法被上传到源码仓库。若是遇到添加屏蔽项，但是还是无法正常上传主题文件夹的情况。请先将本地源码中的 themes 文件夹移动到别的目录下。然后 commit 一次。接着将 themes 文件夹移动回来，再 commit 一次。</li></ol></li></ol><button type="button" class="tab-to-top" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div></div><h3 id="查看部署情况"><a href="#查看部署情况" class="headerlink" title="查看部署情况"></a>查看部署情况</h3><p>此时，打开 GIthub 存放源码的私有仓库，找到 action</p><p>根据刚刚的 Commit 记录找到相应的任务</p><p>点击 Deploy 查看部署情况</p><p>若全部打钩，恭喜你，你现在可以享受自动部署的快感了</p><hr><p>文章到这里基本上就结束了,如果后序还有什么魔改的我会加上去</p><p>这里感谢<a href="https://www.fomal.cc/">Fomalhaut🥝</a> 和<a href="https://anzhiy.cn/">安知鱼 - 生活明朗 万物可爱</a> 大佬提供的教程参考</p>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h1 id="关于我"><a href="#关于我" class="headerlink" title="关于我"></a>关于我</h1><p>一个普普通通的大学生</p><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p>又菜又爱玩🎮</p>            </div><div class='checkbox checked'><input type="checkbox" checked="checked"/>            <p><code>ctrl</code>+<code>c</code> 、<code>ctrl</code> + <code>v</code> 高级CV工程师🏆</p>            </div><div class='checkbox'><input type="checkbox" />            <p>精通Html、CSS、JavaScript、Vue、PHP、Java、Python、C、C++、C#、Go等单词的拼写👻</p>            </div><div class='checkbox'><input type="checkbox" />            <p>熟悉windows、Linux、Mac、Android、IOS等系统的开关机👻</p>            </div><p>爱好：</p><ul><li>摆烂，听歌</li></ul><h2 id="关于博客"><a href="#关于博客" class="headerlink" title="关于博客"></a>关于博客</h2><ul><li>博客框架：<a href="https://github.com/hexojs/hexo">Hexo 5.4.2</a></li><li>主题：<a href="https://butterfly.js.org/">Butterfly 4.3.1</a></li><li>源码仓库：<a href="https://github.com/">Github</a></li><li>评论系统：<a href="https://twikoo.js.org/">Twikoo</a>系统 + <a href="https://vercel.com/">Vercel</a>部署 + <a href="https://www.mongodb.com/">MongoDB</a>提供存储服务</li><li>图床：<a href="https://github.com/">Github</a>+<a href="[PicGo](https://picgo.github.io/PicGo-Doc/zh/">picgo</a></li><li>图片压缩：<a href="https://github.com/meowtec/Imagine">Imagine</a>有损压缩技术 +<a href="https://tinypng.com/">TinyPNG </a>压缩</li><li>字体压缩: 基于Python的fonttools子集化压缩 + <a href="https://cloudconvert.com/">CloudConvert</a>压缩为woff2格式</li><li>静态资源压缩: <a href="https://github.com/gulpjs/gulp">gulp</a> + <a href="https://github.com/olback/es6-css-minify/tree/3.0">JS &amp; CSS Minifier (Minify)</a></li><li>自动部署：<a href="https://git-scm.com/">Git </a> + <a href="https://anzhiy.cn/posts/asdx.html">Github Action</a></li><li>音乐平台：<a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer</a> + <a href="https://github.com/metowolf/MetingJS">MetingJS</a></li><li>异步加载与缓存加速技术：<a href="https://github.com/defunkt/jquery-pjax">Pjax</a></li><li>开发语言：HTML5 + CSS3 + JavaScript + Pug + YML等</li></ul><h2 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h2><ul><li>qq:<a href="tencent://Message/?Uin=2663221849&amp;websiteName=qzone.qq.com&amp;Menu=yes">2663221849</a></li><li>Gmai:<a href="mailto:2663221849@qq.com">2663221849@qq.com</a></li><li>网易云音乐:<a href="https://music.163.com/#/user/home?id=364216466">小邹小邹不要慌</a>老emo用户了</li><li>GitHub:<a href="https://github.com/aboyzy">aboyzy</a></li></ul>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/cat.css"/>
      <url>/css/cat.css</url>
      
        <content type="html"><![CDATA[body::-webkit-scrollbar {    width: 0;}.neko {    width: 64px;    height: 64px;    background-image: url("https://bu.dusays.com/2022/07/20/62d812db74be9.png");    position: absolute;    right: 32px;    background-repeat: no-repeat;    background-size: contain;    transform: translateX(50%);    cursor: pointer;    font-family: tzy;    font-weight: 600;    font-size: 16px;    color: #6f42c1;    display: none;}.neko::after {    display: none;    width: 100px;    height: 100px;    background-image: url("https://bu.dusays.com/2022/07/20/62d812d95e6f5.png");    background-size: contain;    z-index: 9999;    position: absolute;    right: 50%;    text-align: center;    line-height: 100px;    top: -115%;}.neko.showMsg::after {    content: attr(data-msg);    display: block;    overflow: hidden;    text-overflow: ellipsis;}.neko:hover::after {    content: attr(data-msg);    display: block;    overflow: hidden;    text-overflow: ellipsis;}.neko.fontColor::after {    color: #333;}/** * @description: 滚动条样式  跟猫二选一 */@media screen and (max-width:992px) {    ::-webkit-scrollbar {        width: 8px !important;        height: 8px !important    }    ::-webkit-scrollbar-track {        border-radius: 2em;    }    ::-webkit-scrollbar-thumb {        background-color: rgb(255 255 255 / .3);        background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);        border-radius: 2em    }    ::-webkit-scrollbar-corner {        background-color: transparent    }}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/cat.min.css"/>
      <url>/css/cat.min.css</url>
      
        <content type="html"><![CDATA[body::-webkit-scrollbar{width:0}.neko{width:64px;height:64px;background-image:url(https://bu.dusays.com/2022/07/20/62d812db74be9.png);position:absolute;right:32px;background-repeat:no-repeat;background-size:contain;transform:translateX(50%);cursor:pointer;font-family:tzy;font-weight:600;font-size:16px;color:#6f42c1;display:none}.neko::after{display:none;width:100px;height:100px;background-image:url(https://bu.dusays.com/2022/07/20/62d812d95e6f5.png);background-size:contain;z-index:9999;position:absolute;right:50%;text-align:center;line-height:100px;top:-115%}.neko.showMsg::after{content:attr(data-msg);display:block;overflow:hidden;text-overflow:ellipsis}.neko:hover::after{content:attr(data-msg);display:block;overflow:hidden;text-overflow:ellipsis}.neko.fontColor::after{color:#333}@media screen and (max-width:992px){::-webkit-scrollbar{width:8px!important;height:8px!important}::-webkit-scrollbar-track{border-radius:2em}::-webkit-scrollbar-thumb{background-color:rgb(255 255 255 / .3);background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.1) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.1) 50%,rgba(255,255,255,.1) 75%,transparent 75%,transparent);border-radius:2em}::-webkit-scrollbar-corner{background-color:transparent}}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.css"/>
      <url>/css/custom.css</url>
      
        <content type="html"><![CDATA[/* 页脚与头图透明 */#footer {    background: transparent !important;  }  #page-header {    background: transparent !important;  }    /* 白天模式遮罩透明 */  #footer::before {    background: transparent !important;  }  #page-header::before {    background: transparent !important;  }    /* 夜间模式遮罩透明 */  [data-theme="dark"] #footer::before {    background: transparent !important;  }  [data-theme="dark"] #page-header::before {    background: transparent !important;  }@font-face {    /* 为载入的字体取名字(随意) */    font-family: 'YSHST';    /* 字体文件地址(相对或者绝对路径都可以) */    src: url(/font/xiaoyanyiti.ttf);    /* 定义加粗样式(加粗多少) */    font-weight: normal;    /* 定义字体样式(斜体/非斜体) */    font-style: normal;    /* 定义显示样式 */    font-display: block;  }  /* 一级菜单居中 */#nav .menus_items {  position: absolute !important;  width: fit-content !important;  left: 50% !important;  transform: translateX(-50%) !important;}/* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {  display: flex !important;}/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(2) .menus_item_child {  left: -125px;}/* 一级菜单居中 */#nav .menus_items {  position: absolute !important;  width: fit-content !important;  left: 50% !important;  transform: translateX(-50%) !important;}/* 子菜单横向展示 */#nav .menus_items .menus_item:hover .menus_item_child {  display: flex !important;}/* 这里的2是代表导航栏的第2个元素，即有子菜单的元素，可以按自己需求修改 */.menus_items .menus_item:nth-child(2) .menus_item_child {  left: -125px;}/*哔哩哔哩视频适配*/.aspect-ratio {  position: relative;  width: 90%;  height: auto;  padding-bottom: 75%;  margin: 3% auto;  text-align: center;}.aspect-ratio iframe {  position: absolute;  width: 100%;  height: 86%;  left: 0;  top: 0;}/* 文章页H1-H6图标样式效果 *//* 控制风车转动速度 4s那里可以自己调节快慢 */h1::before,h2::before,h3::before,h4::before,h5::before,h6::before {  -webkit-animation: ccc 4s linear infinite;  animation: ccc 4s linear infinite;}/* 控制风车转动方向 -1turn 为逆时针转动，1turn 为顺时针转动，相同数字部分记得统一修改 */@-webkit-keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}@keyframes ccc {  0% {    -webkit-transform: rotate(0deg);    transform: rotate(0deg);  }  to {    -webkit-transform: rotate(-1turn);    transform: rotate(-1turn);  }}/* 设置风车颜色 */#content-inner.layout h1::before {  color: #ef50a8;  margin-left: -1.55rem;  font-size: 1.3rem;  margin-top: -0.23rem;}#content-inner.layout h2::before {  color: #fb7061;  margin-left: -1.35rem;  font-size: 1.1rem;  margin-top: -0.12rem;}#content-inner.layout h3::before {  color: #ffbf00;  margin-left: -1.22rem;  font-size: 0.95rem;  margin-top: -0.09rem;}#content-inner.layout h4::before {  color: #a9e000;  margin-left: -1.05rem;  font-size: 0.8rem;  margin-top: -0.09rem;}#content-inner.layout h5::before {  color: #57c850;  margin-left: -0.9rem;  font-size: 0.7rem;  margin-top: 0rem;}#content-inner.layout h6::before {  color: #5ec1e0;  margin-left: -0.9rem;  font-size: 0.66rem;  margin-top: 0rem;}/* s设置风车hover动效 6s那里可以自己调节快慢*/#content-inner.layout h1:hover,#content-inner.layout h2:hover,#content-inner.layout h3:hover,#content-inner.layout h4:hover,#content-inner.layout h5:hover,#content-inner.layout h6:hover {  color: var(--theme-color);}#content-inner.layout h1:hover::before,#content-inner.layout h2:hover::before,#content-inner.layout h3:hover::before,#content-inner.layout h4:hover::before,#content-inner.layout h5:hover::before,#content-inner.layout h6:hover::before {  color: var(--theme-color);  -webkit-animation: ccc 6s linear infinite;  animation: ccc 6s linear infinite;}#toggle-sidebar {  bottom: 80px}/*哔哩哔哩视频适配*/.aspect-ratio {  position: relative;  width: 90%;  height: auto;  padding-bottom: 75%;  margin: 3% auto;  text-align: center;}.aspect-ratio iframe {  position: absolute;  width: 100%;  height: 86%;  left: 0;  top: 0;}/* twikoo评论美化 *//* 自定义twikoo评论输入框高度 */#twikoo .el-textarea textarea {  min-height: 120px !important;  background-size: 90px;}/* 自定义表情优化 */#twikoo .OwO-body {  max-width: 100% !important;}/* 选择某个框 #twikoo .OwO .OwO-body .OwO-items:nth-child(1) */#twikoo .OwO .OwO-body .OwO-items {  max-height: 250px !important;}.OwO .OwO-body .OwO-items-image .OwO-item {  max-width: calc(9% - 10px);  box-sizing: content-box;}.OwO .OwO-body .OwO-items-image .OwO-item[title|="Heybox"],.OwO .OwO-body .OwO-items-image .OwO-item[title|="Tieba"],.OwO .OwO-body .OwO-items-show .OwO-item[title*="bilibili"] {  max-width: calc(7% - 10px) !important;  box-sizing: content-box;}#twikoo .OwO-items li img {  width: 100% !important;}.tk-comment .vemoji[alt|="Menhera"],.tk-comment .tk-owo-emotion[alt*="Menhera"],.tk-comment .vemoji[alt|="Snow"],.tk-comment .tk-owo-emotion[alt*="Snow"],.tk-comment .vemoji[alt|="Sweetie"],.tk-comment .tk-owo-emotion[alt*="Sweetie"],.tk-comment .vemoji[alt|="Tsuri"],.tk-comment .tk-owo-emotion[alt*="Tsuri"],.tk-comment .vemoji[alt|="Yurui"],.tk-comment .tk-owo-emotion[alt*="Yurui"] {  max-width: 120px !important;  max-height: 120px !important;  width: 120px;  margin: 8px 1px;  display: block !important;}/* 手机端适配 */@media screen and (max-width: 768px) {  .tk-comment .vemoji[alt|="Menhera"],  .tk-comment .tk-owo-emotion[alt*="Menhera"],  .tk-comment .vemoji[alt|="Snow"],  .tk-comment .tk-owo-emotion[alt*="Snow"],  .tk-comment .vemoji[alt|="Sweetie"],  .tk-comment .tk-owo-emotion[alt*="Sweetie"],  .tk-comment .vemoji[alt|="Tsuri"],  .tk-comment .tk-owo-emotion[alt*="Tsuri"],  .tk-comment .vemoji[alt|="Yurui"],  .tk-comment .tk-owo-emotion[alt*="Yurui"] {    max-width: calc(100% - 30px) !important;    max-height: calc(100% - 30px) !important;  }  .OwO .OwO-body .OwO-items-image .OwO-item[title*="Menhera"],  .OwO .OwO-body .OwO-items-image .OwO-item[title*="Snow"],  .OwO .OwO-body .OwO-items-image .OwO-item[title*="Sweetie"],  .OwO .OwO-body .OwO-items-image .OwO-item[title*="Tsuri"],  .OwO .OwO-body .OwO-items-image .OwO-item[title*="Yurui"] {    max-width: calc(33% - 10px);    box-sizing: border-box;  }  .OwO .OwO-body .OwO-items-image .OwO-item[title*="Heybox"],  .OwO .OwO-body .OwO-items-image .OwO-item[title*="bilibili"],  .OwO .OwO-body .OwO-items-image .OwO-item[title*="Tieba"],  .OwO .OwO-body .OwO-items-image .OwO-item[title*="QQ"] {    max-width: calc(18% - 10px) !important;    box-sizing: content-box;  }}/* 右下角闭眼 */.el-textarea__inner {  background-image: url(https://tuchuang.voooe.cn/images/2023/01/02/open.webp) !important;}.el-textarea__inner:focus {  background-image: url(https://tuchuang.voooe.cn/images/2023/01/02/close.webp) !important;}/* 音乐播放器 *//* .aplayer .aplayer-lrc {  display: none !important;} */.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body {  left: -66px !important;  transition: all 0.3s;  /* 默认情况下缩进左侧66px，只留一点箭头部分 */}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover {  left: 0 !important;  transition: all 0.3s;  /* 鼠标悬停是左侧缩进归零，完全显示按钮 */}.aplayer.aplayer-fixed {  z-index: 999999 !important;}/*小猫咪*/body::-webkit-scrollbar {  width: 0;}.neko {  width: 64px;  height: 64px;  background-image: url("https://bu.dusays.com/2022/07/20/62d812db74be9.png");  position: absolute;  right: 32px;  background-repeat: no-repeat;  background-size: contain;  transform: translateX(50%);  cursor: pointer;  font-family: tzy;  font-weight: 600;  font-size: 16px;  color: #6f42c1;  display: none;}.neko::after {  display: none;  width: 100px;  height: 100px;  background-image: url("https://bu.dusays.com/2022/07/20/62d812d95e6f5.png");  background-size: contain;  z-index: 9999;  position: absolute;  right: 50%;  text-align: center;  line-height: 100px;  top: -115%;}.neko.showMsg::after {  content: attr(data-msg);  display: block;  overflow: hidden;  text-overflow: ellipsis;}.neko:hover::after {  content: attr(data-msg);  display: block;  overflow: hidden;  text-overflow: ellipsis;}.neko.fontColor::after {  color: #333;}/*** @description: 滚动条样式  跟猫二选一*/@media screen and (max-width:992px) {  ::-webkit-scrollbar {      width: 8px !important;      height: 8px !important  }  ::-webkit-scrollbar-track {      border-radius: 2em;  }  ::-webkit-scrollbar-thumb {      background-color: rgb(255 255 255 / .3);      background-image: -webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent);      border-radius: 2em  }  ::-webkit-scrollbar-corner {      background-color: transparent  }}/* 设置文字内容 :nth-child(1)的作用是选择第几个 */.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(1):before {  content: '输入QQ号会自动获取昵称和头像🐧';}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(2):before {  content: '收到回复将会发送到您的邮箱📧';}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(3):before {  content: '可以通过昵称访问您的网站🔗';}/* 当用户点击输入框时显示 */.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::before,.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::after {  display: block;}/* 主内容区 */.el-input.el-input--small.el-input-group.el-input-group--prepend::before {  /* 先隐藏起来 */  display: none;  /* 绝对定位 */  position: absolute;  /* 向上移动60像素 */  top: -60px;  /* 文字强制不换行，防止left:50%导致的文字换行 */  white-space: nowrap;  /* 圆角 */  border-radius: 10px;  /* 距离左边50% */  left: 50%;  /* 然后再向左边挪动自身的一半，即可实现居中 */  transform: translate(-50%);  /* 填充 */  padding: 14px 18px;  background: #444;  color: #fff;}/* 小角标 */.el-input.el-input--small.el-input-group.el-input-group--prepend::after {  display: none;  content: '';  position: absolute;  /* 内容大小（宽高）为0且边框大小不为0的情况下，每一条边（4个边）都是一个三角形，组成一个正方形。  我们先将所有边框透明，再给其中的一条边添加颜色就可以实现小三角图标 */  border: 12px solid transparent;  border-top-color: #444;  left: 50%;  transform: translate(-50%, -48px);}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/custom.min.css"/>
      <url>/css/custom.min.css</url>
      
        <content type="html"><![CDATA[#footer{background:0 0!important}#page-header{background:0 0!important}#footer::before{background:0 0!important}#page-header::before{background:0 0!important}[data-theme=dark] #footer::before{background:0 0!important}[data-theme=dark] #page-header::before{background:0 0!important}@font-face{font-family:YSHST;src:url(/font/xiaoyanyiti.woff2);font-weight:400;font-style:normal;font-display:block}#nav .menus_items{position:absolute!important;width:fit-content!important;left:50%!important;transform:translateX(-50%)!important}#nav .menus_items .menus_item:hover .menus_item_child{display:flex!important}.menus_items .menus_item:nth-child(2) .menus_item_child{left:-125px}#nav .menus_items{position:absolute!important;width:fit-content!important;left:50%!important;transform:translateX(-50%)!important}#nav .menus_items .menus_item:hover .menus_item_child{display:flex!important}.menus_items .menus_item:nth-child(2) .menus_item_child{left:-125px}.aspect-ratio{position:relative;width:90%;height:auto;padding-bottom:75%;margin:3% auto;text-align:center}.aspect-ratio iframe{position:absolute;width:100%;height:86%;left:0;top:0}h1::before,h2::before,h3::before,h4::before,h5::before,h6::before{-webkit-animation:ccc 4s linear infinite;animation:ccc 4s linear infinite}@-webkit-keyframes ccc{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(-1turn);transform:rotate(-1turn)}}@keyframes ccc{0%{-webkit-transform:rotate(0);transform:rotate(0)}to{-webkit-transform:rotate(-1turn);transform:rotate(-1turn)}}#content-inner.layout h1::before{color:#ef50a8;margin-left:-1.55rem;font-size:1.3rem;margin-top:-.23rem}#content-inner.layout h2::before{color:#fb7061;margin-left:-1.35rem;font-size:1.1rem;margin-top:-.12rem}#content-inner.layout h3::before{color:#ffbf00;margin-left:-1.22rem;font-size:.95rem;margin-top:-.09rem}#content-inner.layout h4::before{color:#a9e000;margin-left:-1.05rem;font-size:.8rem;margin-top:-.09rem}#content-inner.layout h5::before{color:#57c850;margin-left:-.9rem;font-size:.7rem;margin-top:0}#content-inner.layout h6::before{color:#5ec1e0;margin-left:-.9rem;font-size:.66rem;margin-top:0}#content-inner.layout h1:hover,#content-inner.layout h2:hover,#content-inner.layout h3:hover,#content-inner.layout h4:hover,#content-inner.layout h5:hover,#content-inner.layout h6:hover{color:var(--theme-color)}#content-inner.layout h1:hover::before,#content-inner.layout h2:hover::before,#content-inner.layout h3:hover::before,#content-inner.layout h4:hover::before,#content-inner.layout h5:hover::before,#content-inner.layout h6:hover::before{color:var(--theme-color);-webkit-animation:ccc 6s linear infinite;animation:ccc 6s linear infinite}#toggle-sidebar{bottom:80px}.aspect-ratio{position:relative;width:90%;height:auto;padding-bottom:75%;margin:3% auto;text-align:center}.aspect-ratio iframe{position:absolute;width:100%;height:86%;left:0;top:0}#twikoo .el-textarea textarea{min-height:120px!important;background-size:90px}#twikoo .OwO-body{max-width:100%!important}#twikoo .OwO .OwO-body .OwO-items{max-height:250px!important}.OwO .OwO-body .OwO-items-image .OwO-item{max-width:calc(9% - 10px);box-sizing:content-box}.OwO .OwO-body .OwO-items-image .OwO-item[title|=Heybox],.OwO .OwO-body .OwO-items-image .OwO-item[title|=Tieba],.OwO .OwO-body .OwO-items-show .OwO-item[title*=bilibili]{max-width:calc(7% - 10px)!important;box-sizing:content-box}#twikoo .OwO-items li img{width:100%!important}.tk-comment .tk-owo-emotion[alt*=Menhera],.tk-comment .tk-owo-emotion[alt*=Snow],.tk-comment .tk-owo-emotion[alt*=Sweetie],.tk-comment .tk-owo-emotion[alt*=Tsuri],.tk-comment .tk-owo-emotion[alt*=Yurui],.tk-comment .vemoji[alt|=Menhera],.tk-comment .vemoji[alt|=Snow],.tk-comment .vemoji[alt|=Sweetie],.tk-comment .vemoji[alt|=Tsuri],.tk-comment .vemoji[alt|=Yurui]{max-width:120px!important;max-height:120px!important;width:120px;margin:8px 1px;display:block!important}@media screen and (max-width:768px){.tk-comment .tk-owo-emotion[alt*=Menhera],.tk-comment .tk-owo-emotion[alt*=Snow],.tk-comment .tk-owo-emotion[alt*=Sweetie],.tk-comment .tk-owo-emotion[alt*=Tsuri],.tk-comment .tk-owo-emotion[alt*=Yurui],.tk-comment .vemoji[alt|=Menhera],.tk-comment .vemoji[alt|=Snow],.tk-comment .vemoji[alt|=Sweetie],.tk-comment .vemoji[alt|=Tsuri],.tk-comment .vemoji[alt|=Yurui]{max-width:calc(100% - 30px)!important;max-height:calc(100% - 30px)!important}.OwO .OwO-body .OwO-items-image .OwO-item[title*=Menhera],.OwO .OwO-body .OwO-items-image .OwO-item[title*=Snow],.OwO .OwO-body .OwO-items-image .OwO-item[title*=Sweetie],.OwO .OwO-body .OwO-items-image .OwO-item[title*=Tsuri],.OwO .OwO-body .OwO-items-image .OwO-item[title*=Yurui]{max-width:calc(33% - 10px);box-sizing:border-box}.OwO .OwO-body .OwO-items-image .OwO-item[title*=Heybox],.OwO .OwO-body .OwO-items-image .OwO-item[title*=QQ],.OwO .OwO-body .OwO-items-image .OwO-item[title*=Tieba],.OwO .OwO-body .OwO-items-image .OwO-item[title*=bilibili]{max-width:calc(18% - 10px)!important;box-sizing:content-box}}.el-textarea__inner{background-image:url(https://tuchuang.voooe.cn/images/2023/01/02/open.webp)!important}.el-textarea__inner:focus{background-image:url(https://tuchuang.voooe.cn/images/2023/01/02/close.webp)!important}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body{left:-66px!important;transition:all .3s}.aplayer.aplayer-fixed.aplayer-narrow .aplayer-body:hover{left:0!important;transition:all .3s}.aplayer.aplayer-fixed{z-index:999999!important}body::-webkit-scrollbar{width:0}.neko{width:64px;height:64px;background-image:url(https://bu.dusays.com/2022/07/20/62d812db74be9.png);position:absolute;right:32px;background-repeat:no-repeat;background-size:contain;transform:translateX(50%);cursor:pointer;font-family:tzy;font-weight:600;font-size:16px;color:#6f42c1;display:none}.neko::after{display:none;width:100px;height:100px;background-image:url(https://bu.dusays.com/2022/07/20/62d812d95e6f5.png);background-size:contain;z-index:9999;position:absolute;right:50%;text-align:center;line-height:100px;top:-115%}.neko.showMsg::after{content:attr(data-msg);display:block;overflow:hidden;text-overflow:ellipsis}.neko:hover::after{content:attr(data-msg);display:block;overflow:hidden;text-overflow:ellipsis}.neko.fontColor::after{color:#333}@media screen and (max-width:992px){::-webkit-scrollbar{width:8px!important;height:8px!important}::-webkit-scrollbar-track{border-radius:2em}::-webkit-scrollbar-thumb{background-color:rgb(255 255 255 / .3);background-image:-webkit-linear-gradient(45deg,rgba(255,255,255,.1) 25%,transparent 25%,transparent 50%,rgba(255,255,255,.1) 50%,rgba(255,255,255,.1) 75%,transparent 75%,transparent);border-radius:2em}::-webkit-scrollbar-corner{background-color:transparent}}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(1):before{content:'输入QQ号会自动获取昵称和头像🐧'}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(2):before{content:'收到回复将会发送到您的邮箱📧'}.el-input.el-input--small.el-input-group.el-input-group--prepend:nth-child(3):before{content:'可以通过昵称访问您的网站🔗'}.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::after,.el-input.el-input--small.el-input-group.el-input-group--prepend:focus-within::before{display:block}.el-input.el-input--small.el-input-group.el-input-group--prepend::before{display:none;position:absolute;top:-60px;white-space:nowrap;border-radius:10px;left:50%;transform:translate(-50%);padding:14px 18px;background:#444;color:#fff}.el-input.el-input--small.el-input-group.el-input-group--prepend::after{display:none;content:'';position:absolute;border:12px solid transparent;border-top-color:#444;left:50%;transform:translate(-50%,-48px)}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/css/progress_bar.css"/>
      <url>/css/progress_bar.css</url>
      
        <content type="html"><![CDATA[.pace {  -webkit-pointer-events: none;  pointer-events: none;  -webkit-user-select: none;  -moz-user-select: none;  user-select: none;  z-index: 2000;  position: fixed;  margin: auto;  top: 10px;  left: 0;  right: 0;  height: 8px;  border-radius: 8px;  width: 4rem;  background: #eaecf2;  border: 1px #e3e8f7;  overflow: hidden;}.pace-inactive .pace-progress {  opacity: 0;  transition: 0.3s ease-in;}.pace .pace-progress {  -webkit-box-sizing: border-box;  -moz-box-sizing: border-box;  -ms-box-sizing: border-box;  -o-box-sizing: border-box;  box-sizing: border-box;  -webkit-transform: translate3d(0, 0, 0);  -moz-transform: translate3d(0, 0, 0);  -ms-transform: translate3d(0, 0, 0);  -o-transform: translate3d(0, 0, 0);  transform: translate3d(0, 0, 0);  max-width: 200px;  position: absolute;  z-index: 2000;  display: block;  top: 0;  right: 100%;  height: 100%;  width: 100%;  background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);  animation: gradient 1.5s ease infinite;  background-size: 200%;}.pace.pace-inactive {  opacity: 0;  transition: 0.3s;  top: -8px;}@keyframes gradient {  0% {    background-position: 0% 50%;  }  50% {    background-position: 100% 50%;  }  100% {    background-position: 0% 50%;  }}.loading-img {  background: url(https://cdn.jsdelivr.net/gh/aboyzy/pic_tuchuang/img/%E5%A4%B4%E5%83%8F.webp) no-repeat center center;  background-size: cover;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/cat.js"/>
      <url>/js/cat.js</url>
      
        <content type="html"><![CDATA[if (document.body.clientWidth > 992) {    function getBasicInfo() {        /* 窗口高度 */        var ViewH = $(window).height();        /* document高度 */        var DocH = $("body")[0].scrollHeight;        /* 滚动的高度 */        var ScrollTop = $(window).scrollTop();        /* 可滚动的高度 */        var S_V = DocH - ViewH;        var Band_H = ScrollTop / (DocH - ViewH) * 100;        return {            ViewH: ViewH,            DocH: DocH,            ScrollTop: ScrollTop,            Band_H: Band_H,            S_V: S_V        }    };    function show(basicInfo) {        if (basicInfo.ScrollTop > 0.001) {            $(".neko").css('display', 'block');        } else {            $(".neko").css('display', 'none');        }    }    (function ($) {        $.fn.nekoScroll = function (option) {            var defaultSetting = {                top: '0',                scroWidth: 6 + 'px',                z_index: 9999,                zoom: 0.9,                borderRadius: 5 + 'px',                right: 60 + 'px',                // 这里可以换为你喜欢的图片，例如我就换为了雪人，但是要抠图                nekoImg: "https://bu.dusays.com/2022/07/20/62d812db74be9.png",                hoverMsg: "喵喵喵~",                color: "#6f42c1",                during: 500,                blog_body: "body",            };            var setting = $.extend(defaultSetting, option);            var getThis = this.prop("className") !== "" ? "." + this.prop("className") : this.prop("id") !== "" ? "#" +                this.prop("id") : this.prop("nodeName");            if ($(".neko").length == 0) {                this.after("<div class=\"neko\" id=" + setting.nekoname + " data-msg=\"" + setting.hoverMsg + "\"></div>");            }            let basicInfo = getBasicInfo();            $(getThis)                .css({                    'position': 'fixed',                    'width': setting.scroWidth,                    'top': setting.top,                    'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',                    'z-index': setting.z_index,                    'background-color': setting.bgcolor,                    "border-radius": setting.borderRadius,                    'right': setting.right,                    'background-image': 'url(' + setting.scImg + ')',                    'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',                    'background-size': 'contain'                });            $("#" + setting.nekoname)                .css({                    'position': 'fixed',                    'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',                    'z-index': setting.z_index * 10,                    'right': setting.right,                    'background-image': 'url(' + setting.nekoImg + ')',                });            show(getBasicInfo());            $(window)                .scroll(function () {                    let basicInfo = getBasicInfo();                    show(basicInfo);                    $(getThis)                        .css({                            'position': 'fixed',                            'width': setting.scroWidth,                            'top': setting.top,                            'height': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 + 'px',                            'z-index': setting.z_index,                            'background-color': setting.bgcolor,                            "border-radius": setting.borderRadius,                            'right': setting.right,                            'background-image': 'url(' + setting.scImg + ')',                            'background-image': '-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)', 'border-radius': '2em',                            'background-size': 'contain'                        });                    $("#" + setting.nekoname)                        .css({                            'position': 'fixed',                            'top': basicInfo.Band_H * setting.zoom * basicInfo.ViewH * 0.01 - 50 + 'px',                            'z-index': setting.z_index * 10,                            'right': setting.right,                            'background-image': 'url(' + setting.nekoImg + ')',                        });                    if (basicInfo.ScrollTop == basicInfo.S_V) {                        $("#" + setting.nekoname)                            .addClass("showMsg")                    } else {                        $("#" + setting.nekoname)                            .removeClass("showMsg");                        $("#" + setting.nekoname)                            .attr("data-msg", setting.hoverMsg);                    }                });            this.click(function (e) {                btf.scrollToDest(0, 500)            });            $("#" + setting.nekoname)                .click(function () {                    btf.scrollToDest(0, 500)                });            return this;        }    })(jQuery);    $(document).ready(function () {        //部分自定义        $("#myscoll").nekoScroll({            bgcolor: 'rgb(0 0 0 / .5)', //背景颜色，没有绳子背景图片时有效            borderRadius: '2em',            zoom: 0.9        }        );        //自定义（去掉以下注释，并注释掉其他的查看效果）        /*        $("#myscoll").nekoScroll({            nekoname:'neko1', //nekoname，相当于id            nekoImg:'img/猫咪.png', //neko的背景图片            scImg:"img/绳1.png", //绳子的背景图片            bgcolor:'#1e90ff', //背景颜色，没有绳子背景图片时有效            zoom:0.9, //绳子长度的缩放值            hoverMsg:'你好~喵', //鼠标浮动到neko上方的对话框信息            right:'100px', //距离页面右边的距离            fontFamily:'楷体', //对话框字体            fontSize:'14px', //对话框字体的大小            color:'#1e90ff', //对话框字体颜色            scroWidth:'8px', //绳子的宽度            z_index:100, //不用解释了吧            during:1200, //从顶部到底部滑动的时长        });        */    })}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/cat.min.js"/>
      <url>/js/cat.min.js</url>
      
        <content type="html"><![CDATA[if(document.body.clientWidth>992){function getBasicInfo(){var ViewH=$(window).height(),DocH=$("body")[0].scrollHeight,ScrollTop=$(window).scrollTop(),S_V,Band_H;return{ViewH:ViewH,DocH:DocH,ScrollTop:ScrollTop,Band_H:ScrollTop/(DocH-ViewH)*100,S_V:DocH-ViewH}}function show(basicInfo){basicInfo.ScrollTop>.001?$(".neko").css("display","block"):$(".neko").css("display","none")}!function($){$.fn.nekoScroll=function(option){var defaultSetting={top:"0",scroWidth:"6px",z_index:9999,zoom:.9,borderRadius:"5px",right:"60px",nekoImg:"https://bu.dusays.com/2022/07/20/62d812db74be9.png",hoverMsg:"喵喵喵~",color:"#6f42c1",during:500,blog_body:"body"},setting=$.extend(defaultSetting,option),getThis=""!==this.prop("className")?"."+this.prop("className"):""!==this.prop("id")?"#"+this.prop("id"):this.prop("nodeName");0==$(".neko").length&&this.after('<div class="neko" id='+setting.nekoname+' data-msg="'+setting.hoverMsg+'"></div>');let basicInfo=getBasicInfo();return $(getThis).css({position:"fixed",width:setting.scroWidth,top:setting.top,height:basicInfo.Band_H*setting.zoom*basicInfo.ViewH*.01+"px","z-index":setting.z_index,"background-color":setting.bgcolor,"border-radius":setting.borderRadius,right:setting.right,"background-image":"url("+setting.scImg+")","background-image":"-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)","border-radius":"2em","background-size":"contain"}),$("#"+setting.nekoname).css({position:"fixed",top:basicInfo.Band_H*setting.zoom*basicInfo.ViewH*.01-50+"px","z-index":10*setting.z_index,right:setting.right,"background-image":"url("+setting.nekoImg+")"}),show(getBasicInfo()),$(window).scroll((function(){let basicInfo=getBasicInfo();show(basicInfo),$(getThis).css({position:"fixed",width:setting.scroWidth,top:setting.top,height:basicInfo.Band_H*setting.zoom*basicInfo.ViewH*.01+"px","z-index":setting.z_index,"background-color":setting.bgcolor,"border-radius":setting.borderRadius,right:setting.right,"background-image":"url("+setting.scImg+")","background-image":"-webkit-linear-gradient(45deg, rgba(255, 255, 255, 0.1) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, 0.1) 50%, rgba(255, 255, 255, 0.1) 75%, transparent 75%, transparent)","border-radius":"2em","background-size":"contain"}),$("#"+setting.nekoname).css({position:"fixed",top:basicInfo.Band_H*setting.zoom*basicInfo.ViewH*.01-50+"px","z-index":10*setting.z_index,right:setting.right,"background-image":"url("+setting.nekoImg+")"}),basicInfo.ScrollTop==basicInfo.S_V?$("#"+setting.nekoname).addClass("showMsg"):($("#"+setting.nekoname).removeClass("showMsg"),$("#"+setting.nekoname).attr("data-msg",setting.hoverMsg))})),this.click((function(e){btf.scrollToDest(0,500)})),$("#"+setting.nekoname).click((function(){btf.scrollToDest(0,500)})),this}}(jQuery),$(document).ready((function(){$("#myscoll").nekoScroll({bgcolor:"rgb(0 0 0 / .5)",borderRadius:"2em",zoom:.9})}))}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/console.js"/>
      <url>/js/console.js</url>
      
        <content type="html"><![CDATA[var now1 = new Date();function createtime1() {    var grt = new Date("01/07/2023 00:00:00"); //此处修改你的建站时间或者网站上线时间    now1.setTime(now1.getTime() + 250);    var days = (now1 - grt) / 1000 / 60 / 60 / 24;    var dnum = Math.floor(days);    var ascll = [        `欢迎来到稚的小窝!`,        `稚 is now 🍭🍭🍭`,        `  zzzzzzzzzzzzzzzzzyyyyyyy           yyyyyyyz:::::::::::::::z y:::::y         y:::::y z::::::::::::::z   y:::::y       y:::::y  zzzzzzzz::::::z     y:::::y     y:::::y         z::::::z       y:::::y   y:::::y         z::::::z         y:::::y y:::::y         z::::::z           y:::::y:::::y         z::::::z             y:::::::::y         z::::::zzzzzzzz        y:::::::y         z::::::::::::::z         y:::::y         z:::::::::::::::z        y:::::y          zzzzzzzzzzzzzzzzz       y:::::y                                  y:::::y                                  y:::::y                                  y:::::y                                  y:::::y                                  yyyyyyy                                                       `,        "小站已经苟活",        dnum,        "天啦!",        "©2023 By zy",    ];    setTimeout(        console.log.bind(            console,            `\n%c${ascll[0]} %c ${ascll[1]} %c ${ascll[2]} %c${ascll[3]}%c ${ascll[4]}%c ${ascll[5]}\n\n%c ${ascll[6]}\n`,            "color:#39c5bb",            "",            "color:#39c5bb",            "color:#39c5bb",            "",            "color:#39c5bb",            ""        )    );}createtime1();function createtime2() {    var ascll2 = [`NCC2-036`, `调用前置摄像头拍照成功，识别为「大聪明」`, `Photo captured: `, ` 🤪 `];    setTimeout(        console.log.bind(            console,            `%c ${ascll2[0]} %c ${ascll2[1]} %c \n${ascll2[2]} %c\n${ascll2[3]}`,            "color:white; background-color:#10bcc0",            "",            "",            'background:url("https://tc.azhezhezhe.com/img/202301071158211.png") no-repeat;font-size:450%'        )    );    setTimeout(console.log.bind(console, "%c WELCOME %c 欢迎光临", "color:white; background-color:#23c682", ""));    setTimeout(        console.warn.bind(            console,            "%c ⚡ Powered by zy🥝 %c 你正在访问稚的小窝",            "color:white; background-color:#f0ad4e",            ""        )    );    setTimeout(console.log.bind(console, "%c W23-12 %c 系统监测到你已打开控制台", "color:white; background-color:#4f90d9", ""));    setTimeout(        console.warn.bind(console, "%c S013-782 %c 你现在正处于监控中", "color:white; background-color:#d9534f", "")    );}createtime2();// 重写console方法console.log = function () { };console.error = function () { };console.warn = function () { };]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/js/console.min.js"/>
      <url>/js/console.min.js</url>
      
        <content type="html"><![CDATA[var now1=new Date;function createtime1(){var grt=new Date("01/07/2023 00:00:00");now1.setTime(now1.getTime()+250);var days=(now1-grt)/1e3/60/60/24,dnum,ascll=["欢迎来到稚的小窝!","稚 is now 🍭🍭🍭","  \n\nzzzzzzzzzzzzzzzzzyyyyyyy           yyyyyyy\nz:::::::::::::::z y:::::y         y:::::y \nz::::::::::::::z   y:::::y       y:::::y  \nzzzzzzzz::::::z     y:::::y     y:::::y   \n      z::::::z       y:::::y   y:::::y    \n     z::::::z         y:::::y y:::::y     \n    z::::::z           y:::::y:::::y      \n   z::::::z             y:::::::::y       \n  z::::::zzzzzzzz        y:::::::y        \n z::::::::::::::z         y:::::y         \nz:::::::::::::::z        y:::::y          \nzzzzzzzzzzzzzzzzz       y:::::y           \n                       y:::::y            \n                      y:::::y             \n                     y:::::y              \n                    y:::::y               \n                   yyyyyyy                                                       \n","小站已经苟活",Math.floor(days),"天啦!","©2023 By zy"];setTimeout(console.log.bind(console,`\n%c${ascll[0]} %c ${ascll[1]} %c ${ascll[2]} %c${ascll[3]}%c ${ascll[4]}%c ${ascll[5]}\n\n%c ${ascll[6]}\n`,"color:#39c5bb","","color:#39c5bb","color:#39c5bb","","color:#39c5bb",""))}function createtime2(){var ascll2=["NCC2-036","调用前置摄像头拍照成功，识别为「大聪明」","Photo captured: "," 🤪 "];setTimeout(console.log.bind(console,`%c ${ascll2[0]} %c ${ascll2[1]} %c \n${ascll2[2]} %c\n${ascll2[3]}`,"color:white; background-color:#10bcc0","","",'background:url("https://tc.azhezhezhe.com/img/202301071158211.png") no-repeat;font-size:450%')),setTimeout(console.log.bind(console,"%c WELCOME %c 欢迎光临","color:white; background-color:#23c682","")),setTimeout(console.warn.bind(console,"%c ⚡ Powered by zy🥝 %c 你正在访问稚的小窝","color:white; background-color:#f0ad4e","")),setTimeout(console.log.bind(console,"%c W23-12 %c 系统监测到你已打开控制台","color:white; background-color:#4f90d9","")),setTimeout(console.warn.bind(console,"%c S013-782 %c 你现在正处于监控中","color:white; background-color:#d9534f",""))}createtime1(),createtime2(),console.log=function(){},console.error=function(){},console.warn=function(){};]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
